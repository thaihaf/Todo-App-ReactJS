{"version":3,"file":"static/js/31.6c288e1c.chunk.js","mappings":"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","sources":["pages/Tasks/Components/actions/EditTask/index.js","pages/Tasks/Components/actions/SubmitTask/index.js","components/Task/index.js","hooks/useTaskForm/useTaskForm.js","pages/Tasks/Components/actions/DeleteTask/index.js"],"sourcesContent":["// lib\r\nimport { createUseStyles } from \"react-jss\";\r\nimport clsx from \"clsx\";\r\nimport { useState } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nimport taskAPI from \"../../../../../untils/fetchAPI/taskAPI\";\r\nimport useTaskForm from \"../../../../../hooks/useTaskForm/useTaskForm\";\r\nimport { getData } from \"../../../../../redux/slice/dataSlice\";\r\n\r\nconst useStyles = createUseStyles({\r\n  EditTask: {\r\n    top: \"0\",\r\n    left: \"0\",\r\n    width: \"100vw\",\r\n    height: \"100vh\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    zIndex: \"11\",\r\n    color: \"#FFFFFF\",\r\n  },\r\n  editTask__bg: {\r\n    backgroundColor: \"#000\",\r\n    opacity: \"70%\",\r\n  },\r\n  editTask__container: {\r\n    width: \"42rem\",\r\n    minWidth: \"48rem\",\r\n    marginTop: \"6rem\",\r\n    padding: \"2rem\",\r\n    backgroundColor: \"#1D1D27\",\r\n    textAlign: \"left\",\r\n    borderRadius: \"1.6rem\",\r\n  },\r\n  editTask__caption: {\r\n    fontSize: \"2rem\",\r\n    textTransform: \"capitalize\",\r\n    fontWeight: \"bold\",\r\n    marginBottom: \"2rem\",\r\n  },\r\n  editTask__title: {\r\n    fontSize: \"1.6rem\",\r\n    textTransform: \"capitalize\",\r\n    marginBottom: \"1rem\",\r\n  },\r\n  editTask__colors: {\r\n    display: \"grid\",\r\n    gap: \"1.5rem\",\r\n    gridTemplateColumns: \"repeat(auto-fit, 6rem)\",\r\n  },\r\n  editTask__color: {\r\n    width: \"6rem\",\r\n    height: \"5rem\",\r\n    backgroundColor: \"transparent\",\r\n    cursor: \"pointer\",\r\n    borderRadius: \"1.2rem\",\r\n    transition: \"all 0.1s ease-in-out\",\r\n    position: \"relative\",\r\n  },\r\n  editTask__buttons: {\r\n    gap: \"1rem\",\r\n    marginTop: \"5rem\",\r\n  },\r\n  editTask__group: {\r\n    marginBottom: \"2rem\",\r\n    width: \"100%\",\r\n  },\r\n  editTask__err: {\r\n    color: \"red\",\r\n    padding: \"1rem\",\r\n    fontSize: \"1.4rem\",\r\n  },\r\n  editTask__listColls: {\r\n    height: \"16rem\",\r\n    overflowY: \"scroll\",\r\n    borderRadius: \"1.2rem\",\r\n    border: \"3px solid var(--background-color-header)\",\r\n  },\r\n  editTask__itemColl: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    padding: \"1rem\",\r\n    borderBottom: \"2px solid var(--background-color-header)\",\r\n    gap: \"1rem\",\r\n    cursor: \"pointer\",\r\n  },\r\n  editTask__checkbox: {\r\n    color: \"var(--bg-btn-pink)\",\r\n    backgroundColor: \"transparent\",\r\n    width: \"1.7rem\",\r\n    height: \"1.7rem\",\r\n  },\r\n  editTask__lable: {\r\n    fontSize: \"1.6rem\",\r\n  },\r\n});\r\n\r\nconst EditTask = ({\r\n  task,\r\n  listCollections,\r\n  toggleFunc,\r\n  displayVal,\r\n  handleChangeData,\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  const [listSelections, setListSelections] = useState(() => {\r\n    let a = task.categories.map((category) => {\r\n      return category.id;\r\n    });\r\n    return a;\r\n  });\r\n\r\n  const HandleEditTask = async (values) => {\r\n    let title = values.title;\r\n    let categoryIds = listSelections;\r\n    let status = \"IN_PROGRESS\";\r\n    let data = { title, categoryIds, status };\r\n    try {\r\n      await taskAPI().updateTask(task.id, data);\r\n\r\n      toast.success(\"🦄 Update Task Successful!\");\r\n      toggleFunc(false)();\r\n\r\n      handleChangeData(getData());\r\n    } catch (error) {\r\n      let errForm = error.message;\r\n      toast.error(errForm);\r\n    }\r\n  };\r\n\r\n  const { handleChange, handleSubmit, values, errors } = useTaskForm(\r\n    \"edit\",\r\n    HandleEditTask,\r\n    task\r\n  );\r\n\r\n  const closeTabFunc = () => (event) => {\r\n    toggleFunc(false)();\r\n  };\r\n\r\n  const handleChangeOption = (id) => (event) => {\r\n    let checked = event.target.checked;\r\n    let existing = listSelections.includes(id);\r\n\r\n    if (existing && !checked) {\r\n      const newArr = listSelections.filter((select) => select !== id);\r\n      setListSelections(newArr);\r\n    } else if (!existing && checked) {\r\n      setListSelections([...listSelections, id]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={clsx(\r\n        classes.EditTask,\r\n        \"m-auto position-fixed\",\r\n        !displayVal && \"d-none\"\r\n      )}\r\n    >\r\n      <div\r\n        className={clsx(classes.editTask__bg, \"w-100 h-100 position-absolute\")}\r\n        onClick={closeTabFunc(false)}\r\n      ></div>\r\n\r\n      <div className={clsx(classes.editTask__container, \"position-absolute\")}>\r\n        <form method=\"post\" onSubmit={handleSubmit}>\r\n          <div className=\"editTask__top d-flex w-100\">\r\n            <div className={clsx(classes.editTask__caption, \"mr-auto\")}>\r\n              Edit Task\r\n            </div>\r\n            <div className=\"editTask__close-btn\" onClick={closeTabFunc(false)}>\r\n              <ion-icon name=\"close\"></ion-icon>\r\n            </div>\r\n          </div>\r\n\r\n          <div className={clsx(classes.editTask__group, \"bar-title\")}>\r\n            <div className={clsx(classes.editTask__title)}>Title</div>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"My Task\"\r\n              className=\"btn--outline w-100 py-3\"\r\n              style={{ fontSize: \"1.6rem\" }}\r\n              name=\"title\"\r\n              value={values.title}\r\n              onChange={handleChange}\r\n            />\r\n            {errors.title && (\r\n              <div className={clsx(classes.editTask__err)}>*{errors.title}</div>\r\n            )}\r\n          </div>\r\n\r\n          <div className={clsx(classes.editTask__group, \"bar-listColl\")}>\r\n            <div className={clsx(classes.editTask__title)}>List Collection</div>\r\n            <div className={clsx(classes.editTask__listColls)}>\r\n              {listCollections.map((item) => {\r\n                return (\r\n                  <div\r\n                    key={item.id}\r\n                    className={clsx(classes.editTask__itemColl)}\r\n                  >\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      className={clsx(classes.editTask__checkbox)}\r\n                      checked={listSelections.find((id) => id === item.id) || \"\"}\r\n                      value={true}\r\n                      onChange={handleChangeOption(item.id)}\r\n                    />\r\n                    <span className={clsx(classes.editTask__lable)}>\r\n                      {item.name}\r\n                    </span>\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n          </div>\r\n\r\n          <div className={clsx(classes.editTask__buttons, \"w-100 d-flex\")}>\r\n            <button\r\n              className=\"editTask__button button btn--none-border btn--hover-bg-gray-light ml-auto mb-0\"\r\n              style={{ backgroundColor: \"#3D3C50\" }}\r\n              type=\"submit\"\r\n            >\r\n              Submit\r\n            </button>\r\n            <button\r\n              type=\"reset\"\r\n              className=\"editTask__button button btn--none-border btn--hover-bg-gray mb-0\"\r\n              onClick={closeTabFunc()}\r\n            >\r\n              Cancel\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditTask;\r\n","// lib\r\nimport { createUseStyles } from \"react-jss\";\r\nimport clsx from \"clsx\";\r\nimport { toast } from \"react-toastify\";\r\nimport taskAPI from \"../../../../../untils/fetchAPI/taskAPI\";\r\n\r\nconst useStyles = createUseStyles({\r\n  SubmitTask: {\r\n    top: \"0\",\r\n    left: \"0\",\r\n    width: \"100vw\",\r\n    height: \"100vh\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    zIndex: \"11\",\r\n    color: \"#FFFFFF\",\r\n  },\r\n  submitTask__bg: {\r\n    backgroundColor: \"#000\",\r\n    opacity: \"70%\",\r\n  },\r\n  submitTask__container: {\r\n    width: \"42rem\",\r\n    minWidth: \"48rem\",\r\n    marginTop: \"6rem\",\r\n    padding: \"2rem\",\r\n    backgroundColor: \"#1D1D27\",\r\n    textAlign: \"left\",\r\n    borderRadius: \"1.6rem\",\r\n  },\r\n  submitTask__caption: {\r\n    fontSize: \"2rem\",\r\n    textTransform: \"capitalize\",\r\n    fontWeight: \"bold\",\r\n    marginBottom: \"2rem\",\r\n  },\r\n  submitTask__title: {\r\n    fontSize: \"1.6rem\",\r\n    textTransform: \"capitalize\",\r\n    marginBottom: \"1rem\",\r\n  },\r\n\r\n  submitTask__buttons: {\r\n    gap: \"1rem\",\r\n    marginTop: \"3rem\",\r\n    width: \"100%\",\r\n    display: \"flex\",\r\n  },\r\n  submitTask__bar: {\r\n    marginBottom: \"2rem\",\r\n    width: \"100%\",\r\n  },\r\n\r\n  submitTask__detail: {\r\n    color: \"gray\",\r\n    fontSize: \"1.6rem\",\r\n  },\r\n});\r\n\r\nconst SubmitTask = ({ task, toggleFunc, displayVal, handleChangeData }) => {\r\n  const classes = useStyles();\r\n\r\n  const HandleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const title = task.title;\r\n    const categoryIds = task.categories.map((category) => {\r\n      return category.id;\r\n    });\r\n    const status = \"IN_PROGRESS\";\r\n\r\n    let data = { title, categoryIds, status };\r\n\r\n    try {\r\n      await taskAPI().updateTask(task.id, data);\r\n\r\n      toast.success(\"🦄 Submit Task Successful!\");\r\n      toggleFunc(false)();\r\n\r\n      // handleChangeData(await taskAPI().getTasks(`api/tasks?limit=6`));\r\n    } catch (error) {\r\n      let errForm = error.message;\r\n      toast.error(errForm);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={clsx(\r\n        classes.SubmitTask,\r\n        \"m-auto position-fixed\",\r\n        !displayVal && \"d-none\"\r\n      )}\r\n    >\r\n      <div\r\n        className={clsx(\r\n          classes.submitTask__bg,\r\n          \"w-100 h-100 position-absolute\"\r\n        )}\r\n        onClick={toggleFunc(false)}\r\n      ></div>\r\n\r\n      <div className={clsx(classes.submitTask__container, \"position-absolute\")}>\r\n        <form onSubmit={HandleSubmit}>\r\n          <div className=\"submitTask__top d-flex w-100\">\r\n            <div className={clsx(classes.submitTask__caption, \"mr-auto\")}>\r\n              submit Task\r\n            </div>\r\n            <div className=\"submitTask__close-btn\" onClick={toggleFunc(false)}>\r\n              <ion-icon name=\"close\"></ion-icon>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"submitTask__details\">\r\n            <div className={clsx(classes.submitTask__detail)}>\r\n              Are you sure you want to submit?\r\n            </div>\r\n            <div className={clsx(classes.submitTask__detail)}>\r\n              This action cannot be undone.\r\n            </div>\r\n          </div>\r\n\r\n          <div className={clsx(classes.submitTask__buttons)}>\r\n            <button\r\n              className=\"submitTask__button button btn--none-border ml-auto mb-0\"\r\n              style={{ backgroundColor: \"red\" }}\r\n              type=\"submit\"\r\n            >\r\n              Submit\r\n            </button>\r\n            <button\r\n              type=\"reset\"\r\n              className=\"submitTask__button button btn--none-border btn--hover-bg-gray mb-0\"\r\n              onClick={toggleFunc(false)}\r\n            >\r\n              Cancel\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SubmitTask;\r\n","import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { createUseStyles } from \"react-jss\";\r\nimport clsx from \"clsx\";\r\n\r\nimport EditTask from \"../../pages/Tasks/Components/actions/EditTask\";\r\nimport DeleteTask from \"../../pages/Tasks/Components/actions/DeleteTask\";\r\nimport SubmitTask from \"../../pages/Tasks/Components/actions/SubmitTask\";\r\n\r\nconst useStyles = createUseStyles({\r\n  task__bar: {\r\n    borderRadius: \"1.3rem\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    gap: \"1rem\",\r\n    width: \"100%\",\r\n    position: \"relative\",\r\n    minHeight: \"15rem\",\r\n    transition: \"all 0.2s linear\",\r\n  },\r\n  task__btns: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    position: \"relative\",\r\n    padding: \"1rem\",\r\n    borderBottom: \"2px solid var(--bg-btn-pink)\",\r\n  },\r\n  collection__actions: {\r\n    minWidth: \"max-content\",\r\n    top: \"101%\",\r\n    right: \"4%\",\r\n    borderBottomRightRadius: \"1.1rem\",\r\n    borderBottomLeftRadius: \"1.1rem\",\r\n    backgroundColor: \"#1e1e29\",\r\n    zIndex: \"2\",\r\n    border: \"2px solid var(--bg-btn-pink)\",\r\n    position: \"absolute\",\r\n  },\r\n  collection__action: {\r\n    fontSize: \"1.3rem\",\r\n    padding: \"1.2rem 1.8rem\",\r\n  },\r\n  task__title: {\r\n    width: \"100%\",\r\n    fontSize: \"1.6rem\",\r\n    flexGrow: \"1\",\r\n    padding: \"0 1rem 1rem\",\r\n  },\r\n  task__top: {\r\n    width: \"100%\",\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n  },\r\n  task__checkbox: {\r\n    position: \"relative\",\r\n    width: \"2rem\",\r\n    height: \"2rem\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    borderRadius: \"0.3rem\",\r\n    border: \"2px solid var(--bg-btn-pink)\",\r\n  },\r\n  task__input: {\r\n    position: \"absolute\",\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    opacity: \"0\",\r\n  },\r\n  task__selectIcon: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    width: \"2rem\",\r\n    height: \"2rem\",\r\n    borderRadius: \"0.3rem\",\r\n    backgroundColor: \"var(--bg-btn-pink)\",\r\n  },\r\n});\r\n\r\nconst useActions = () => {\r\n  const [editTaskDisplayVal, setEditTaskDisplayVal] = useState(false);\r\n  const [deleteTaskDisplayVal, setDeleteTaskDisplayVal] = useState(false);\r\n  const [submitTaskDisplayVal, setSubmitTaskDisplayVal] = useState(false);\r\n\r\n  // start - Taskection\r\n  const toggleEditTaskDisplayVal = (value) => (event) => {\r\n    setEditTaskDisplayVal(value);\r\n  };\r\n  const toggleDeleteTaskDisplayVal = (value) => (event) => {\r\n    setDeleteTaskDisplayVal(value);\r\n  };\r\n  const toggleSubmitTaskDisplayVal = (value) => (event) => {\r\n    setSubmitTaskDisplayVal(value);\r\n  };\r\n\r\n  return {\r\n    toggleEditTaskDisplayVal,\r\n    toggleDeleteTaskDisplayVal,\r\n    toggleSubmitTaskDisplayVal,\r\n    editTaskDisplayVal,\r\n    deleteTaskDisplayVal,\r\n    submitTaskDisplayVal,\r\n  };\r\n};\r\n\r\nexport default function Task({\r\n  listCollections,\r\n  task,\r\n  handleChangeData,\r\n  handleSelectTasks,\r\n}) {\r\n  const classes = useStyles();\r\n  const {\r\n    toggleEditTaskDisplayVal,\r\n    toggleDeleteTaskDisplayVal,\r\n    toggleSubmitTaskDisplayVal,\r\n    editTaskDisplayVal,\r\n    deleteTaskDisplayVal,\r\n    submitTaskDisplayVal,\r\n  } = useActions();\r\n\r\n  const [displayActionsBarVal, setDisplayActionsBarVal] = useState(false);\r\n  const toggelActionsBar = (e) => {\r\n    setDisplayActionsBarVal(!displayActionsBarVal);\r\n  };\r\n\r\n  const [checkboxSelected, setCheckboxSelected] = useState(false);\r\n  const handleSelectionChange = (id) => (e) => {\r\n    let checked = e.target.checked;\r\n    setCheckboxSelected(checked);\r\n    handleSelectTasks(id, checked);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={clsx(classes.task__bar)}\r\n      style={{\r\n        border: checkboxSelected\r\n          ? `3px solid var(--bg-btn-pink)`\r\n          : \"3px solid var(--bg-btn-gray)\",\r\n        backgroundColor: \"var(--background-color-header)\",\r\n      }}\r\n    >\r\n      <div className={clsx(classes.task__btns)}>\r\n        <div className={clsx(classes.task__top)}>\r\n          <div className={clsx(classes.task__checkbox)}>\r\n            {checkboxSelected && (\r\n              <div className={clsx(classes.task__selectIcon)}>\r\n                <ion-icon name=\"checkmark\"></ion-icon>\r\n              </div>\r\n            )}\r\n            <input\r\n              type=\"checkbox\"\r\n              className={clsx(classes.task__input)}\r\n              onChange={handleSelectionChange(task.id)}\r\n            />\r\n          </div>\r\n          <ion-icon\r\n            name=\"ellipsis-vertical\"\r\n            style={{ fontSize: \"2rem\", marginLeft: \"auto\" }}\r\n            onClick={toggelActionsBar}\r\n          ></ion-icon>\r\n        </div>\r\n\r\n        <div\r\n          className={clsx(\r\n            classes.collection__actions,\r\n            !displayActionsBarVal && \"d-none\"\r\n          )}\r\n        >\r\n          <div\r\n            className={clsx(\r\n              classes.collection__action,\r\n              \" button btn--none-border btn--full-width btn--none-radius btn--hover-bg-gray m-0 text-left text-capitalize\"\r\n            )}\r\n            onClick={toggleSubmitTaskDisplayVal(true)}\r\n          >\r\n            Submit Task\r\n          </div>\r\n          <div\r\n            className={clsx(\r\n              classes.collection__action,\r\n              \" button btn--none-border btn--full-width btn--none-radius btn--hover-bg-gray m-0 text-left text-capitalize\"\r\n            )}\r\n            onClick={toggleEditTaskDisplayVal(true)}\r\n          >\r\n            edit task\r\n          </div>\r\n          <div\r\n            className={clsx(\r\n              classes.collection__action,\r\n              \" button btn--none-border btn--full-width btn--none-radius btn--hover-bg-gray m-0 text-left text-capitalize\"\r\n            )}\r\n            onClick={toggleDeleteTaskDisplayVal(true)}\r\n          >\r\n            delete task\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className={clsx(classes.task__title)}>{task.title}</div>\r\n\r\n      <EditTask\r\n        task={task}\r\n        listCollections={listCollections}\r\n        displayVal={editTaskDisplayVal}\r\n        toggleFunc={toggleEditTaskDisplayVal}\r\n        handleChangeData={handleChangeData}\r\n      />\r\n      <SubmitTask\r\n        task={task}\r\n        displayVal={submitTaskDisplayVal}\r\n        toggleFunc={toggleSubmitTaskDisplayVal}\r\n        handleChangeData={handleChangeData}\r\n      />\r\n      <DeleteTask\r\n        taskIDs={task.id}\r\n        displayVal={deleteTaskDisplayVal}\r\n        toggleFunc={toggleDeleteTaskDisplayVal}\r\n        handleChangeData={handleChangeData}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import { useState } from \"react\";\r\nimport IsEmptyObject from \"../../untils/checkObject/IsEmptyObject\";\r\n\r\nconst useTaskForm = (type, HandleEditTask, task) => {\r\n  const [values, setValues] = useState({ title: task ? task.title : \"\" });\r\n  const [errors, setErrors] = useState({});\r\n\r\n  const setEmptyValues = () => {\r\n    setValues({ ...values, title: \"\" });\r\n    setErrors({});\r\n  };\r\n  const validateInfo = (values) => {\r\n    let errors = {};\r\n\r\n    const titleTemp = values.title.trim();\r\n\r\n    if (!titleTemp) {\r\n      errors.title = \"Title must be required\";\r\n    } else if (titleTemp.length < 2) {\r\n      errors.title = \"Name to be 6 charactor or more\";\r\n    }\r\n\r\n    return errors;\r\n  };\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setValues({ ...values, [name]: value });\r\n  };\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    let errorsTemp = validateInfo(values);\r\n    setErrors(errorsTemp);\r\n\r\n    if (IsEmptyObject(errorsTemp)) {\r\n      HandleEditTask(values);\r\n      if (type === \"create\") {\r\n        setEmptyValues();\r\n      }\r\n    }\r\n  };\r\n\r\n  return { handleChange, handleSubmit, setEmptyValues, values, errors };\r\n};\r\n\r\nexport default useTaskForm;\r\n","// lib\r\nimport { createUseStyles } from \"react-jss\";\r\nimport clsx from \"clsx\";\r\nimport { toast } from \"react-toastify\";\r\nimport taskAPI from \"../../../../../untils/fetchAPI/taskAPI\";\r\nimport { getData } from \"../../../../../redux/slice/dataSlice\";\r\n\r\nconst useStyles = createUseStyles({\r\n  DeleteTask: {\r\n    top: \"0\",\r\n    left: \"0\",\r\n    width: \"100vw\",\r\n    height: \"100vh\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    zIndex: \"11\",\r\n    color: \"#FFFFFF\",\r\n  },\r\n  deleteTask__bg: {\r\n    backgroundColor: \"#000\",\r\n    opacity: \"70%\",\r\n  },\r\n  deleteTask__container: {\r\n    width: \"42rem\",\r\n    minWidth: \"48rem\",\r\n    marginTop: \"6rem\",\r\n    padding: \"2rem\",\r\n    backgroundColor: \"#1D1D27\",\r\n    textAlign: \"left\",\r\n    borderRadius: \"1.6rem\",\r\n  },\r\n  deleteTask__caption: {\r\n    fontSize: \"2rem\",\r\n    textTransform: \"capitalize\",\r\n    fontWeight: \"bold\",\r\n    marginBottom: \"2rem\",\r\n  },\r\n  deleteTask__title: {\r\n    fontSize: \"1.6rem\",\r\n    textTransform: \"capitalize\",\r\n    marginBottom: \"1rem\",\r\n  },\r\n\r\n  deleteTask__buttons: {\r\n    gap: \"1rem\",\r\n    marginTop: \"3rem\",\r\n    width: \"100%\",\r\n    display: \"flex\",\r\n  },\r\n  deleteTask__bar: {\r\n    marginBottom: \"2rem\",\r\n    width: \"100%\",\r\n  },\r\n\r\n  deleteTask__detail: {\r\n    color: \"gray\",\r\n    fontSize: \"1.6rem\",\r\n  },\r\n});\r\n\r\nconst DeleteTask = ({ taskIDs, toggleFunc, displayVal, handleChangeData }) => {\r\n  const classes = useStyles();\r\n\r\n  const HandleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      if (typeof taskIDs === \"object\") {\r\n        taskIDs.forEach(async (taskID) => {\r\n          await taskAPI().deleteTask(taskID);\r\n          handleChangeData(getData());\r\n        });\r\n      } else {\r\n        await taskAPI().deleteTask(taskIDs);\r\n        handleChangeData(getData());\r\n      }\r\n\r\n      toggleFunc(false)();\r\n      toast.success(\"🦄 Delete Task Successful!\");\r\n    } catch (error) {\r\n      let errForm = error.message;\r\n      toast.error(errForm);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={clsx(\r\n        classes.DeleteTask,\r\n        \"m-auto position-fixed\",\r\n        !displayVal && \"d-none\"\r\n      )}\r\n    >\r\n      <div\r\n        className={clsx(\r\n          classes.deleteTask__bg,\r\n          \"w-100 h-100 position-absolute\"\r\n        )}\r\n        onClick={toggleFunc(false)}\r\n      ></div>\r\n\r\n      <div className={clsx(classes.deleteTask__container, \"position-absolute\")}>\r\n        <form onSubmit={HandleSubmit}>\r\n          <div className=\"deleteTask__top d-flex w-100\">\r\n            <div className={clsx(classes.deleteTask__caption, \"mr-auto\")}>\r\n              delete Task\r\n            </div>\r\n            <div className=\"deleteTask__close-btn\" onClick={toggleFunc(false)}>\r\n              <ion-icon name=\"close\"></ion-icon>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"deleteTask__details\">\r\n            <div className={clsx(classes.deleteTask__detail)}>\r\n              Are you sure you want to delete?\r\n            </div>\r\n            <div className={clsx(classes.deleteTask__detail)}>\r\n              This action cannot be undone.\r\n            </div>\r\n          </div>\r\n\r\n          <div className={clsx(classes.deleteTask__buttons)}>\r\n            <button\r\n              className=\"deleteTask__button button btn--none-border ml-auto mb-0\"\r\n              style={{ backgroundColor: \"red\" }}\r\n              type=\"submit\"\r\n            >\r\n              Delete\r\n            </button>\r\n            <button\r\n              type=\"reset\"\r\n              className=\"deleteTask__button button btn--none-border btn--hover-bg-gray mb-0\"\r\n              onClick={toggleFunc(false)}\r\n            >\r\n              Cancel\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DeleteTask;\r\n"],"names":["useStyles","createUseStyles","EditTask","top","left","width","height","display","justifyContent","zIndex","color","editTask__bg","backgroundColor","opacity","editTask__container","minWidth","marginTop","padding","textAlign","borderRadius","editTask__caption","fontSize","textTransform","fontWeight","marginBottom","editTask__title","editTask__colors","gap","gridTemplateColumns","editTask__color","cursor","transition","position","editTask__buttons","editTask__group","editTask__err","editTask__listColls","overflowY","border","editTask__itemColl","alignItems","borderBottom","editTask__checkbox","editTask__lable","task","listCollections","toggleFunc","displayVal","handleChangeData","classes","useState","categories","map","category","id","listSelections","setListSelections","HandleEditTask","values","title","data","categoryIds","status","taskAPI","updateTask","toast","getData","errForm","message","useTaskForm","handleChange","handleSubmit","errors","closeTabFunc","event","className","clsx","onClick","method","onSubmit","name","type","placeholder","style","value","onChange","item","checked","find","target","existing","includes","newArr","filter","select","SubmitTask","submitTask__bg","submitTask__container","submitTask__caption","submitTask__title","submitTask__buttons","submitTask__bar","submitTask__detail","HandleSubmit","e","preventDefault","task__bar","flexDirection","minHeight","task__btns","collection__actions","right","borderBottomRightRadius","borderBottomLeftRadius","collection__action","task__title","flexGrow","task__top","task__checkbox","task__input","task__selectIcon","Task","handleSelectTasks","editTaskDisplayVal","setEditTaskDisplayVal","deleteTaskDisplayVal","setDeleteTaskDisplayVal","submitTaskDisplayVal","setSubmitTaskDisplayVal","toggleEditTaskDisplayVal","toggleDeleteTaskDisplayVal","toggleSubmitTaskDisplayVal","useActions","displayActionsBarVal","setDisplayActionsBarVal","checkboxSelected","setCheckboxSelected","marginLeft","DeleteTask","taskIDs","setValues","setErrors","setEmptyValues","errorsTemp","titleTemp","trim","length","validateInfo","IsEmptyObject","deleteTask__bg","deleteTask__container","deleteTask__caption","deleteTask__title","deleteTask__buttons","deleteTask__bar","deleteTask__detail","forEach","taskID","deleteTask"],"sourceRoot":""}