{"version":3,"file":"static/js/806.ac1818f1.chunk.js","mappings":"iOAaMA,GAAaC,EAAAA,EAAAA,OAAK,kBAAM,iCACxBC,GAAgBD,EAAAA,EAAAA,OAAK,kBAAM,iCAE3BE,GAAYC,EAAAA,EAAAA,IAAgB,CAChCC,KAAK,CACHC,SAAU,SACVC,OAAS,QAEXC,QAAS,CACPF,SAAU,OAEZG,YAAa,CACXC,SAAU,OACVC,WAAY,OACZJ,OAAQ,UAEVK,kBAAmB,CACjBC,MAAO,OACPC,QAAS,OACTC,IAAK,SACLC,WAAY,mBAEdC,cAAe,CACbF,IAAK,QAEPG,aAAc,CACZC,QAAS,2BACTZ,OAAQ,OACRa,aAAc,YAIH,SAASf,IACtB,IAAMgB,EAAUlB,IACVmB,GAAWC,EAAAA,EAAAA,MAEXC,GAAcC,EAAAA,EAAAA,IAAYC,EAAAA,IAChC,GAA4CC,EAAAA,EAAAA,WAAS,GAArD,eAAOC,EAAP,KAAuBC,EAAvB,KACA,GAAkDF,EAAAA,EAAAA,WAAS,GAA3D,eAAOG,EAAP,KAA0BC,EAA1B,MAEAC,EAAAA,EAAAA,YAAU,WACRV,GAASW,EAAAA,EAAAA,QACR,CAACX,KACJU,EAAAA,EAAAA,YAAU,WACRR,GAAeA,EAAYU,OAAS,EAChCL,GAAkB,GAClBA,GAAkB,KACrB,CAACL,IAEJ,IAAMW,EAA0B,SAACC,GAAD,OAAW,SAACC,GAC1CN,EAAqBK,KAGvB,OACE,iBAAKE,WAAWC,EAAAA,EAAAA,GAAKlB,EAAQhB,MAA7B,WACE,iBAAKiC,WAAWC,EAAAA,EAAAA,GAAK,UAAWlB,EAAQb,SAAxC,WACE,iBACE8B,WAAWC,EAAAA,EAAAA,GACTlB,EAAQmB,OACR,SACA,QACAZ,EAAiB,SAAW,GAC5B,qBACA,2BAPJ,WAUE,gBACEU,WAAWC,EAAAA,EAAAA,GACTlB,EAAQZ,YACPmB,EAA2B,GAAV,QAAc,eAHpC,SAMGA,EAAiB,cAAgB,8BAGpC,iBACEU,WAAWC,EAAAA,EAAAA,GACTlB,EAAQJ,cACRW,EAAiB,SAAW,SAHhC,WAME,mBACEU,WAAWC,EAAAA,EAAAA,GACTlB,EAAQH,aACR,eACCU,EAA4B,GAAX,SAClB,iFALJ,UAQE,qBAAUa,KAAK,sBAGjB,oBACEH,WAAWC,EAAAA,EAAAA,GACTlB,EAAQH,aACR,eACA,8EAEFwB,QAASP,GAAwB,GANnC,WAQE,qBAAUM,KAAK,gBACdb,EAAiB,GAAK,sCAK7B,gBACEU,WAAWC,EAAAA,EAAAA,GAAKlB,EAAQT,kBAAmB,qBAC3C+B,MAAO,CACLC,oBAAoB,UAAD,OAAYhB,EAAiB,IAAM,IAAnC,UAHvB,SAMGA,GACCJ,GACAA,EAAYqB,KAAI,SAACC,GACf,OAAO,SAAC9C,EAAD,CAAgC8C,WAAYA,GAA3BA,EAAWC,aAK3C,SAAC7C,EAAD,CACE8C,WAAYb,EACZc,WAAYnB","sources":["pages/Categories/index.js"],"sourcesContent":["// lib\r\nimport { createUseStyles } from \"react-jss\";\r\nimport { useState, useEffect } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { lazy } from \"react\";\r\nimport \"./style.css\"\r\n\r\n// Component\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getCategories } from \"../../redux/slice/categoriesSlice\";\r\nimport { categoriesSelector } from \"../../redux/selectors\";\r\n\r\nconst Collection = lazy(() => import(\"../../components/Category\"));\r\nconst AddCollection = lazy(() => import(\"./Components/actions/AddCollection\"));\r\n\r\nconst useStyles = createUseStyles({\r\n  Home:{\r\n    maxWidth: \"100rem\",\r\n    margin : \"auto\"\r\n  },\r\n  content: {\r\n    maxWidth: \"80%\",\r\n  },\r\n  home__title: {\r\n    fontSize: \"3rem\",\r\n    fontWeight: \"bold\",\r\n    margin: \"2rem 0\",\r\n  },\r\n  home__collections: {\r\n    width: \"100%\",\r\n    display: \"grid\",\r\n    gap: \"1.7rem\",\r\n    transition: \"all 0.3s linear\",\r\n  },\r\n  home__actions: {\r\n    gap: \"1rem\",\r\n  },\r\n  home__action: {\r\n    padding: \"1.2rem 2.4rem !important\",\r\n    margin: \"auto\",\r\n    borderRadius: \"1.5rem\",\r\n  },\r\n});\r\n\r\nexport default function Home() {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  const collections = useSelector(categoriesSelector);\r\n  const [haveCollection, setHaveCollection] = useState(false);\r\n  const [addCollDisplayVal, setAddCollDisplayVal] = useState(false);\r\n\r\n  useEffect(() => {\r\n    dispatch(getCategories());\r\n  }, [dispatch]);\r\n  useEffect(() => {\r\n    collections && collections.length > 0\r\n      ? setHaveCollection(true)\r\n      : setHaveCollection(false);\r\n  }, [collections]);\r\n\r\n  const toggleAddCollDisplayVal = (value) => (event) => {\r\n    setAddCollDisplayVal(value);\r\n  };\r\n\r\n  return (\r\n    <div className={clsx(classes.Home)}>\r\n      <div className={clsx(\"content\", classes.content)}>\r\n        <div\r\n          className={clsx(\r\n            classes.topBar,\r\n            \"topBar\",\r\n            \"w-100\",\r\n            haveCollection ? \"d-flex\" : \"\",\r\n            \"align-items-center\",\r\n            \"justify-content-between\"\r\n          )}\r\n        >\r\n          <div\r\n            className={clsx(\r\n              classes.home__title,\r\n              !haveCollection ? \"w-100\" : \"\", \"home__title\"\r\n            )}\r\n          >\r\n            {haveCollection ? \"Collections\" : \"You have no collections.\"}\r\n          </div>\r\n\r\n          <div\r\n            className={clsx(\r\n              classes.home__actions,\r\n              haveCollection ? \"d-flex\" : \"w-100\"\r\n            )}\r\n          >\r\n            <button\r\n              className={clsx(\r\n                classes.home__action,\r\n                \"home__action\",\r\n                !haveCollection ? \"d-none\" : \"\",\r\n                \"searchCollection button btn--flex btn--bg-gray btn--border btn--hover-bg-gray\"\r\n              )}\r\n            >\r\n              <ion-icon name=\"search-outline\"></ion-icon>\r\n            </button>\r\n\r\n            <button\r\n              className={clsx(\r\n                classes.home__action,\r\n                \"home__action\",\r\n                \"addCollection button btn--flex btn--bg-gray btn--border btn--hover-bg-gray\"\r\n              )}\r\n              onClick={toggleAddCollDisplayVal(true)}\r\n            >\r\n              <ion-icon name=\"add-outline\"></ion-icon>\r\n              {haveCollection ? \"\" : \"Add Your First Collection\"}\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        <div\r\n          className={clsx(classes.home__collections, \"home__collections\")}\r\n          style={{\r\n            gridTemplateColumns: `repeat(${haveCollection ? \"2\" : \"1\"},1fr)`,\r\n          }}\r\n        >\r\n          {haveCollection &&\r\n            collections &&\r\n            collections.map((collection) => {\r\n              return <Collection key={collection.id} collection={collection} />;\r\n            })}\r\n        </div>\r\n      </div>\r\n\r\n      <AddCollection\r\n        toggleFunc={toggleAddCollDisplayVal}\r\n        displayVal={addCollDisplayVal}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n"],"names":["Collection","lazy","AddCollection","useStyles","createUseStyles","Home","maxWidth","margin","content","home__title","fontSize","fontWeight","home__collections","width","display","gap","transition","home__actions","home__action","padding","borderRadius","classes","dispatch","useDispatch","collections","useSelector","categoriesSelector","useState","haveCollection","setHaveCollection","addCollDisplayVal","setAddCollDisplayVal","useEffect","getCategories","length","toggleAddCollDisplayVal","value","event","className","clsx","topBar","name","onClick","style","gridTemplateColumns","map","collection","id","toggleFunc","displayVal"],"sourceRoot":""}