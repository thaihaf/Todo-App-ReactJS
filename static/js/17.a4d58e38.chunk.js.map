{"version":3,"file":"static/js/17.a4d58e38.chunk.js","mappings":"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","sources":["pages/Tasks/index.js","../javascript/esm|D:/4.Document/Work/MonstarLab/Intern/ReactJS/todo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../javascript/esm|D:/4.Document/Work/MonstarLab/Intern/ReactJS/todo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../javascript/esm|D:/4.Document/Work/MonstarLab/Intern/ReactJS/todo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../javascript/esm|D:/4.Document/Work/MonstarLab/Intern/ReactJS/todo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js"],"sourcesContent":["// lib\r\nimport { useState, useEffect, lazy } from \"react\";\r\nimport { createUseStyles } from \"react-jss\";\r\nimport clsx from \"clsx\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getData } from \"../../redux/slice/dataSlice\";\r\nimport { categoriesSelector, dataSelector } from \"../../redux/selectors\";\r\nimport { toast } from \"react-toastify\";\r\n\r\n// Component\r\nconst Task = lazy(() => import(\"../../components/Task\"));\r\nconst Paging = lazy(() => import(\"../../components/Paging\"));\r\nconst CreateTask = lazy(() => import(\"./Components/actions/CreateTask\"));\r\nconst DeleteTask = lazy(() => import(\"./Components/actions/DeleteTask\"));\r\nconst TaskActionsBar = lazy(() => import(\"./Components/TaskActionsBar\"));\r\n\r\n// Service\r\nconst useStyles = createUseStyles({\r\n  content: {\r\n    textAlign: \"left\",\r\n    maxWidth: \"unset\",\r\n  },\r\n  tasks: {\r\n    width: \"80%\",\r\n    maxWidth: \"100rem\",\r\n    marginBottom: \"3rem\",\r\n    display: \"grid\",\r\n    gap: \"1.7rem\",\r\n    gridTemplateColumns: \"repeat(auto-fit, minmax(25rem, 1fr))\",\r\n    transition: \"all 0.3s linear\",\r\n  },\r\n  taskBar__container: {\r\n    textTransform: \"capitalize\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-between\",\r\n    marginBottom: \"2rem\",\r\n    width: \"80%\",\r\n    maxWidth: \"100rem\",\r\n  },\r\n  taskBar__actions: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    gap: \"1rem\",\r\n  },\r\n  taskBar__action: {\r\n    height: \"100%\",\r\n    padding: \"0.8rem 2rem !important\",\r\n    marginBottom: \"0\",\r\n    borderRadius: \"1.5rem\",\r\n    position: \"relative\",\r\n  },\r\n\r\n  taskBar__input: {\r\n    minWidth: \"5rem\",\r\n    padding: \"1rem\",\r\n    width: \"3rem !important\",\r\n    fontSize: \"1.5rem\",\r\n  },\r\n  taskBar__detail: {\r\n    fontSize: \"2rem\",\r\n    fontWeight: \"700\",\r\n  },\r\n  taskBar__lable: {\r\n    fontSize: \"1.5rem\",\r\n  },\r\n  taskBar__message: {\r\n    textAlign: \"center\",\r\n  },\r\n});\r\n\r\nconst useActions = () => {\r\n  const [displayAddBarVal, setDisplayAddBarVal] = useState(false);\r\n\r\n  const [displayDeleteBarVal, setDisplayDeleteBarVal] = useState(false);\r\n\r\n  const toggleAddBar = (value) => (event) => {\r\n    setDisplayAddBarVal(value);\r\n  };\r\n\r\n  const toggleDeleteBar = (value) => (event) => {\r\n    setDisplayDeleteBarVal(value);\r\n  };\r\n  return {\r\n    toggleAddBar,\r\n    toggleDeleteBar,\r\n    displayAddBarVal,\r\n    displayDeleteBarVal,\r\n  };\r\n};\r\n\r\nexport default function ListTasks() {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  const {\r\n    toggleAddBar,\r\n    toggleDeleteBar,\r\n    displayAddBarVal,\r\n    displayDeleteBarVal,\r\n  } = useActions();\r\n\r\n  const data = useSelector(dataSelector);\r\n  const listCollections = useSelector(categoriesSelector);\r\n  const [typeData, setTypeData] = useState(\"\");\r\n\r\n  const handleChangeData = (data, type) => {\r\n    type && type === \"search\" ? setTypeData(type) : setTypeData(\"\");\r\n    dispatch(data);\r\n  };\r\n\r\n  useEffect(() => {\r\n    handleChangeData(getData());\r\n  }, []);\r\n\r\n  const [selectedTasks, setSelectedTasks] = useState([]);\r\n\r\n  const handleSelectTasks = (id, checked) => {\r\n    let existing = selectedTasks.includes(id);\r\n\r\n    if (existing && !checked) {\r\n      const newArr = selectedTasks.filter((select) => select !== id);\r\n      setSelectedTasks(newArr);\r\n    } else if (!existing && checked) {\r\n      setSelectedTasks([...selectedTasks, id]);\r\n    }\r\n  };\r\n  const handleRemoveTasks = (event) => {\r\n    if (selectedTasks.length === 0) {\r\n      toast.warn(\"Not select yet\");\r\n    } else {\r\n      toggleDeleteBar(!displayDeleteBarVal)();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"ViewCollection\">\r\n      <div className={clsx(classes.content, \"content\")}>\r\n        <TaskActionsBar\r\n          toggleAddBar={toggleAddBar}\r\n          handleRemoveTasks={handleRemoveTasks}\r\n          handleChangeData={handleChangeData}\r\n        />\r\n\r\n        {data &&\r\n          data.meta &&\r\n          data.meta.totalItems === 0 &&\r\n          (typeData === \"search\" ? (\r\n            <div\r\n              className={clsx(classes.taskBar__message)}\r\n              style={{\r\n                fontSize: \"1.5rem\",\r\n                marginTop: \"3rem\",\r\n              }}\r\n            >\r\n              No has any Task match with Search Value\r\n            </div>\r\n          ) : (\r\n            <button\r\n              className={clsx(\r\n                classes.taskBar__action,\r\n                \"button btn--flex btn--bg-gray btn--border btn--hover-bg-gray\"\r\n              )}\r\n              onClick={toggleAddBar(true)}\r\n            >\r\n              <div className=\"taskAction__icon\">\r\n                <ion-icon name=\"add\"></ion-icon>\r\n              </div>\r\n              <div className=\"taskAction__text\">Add First Task</div>\r\n            </button>\r\n          ))}\r\n\r\n        <div className={clsx(classes.tasks)}>\r\n          {data &&\r\n            data.meta &&\r\n            data.meta.totalItems > 0 &&\r\n            data.items.map((task) => {\r\n              return (\r\n                <Task\r\n                  key={task.id}\r\n                  task={task}\r\n                  listCollections={listCollections}\r\n                  handleChangeData={handleChangeData}\r\n                  handleSelectTasks={handleSelectTasks}\r\n                />\r\n              );\r\n            })}\r\n        </div>\r\n\r\n        {data && data.meta && data.meta.totalItems > 0 && (\r\n          <Paging data={data} handleChangeData={handleChangeData} />\r\n        )}\r\n\r\n        <CreateTask\r\n          displayVal={displayAddBarVal}\r\n          toggleFunc={toggleAddBar}\r\n          listCollections={listCollections}\r\n          handleChangeData={handleChangeData}\r\n        />\r\n\r\n        <DeleteTask\r\n          taskIDs={selectedTasks}\r\n          displayVal={displayDeleteBarVal}\r\n          toggleFunc={toggleDeleteBar}\r\n          handleChangeData={handleChangeData}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"names":["Task","lazy","Paging","CreateTask","DeleteTask","TaskActionsBar","useStyles","createUseStyles","content","textAlign","maxWidth","tasks","width","marginBottom","display","gap","gridTemplateColumns","transition","taskBar__container","textTransform","alignItems","justifyContent","taskBar__actions","taskBar__action","height","padding","borderRadius","position","taskBar__input","minWidth","fontSize","taskBar__detail","fontWeight","taskBar__lable","taskBar__message","ListTasks","classes","dispatch","useDispatch","useState","displayAddBarVal","setDisplayAddBarVal","displayDeleteBarVal","setDisplayDeleteBarVal","toggleAddBar","value","event","toggleDeleteBar","useActions","data","useSelector","dataSelector","listCollections","categoriesSelector","typeData","setTypeData","handleChangeData","type","useEffect","getData","selectedTasks","setSelectedTasks","handleSelectTasks","id","checked","existing","includes","newArr","filter","select","className","clsx","handleRemoveTasks","length","toast","meta","totalItems","style","marginTop","onClick","name","items","map","task","displayVal","toggleFunc","taskIDs","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError"],"sourceRoot":""}