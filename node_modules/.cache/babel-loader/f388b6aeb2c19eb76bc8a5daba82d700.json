{"ast":null,"code":"var _jsxFileName = \"D:\\\\4.Document\\\\Work\\\\MonstarLab\\\\Intern\\\\ReactJS\\\\todo\\\\src\\\\components\\\\home\\\\task\\\\actions\\\\createTask\\\\CreateTask.js\",\n    _s = $RefreshSig$();\n\n// lib\nimport { createUseStyles } from \"react-jss\";\nimport clsx from \"clsx\";\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { toast } from \"react-toastify\";\nimport useTaskForm from \"../services/useTaskForm\";\nimport GetTasksFunc from \"../GetTasksFunc\";\nimport IsEmptyObject from \"../../../../../service/IsEmptyObject\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = createUseStyles({\n  CreateTask: {\n    top: \"0\",\n    left: \"0\",\n    width: \"100vw\",\n    height: \"100vh\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    zIndex: \"11\",\n    color: \"#FFFFFF\"\n  },\n  createTask__bg: {\n    backgroundColor: \"#000\",\n    opacity: \"70%\"\n  },\n  createTask__container: {\n    width: \"42rem\",\n    minWidth: \"48rem\",\n    marginTop: \"6rem\",\n    padding: \"2rem\",\n    backgroundColor: \"#1D1D27\",\n    textAlign: \"left\",\n    borderRadius: \"1.6rem\"\n  },\n  createTask__caption: {\n    fontSize: \"2rem\",\n    textTransform: \"capitalize\",\n    fontWeight: \"bold\",\n    marginBottom: \"2rem\"\n  },\n  createTask__title: {\n    fontSize: \"1.6rem\",\n    textTransform: \"capitalize\",\n    marginBottom: \"1rem\"\n  },\n  createTask__colors: {\n    display: \"grid\",\n    gap: \"1.5rem\",\n    gridTemplateColumns: \"repeat(auto-fit, 6rem)\"\n  },\n  createTask__color: {\n    width: \"6rem\",\n    height: \"5rem\",\n    backgroundColor: \"transparent\",\n    cursor: \"pointer\",\n    borderRadius: \"1.2rem\",\n    position: \"relative\"\n  },\n  createTask__buttons: {\n    gap: \"1rem\",\n    marginTop: \"5rem\"\n  },\n  createTask__group: {\n    marginBottom: \"2rem\",\n    width: \"100%\"\n  },\n  createTask__err: {\n    color: \"red\",\n    padding: \"1rem\",\n    fontSize: \"1.4rem\"\n  },\n  createTask__listColls: {\n    height: \"16rem\",\n    overflowY: \"scroll\",\n    borderRadius: \"1.2rem\",\n    border: \"3px solid var(--background-color-header)\"\n  },\n  createTask__itemColl: {\n    display: \"flex\",\n    alignItems: \"center\",\n    padding: \"1rem\",\n    borderBottom: \"2px solid var(--background-color-header)\",\n    gap: \"1rem\",\n    cursor: \"pointer\"\n  },\n  createTask__checkbox: {\n    color: \"var(--bg-btn-pink)\",\n    backgroundColor: \"transparent\",\n    width: \"1.7rem\",\n    height: \"1.7rem\"\n  },\n  createTask__lable: {\n    fontSize: \"1.6rem\"\n  }\n});\n\nconst CreateTask = ({\n  listCollections,\n  toggleFunc,\n  displayVal,\n  handleChangeData\n}) => {\n  _s();\n\n  const classes = useStyles();\n  const [listSelections, setListSelections] = useState([]);\n\n  const HandleEditTask = values => {\n    let title = values.title;\n    let categoryIds = listSelections;\n    axios({\n      method: \"post\",\n      url: \"api/tasks\",\n      data: {\n        title,\n        categoryIds\n      }\n    }).then(async res => {\n      setListSelections([]);\n      toast.success(\"ðŸ¦„ Create Task Successful!\");\n      toggleFunc(false)();\n      const tasksData = await GetTasksFunc();\n      handleChangeData(tasksData.data);\n    }).catch(err => {\n      const errMsg = err.response.data.message;\n      toast.error(errMsg);\n    });\n  };\n\n  const {\n    handleChange,\n    handleSubmit,\n    values,\n    errors\n  } = useTaskForm(HandleEditTask);\n\n  const closeTabFunc = () => event => {\n    toggleFunc(false)();\n  };\n\n  const handleChangeOption = id => event => {\n    let checked = event.target.checked;\n    let existing = listSelections.includes(id);\n\n    if (existing && !checked) {\n      const newArr = listSelections.filter(select => select !== id);\n      setListSelections(newArr);\n    } else if (!existing && checked) {\n      setListSelections([...listSelections, id]);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: clsx(classes.CreateTask, \"m-auto position-fixed\", !displayVal && \"d-none\"),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: clsx(classes.createTask__bg, \"w-100 h-100 position-absolute\"),\n      onClick: closeTabFunc(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: clsx(classes.createTask__container, \"position-absolute\"),\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        method: \"post\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"createTask__top d-flex w-100\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: clsx(classes.createTask__caption, \"mr-auto\"),\n            children: \"create Task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"createTask__close-btn\",\n            onClick: closeTabFunc(false),\n            children: /*#__PURE__*/_jsxDEV(\"ion-icon\", {\n              name: \"close\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: clsx(classes.createTask__group, \"bar-title\"),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: clsx(classes.createTask__title),\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"My Task\",\n            className: \"btn--outline w-100 py-3\",\n            style: {\n              fontSize: \"1.6rem\"\n            },\n            name: \"title\",\n            value: values.title,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 13\n          }, this), errors.title && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: clsx(classes.createTask__err),\n            children: [\"*\", errors.title]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: clsx(classes.createTask__group, \"bar-listColl\"),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: clsx(classes.createTask__title),\n            children: \"List Collection\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: clsx(classes.createTask__listColls),\n            children: listCollections.map(item => {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: clsx(classes.createTask__itemColl),\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  className: clsx(classes.createTask__checkbox),\n                  onChange: handleChangeOption(item.id)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 212,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: clsx(classes.createTask__lable),\n                  children: item.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 217,\n                  columnNumber: 21\n                }, this)]\n              }, item.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 19\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: clsx(classes.createTask__buttons, \"w-100 d-flex\"),\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"createTask__button button btn--none-border btn--hover-bg-gray-light ml-auto mb-0\",\n            style: {\n              backgroundColor: \"#3D3C50\"\n            },\n            type: \"submit\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"reset\",\n            className: \"createTask__button button btn--none-border btn--hover-bg-gray mb-0\",\n            onClick: closeTabFunc(),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 154,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CreateTask, \"4Jtod7rowxkNBAwfrwOutbORxb4=\", false, function () {\n  return [useStyles, useTaskForm];\n});\n\n_c = CreateTask;\nexport default CreateTask;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateTask\");","map":{"version":3,"sources":["D:/4.Document/Work/MonstarLab/Intern/ReactJS/todo/src/components/home/task/actions/createTask/CreateTask.js"],"names":["createUseStyles","clsx","useState","useEffect","axios","toast","useTaskForm","GetTasksFunc","IsEmptyObject","useStyles","CreateTask","top","left","width","height","display","justifyContent","zIndex","color","createTask__bg","backgroundColor","opacity","createTask__container","minWidth","marginTop","padding","textAlign","borderRadius","createTask__caption","fontSize","textTransform","fontWeight","marginBottom","createTask__title","createTask__colors","gap","gridTemplateColumns","createTask__color","cursor","position","createTask__buttons","createTask__group","createTask__err","createTask__listColls","overflowY","border","createTask__itemColl","alignItems","borderBottom","createTask__checkbox","createTask__lable","listCollections","toggleFunc","displayVal","handleChangeData","classes","listSelections","setListSelections","HandleEditTask","values","title","categoryIds","method","url","data","then","res","success","tasksData","catch","err","errMsg","response","message","error","handleChange","handleSubmit","errors","closeTabFunc","event","handleChangeOption","id","checked","target","existing","includes","newArr","filter","select","map","item","name"],"mappings":"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","sourcesContent":["// lib\r\nimport { createUseStyles } from \"react-jss\";\r\nimport clsx from \"clsx\";\r\nimport { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nimport useTaskForm from \"../services/useTaskForm\";\r\nimport GetTasksFunc from \"../GetTasksFunc\";\r\n\r\nimport IsEmptyObject from \"../../../../../service/IsEmptyObject\";\r\n\r\nconst useStyles = createUseStyles({\r\n  CreateTask: {\r\n    top: \"0\",\r\n    left: \"0\",\r\n    width: \"100vw\",\r\n    height: \"100vh\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    zIndex: \"11\",\r\n    color: \"#FFFFFF\",\r\n  },\r\n  createTask__bg: {\r\n    backgroundColor: \"#000\",\r\n    opacity: \"70%\",\r\n  },\r\n  createTask__container: {\r\n    width: \"42rem\",\r\n    minWidth: \"48rem\",\r\n    marginTop: \"6rem\",\r\n    padding: \"2rem\",\r\n    backgroundColor: \"#1D1D27\",\r\n    textAlign: \"left\",\r\n    borderRadius: \"1.6rem\",\r\n  },\r\n  createTask__caption: {\r\n    fontSize: \"2rem\",\r\n    textTransform: \"capitalize\",\r\n    fontWeight: \"bold\",\r\n    marginBottom: \"2rem\",\r\n  },\r\n  createTask__title: {\r\n    fontSize: \"1.6rem\",\r\n    textTransform: \"capitalize\",\r\n    marginBottom: \"1rem\",\r\n  },\r\n  createTask__colors: {\r\n    display: \"grid\",\r\n    gap: \"1.5rem\",\r\n    gridTemplateColumns: \"repeat(auto-fit, 6rem)\",\r\n  },\r\n  createTask__color: {\r\n    width: \"6rem\",\r\n    height: \"5rem\",\r\n    backgroundColor: \"transparent\",\r\n    cursor: \"pointer\",\r\n    borderRadius: \"1.2rem\",\r\n    position: \"relative\",\r\n  },\r\n  createTask__buttons: {\r\n    gap: \"1rem\",\r\n    marginTop: \"5rem\",\r\n  },\r\n  createTask__group: {\r\n    marginBottom: \"2rem\",\r\n    width: \"100%\",\r\n  },\r\n  createTask__err: {\r\n    color: \"red\",\r\n    padding: \"1rem\",\r\n    fontSize: \"1.4rem\",\r\n  },\r\n  createTask__listColls: {\r\n    height: \"16rem\",\r\n    overflowY: \"scroll\",\r\n    borderRadius: \"1.2rem\",\r\n    border: \"3px solid var(--background-color-header)\",\r\n  },\r\n  createTask__itemColl: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    padding: \"1rem\",\r\n    borderBottom: \"2px solid var(--background-color-header)\",\r\n    gap: \"1rem\",\r\n    cursor: \"pointer\",\r\n  },\r\n  createTask__checkbox: {\r\n    color: \"var(--bg-btn-pink)\",\r\n    backgroundColor: \"transparent\",\r\n    width: \"1.7rem\",\r\n    height: \"1.7rem\",\r\n  },\r\n  createTask__lable: {\r\n    fontSize: \"1.6rem\",\r\n  },\r\n});\r\n\r\nconst CreateTask = ({\r\n  listCollections,\r\n  toggleFunc,\r\n  displayVal,\r\n  handleChangeData,\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  const [listSelections, setListSelections] = useState([]);\r\n\r\n  const HandleEditTask = (values) => {\r\n    let title = values.title;\r\n    let categoryIds = listSelections;\r\n\r\n    axios({\r\n      method: \"post\",\r\n      url: \"api/tasks\",\r\n      data: { title, categoryIds },\r\n    })\r\n      .then(async (res) => {\r\n        setListSelections([]);\r\n        \r\n        toast.success(\"ðŸ¦„ Create Task Successful!\");\r\n        toggleFunc(false)();\r\n        \r\n        \r\n        const tasksData = await GetTasksFunc();\r\n        handleChangeData(tasksData.data);\r\n      })\r\n      .catch((err) => {\r\n        const errMsg = err.response.data.message;\r\n        toast.error(errMsg);\r\n      });\r\n  };\r\n\r\n  const { handleChange, handleSubmit, values, errors } =\r\n    useTaskForm(HandleEditTask);\r\n\r\n  const closeTabFunc = () => (event) => {\r\n    toggleFunc(false)();\r\n  };\r\n\r\n  const handleChangeOption = (id) => (event) => {\r\n    let checked = event.target.checked;\r\n    let existing = listSelections.includes(id);\r\n\r\n    if (existing && !checked) {\r\n      const newArr = listSelections.filter((select) => select !== id);\r\n      setListSelections(newArr);\r\n    } else if (!existing && checked) {\r\n      setListSelections([...listSelections, id]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={clsx(\r\n        classes.CreateTask,\r\n        \"m-auto position-fixed\",\r\n        !displayVal && \"d-none\"\r\n      )}\r\n    >\r\n      <div\r\n        className={clsx(\r\n          classes.createTask__bg,\r\n          \"w-100 h-100 position-absolute\"\r\n        )}\r\n        onClick={closeTabFunc(false)}\r\n      ></div>\r\n\r\n      <div className={clsx(classes.createTask__container, \"position-absolute\")}>\r\n        <form method=\"post\" onSubmit={handleSubmit}>\r\n          <div className=\"createTask__top d-flex w-100\">\r\n            <div className={clsx(classes.createTask__caption, \"mr-auto\")}>\r\n              create Task\r\n            </div>\r\n            <div\r\n              className=\"createTask__close-btn\"\r\n              onClick={closeTabFunc(false)}\r\n            >\r\n              <ion-icon name=\"close\"></ion-icon>\r\n            </div>\r\n          </div>\r\n\r\n          <div className={clsx(classes.createTask__group, \"bar-title\")}>\r\n            <div className={clsx(classes.createTask__title)}>Title</div>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"My Task\"\r\n              className=\"btn--outline w-100 py-3\"\r\n              style={{ fontSize: \"1.6rem\" }}\r\n              name=\"title\"\r\n              value={values.title}\r\n              onChange={handleChange}\r\n            />\r\n            {errors.title && (\r\n              <div className={clsx(classes.createTask__err)}>\r\n                *{errors.title}\r\n              </div>\r\n            )}\r\n          </div>\r\n\r\n          <div className={clsx(classes.createTask__group, \"bar-listColl\")}>\r\n            <div className={clsx(classes.createTask__title)}>\r\n              List Collection\r\n            </div>\r\n            <div className={clsx(classes.createTask__listColls)}>\r\n              {listCollections.map((item) => {\r\n                return (\r\n                  <div\r\n                    key={item.id}\r\n                    className={clsx(classes.createTask__itemColl)}\r\n                  >\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      className={clsx(classes.createTask__checkbox)}\r\n                      onChange={handleChangeOption(item.id)}\r\n                    />\r\n                    <span className={clsx(classes.createTask__lable)}>\r\n                      {item.name}\r\n                    </span>\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n          </div>\r\n\r\n          <div className={clsx(classes.createTask__buttons, \"w-100 d-flex\")}>\r\n            <button\r\n              className=\"createTask__button button btn--none-border btn--hover-bg-gray-light ml-auto mb-0\"\r\n              style={{ backgroundColor: \"#3D3C50\" }}\r\n              type=\"submit\"\r\n            >\r\n              Submit\r\n            </button>\r\n            <button\r\n              type=\"reset\"\r\n              className=\"createTask__button button btn--none-border btn--hover-bg-gray mb-0\"\r\n              onClick={closeTabFunc()}\r\n            >\r\n              Cancel\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateTask;\r\n"]},"metadata":{},"sourceType":"module"}