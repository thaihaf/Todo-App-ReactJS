{"ast":null,"code":"var _jsxFileName = \"D:\\\\4.Document\\\\Work\\\\MonstarLab\\\\Intern\\\\ReactJS\\\\todo\\\\src\\\\components\\\\home\\\\task\\\\view\\\\TaskBar.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TaskBar(_ref) {\n  _s();\n\n  let {\n    status,\n    count,\n    handleChangeData,\n    handleChangeStatus\n  } = _ref;\n  const [listStatus, setListStatus] = useState([{\n    value: \"all\"\n  }, {\n    value: \"inProcess\"\n  }, {\n    value: \"complete\"\n  }]);\n  const [selectedOption, setSelectedOption] = useState();\n\n  function handleChange(event) {\n    const optionVal = event.target.value;\n    setSelectedOption(event.target.value);\n    console.log(event.target.id);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"task__title\",\n    style: {\n      fontSize: \"2rem\",\n      textTransform: \"capitalize\",\n      padding: \"2rem\",\n      display: \"flex\",\n      justifyContent: \"space-between\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"taskBar__details\",\n      children: [selectedOption, \" - \", count]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"taskBar__actions\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"taskBar__action\",\n        children: /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"taskBar__select\",\n          onChange: handleChange,\n          children: listStatus.map(status => {\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              value: status.name,\n              id: status.name,\n              className: \"taskBar__option\",\n              children: status.value\n            }, status.name, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TaskBar, \"9SpBpExmfpKXH5KASlww2s6ABpo=\");\n\n_c = TaskBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskBar\");","map":{"version":3,"sources":["D:/4.Document/Work/MonstarLab/Intern/ReactJS/todo/src/components/home/task/view/TaskBar.js"],"names":["React","useState","useEffect","TaskBar","status","count","handleChangeData","handleChangeStatus","listStatus","setListStatus","value","selectedOption","setSelectedOption","handleChange","event","optionVal","target","console","log","id","fontSize","textTransform","padding","display","justifyContent","map","name"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,eAAe,SAASC,OAAT,OAKZ;AAAA;;AAAA,MAL6B;AAC9BC,IAAAA,MAD8B;AAE9BC,IAAAA,KAF8B;AAG9BC,IAAAA,gBAH8B;AAI9BC,IAAAA;AAJ8B,GAK7B;AACD,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,CAAC,CAC3C;AAAES,IAAAA,KAAK,EAAE;AAAT,GAD2C,EAE3C;AAAEA,IAAAA,KAAK,EAAE;AAAT,GAF2C,EAG3C;AAAEA,IAAAA,KAAK,EAAE;AAAT,GAH2C,CAAD,CAA5C;AAKA,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCX,QAAQ,EAApD;;AAEA,WAASY,YAAT,CAAsBC,KAAtB,EAA6B;AAC3B,UAAMC,SAAS,GAAGD,KAAK,CAACE,MAAN,CAAaN,KAA/B;AACAE,IAAAA,iBAAiB,CAACE,KAAK,CAACE,MAAN,CAAaN,KAAd,CAAjB;AACAO,IAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAK,CAACE,MAAN,CAAaG,EAAzB;AACD;;AAED,sBACE;AACE,IAAA,SAAS,EAAC,aADZ;AAEE,IAAA,KAAK,EAAE;AACLC,MAAAA,QAAQ,EAAE,MADL;AAELC,MAAAA,aAAa,EAAE,YAFV;AAGLC,MAAAA,OAAO,EAAE,MAHJ;AAILC,MAAAA,OAAO,EAAE,MAJJ;AAKLC,MAAAA,cAAc,EAAE;AALX,KAFT;AAAA,4BAUE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,iBACGb,cADH,SACsBN,KADtB;AAAA;AAAA;AAAA;AAAA;AAAA,YAVF,eAcE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA,+BACE;AAAQ,UAAA,SAAS,EAAC,iBAAlB;AAAoC,UAAA,QAAQ,EAAEQ,YAA9C;AAAA,oBACGL,UAAU,CAACiB,GAAX,CAAgBrB,MAAD,IAAY;AAC1B,gCACE;AAEE,cAAA,KAAK,EAAEA,MAAM,CAACsB,IAFhB;AAGE,cAAA,EAAE,EAAEtB,MAAM,CAACsB,IAHb;AAIE,cAAA,SAAS,EAAC,iBAJZ;AAAA,wBAMGtB,MAAM,CAACM;AANV,eACON,MAAM,CAACsB,IADd;AAAA;AAAA;AAAA;AAAA,oBADF;AAUD,WAXA;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAdF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmCD;;GAtDuBvB,O;;KAAAA,O","sourcesContent":["import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nexport default function TaskBar({\r\n  status,\r\n  count,\r\n  handleChangeData,\r\n  handleChangeStatus,\r\n}) {\r\n  const [listStatus, setListStatus] = useState([\r\n    { value: \"all\",  },\r\n    { value: \"inProcess\",  },\r\n    { value: \"complete\",  },\r\n  ]);\r\n  const [selectedOption, setSelectedOption] = useState();\r\n\r\n  function handleChange(event) {\r\n    const optionVal = event.target.value;\r\n    setSelectedOption(event.target.value);\r\n    console.log(event.target.id);\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className=\"task__title\"\r\n      style={{\r\n        fontSize: \"2rem\",\r\n        textTransform: \"capitalize\",\r\n        padding: \"2rem\",\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\",\r\n      }}\r\n    >\r\n      <div className=\"taskBar__details\">\r\n        {selectedOption} - {count}\r\n      </div>\r\n\r\n      <div className=\"taskBar__actions\">\r\n        <div className=\"taskBar__action\">\r\n          <select className=\"taskBar__select\" onChange={handleChange}>\r\n            {listStatus.map((status) => {\r\n              return (\r\n                <option\r\n                  key={status.name}\r\n                  value={status.name}\r\n                  id={status.name}\r\n                  className=\"taskBar__option\"\r\n                >\r\n                  {status.value}\r\n                </option>\r\n              );\r\n            })}\r\n          </select>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}