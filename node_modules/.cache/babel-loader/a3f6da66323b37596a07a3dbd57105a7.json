{"ast":null,"code":"var _jsxFileName = \"D:\\\\4.Document\\\\Work\\\\MonstarLab\\\\Intern\\\\ReactJS\\\\todo\\\\src\\\\components\\\\home\\\\collection\\\\view\\\\ViewCollection.js\",\n    _s = $RefreshSig$();\n\n// lib\nimport { useParams } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport { createUseStyles } from \"react-jss\";\nimport axios from \"axios\";\nimport clsx from \"clsx\"; // Component\n\nimport CollectionBar from \"./CollectionBar\";\nimport ViewTask from \"../../task/view/ViewTask\";\nimport InProcessTasks from \"../../task/view/InProcessTasks\";\nimport CompletedTasks from \"../../task/view/CompleteTasks\"; // Service\n\nimport IsEmptyObject from \"../../../../service/IsEmptyObject\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = createUseStyles({\n  content: {\n    textAlign: \"left\",\n    maxWidth: \"unset\"\n  },\n  tasks__tab: {\n    marginTop: \"1rem\",\n    width: \"80%\"\n  }\n});\nexport default function ViewCollection() {\n  _s();\n\n  const classes = useStyles();\n  let {\n    cId\n  } = useParams();\n  const [collection, setCollection] = useState({});\n  const [listTasks, setListTasks] = useState([]);\n  const [status, setStatus] = useState(\"All\");\n  const [inProcessTasks, setInProcessTasks] = useState([]);\n  const [completeTasks, setCompleteTasks] = useState([]);\n\n  const handleChangeStatus = val => {\n    setStatus(val);\n  };\n\n  function getCollection() {}\n\n  function getTasks() {\n    axios.get(`/api/tasks?limit=8&page=1`).then(res => {\n      console.log(res.data);\n      setListTasks(res.data.items);\n    }).catch(err => {\n      const errMsg = err.response.data.message;\n      console.log(errMsg);\n    });\n  }\n\n  useEffect(() => {\n    if (cId) {\n      axios.get(`api/categories/${cId}`).then(res => {\n        setCollection(res.data);\n      }).catch(err => {\n        const errMsg = err.response.data.message;\n        console.log(errMsg);\n      });\n    }\n  }, []);\n\n  const handleChange = tasksData => {\n    if (IsEmptyObject(tasksData)) {\n      console.log(\"Khum co\");\n    } else {\n      console.log(\"set data tasks\"); // setCollection(tasksData);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ViewCollection\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: clsx(classes.content, \"content\"),\n      children: [/*#__PURE__*/_jsxDEV(CollectionBar, {\n        collection: collection,\n        handleChange: handleChange,\n        handleChangeStatus: handleChangeStatus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: clsx(classes.tasks__tab),\n        children: /*#__PURE__*/_jsxDEV(ViewTask, {\n          listTasks: listTasks,\n          status: status\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ViewCollection, \"XlvYoG2Y4ApUewTDYuTEruiwYGo=\", false, function () {\n  return [useStyles, useParams];\n});\n\n_c = ViewCollection;\n\nvar _c;\n\n$RefreshReg$(_c, \"ViewCollection\");","map":{"version":3,"sources":["D:/4.Document/Work/MonstarLab/Intern/ReactJS/todo/src/components/home/collection/view/ViewCollection.js"],"names":["useParams","useState","useEffect","createUseStyles","axios","clsx","CollectionBar","ViewTask","InProcessTasks","CompletedTasks","IsEmptyObject","useStyles","content","textAlign","maxWidth","tasks__tab","marginTop","width","ViewCollection","classes","cId","collection","setCollection","listTasks","setListTasks","status","setStatus","inProcessTasks","setInProcessTasks","completeTasks","setCompleteTasks","handleChangeStatus","val","getCollection","getTasks","get","then","res","console","log","data","items","catch","err","errMsg","response","message","handleChange","tasksData"],"mappings":"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","sourcesContent":["// lib\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { createUseStyles } from \"react-jss\";\r\nimport axios from \"axios\";\r\nimport clsx from \"clsx\";\r\n\r\n// Component\r\nimport CollectionBar from \"./CollectionBar\";\r\nimport ViewTask from \"../../task/view/ViewTask\";\r\nimport InProcessTasks from \"../../task/view/InProcessTasks\";\r\nimport CompletedTasks from \"../../task/view/CompleteTasks\";\r\n\r\n// Service\r\nimport IsEmptyObject from \"../../../../service/IsEmptyObject\";\r\n\r\nconst useStyles = createUseStyles({\r\n  content: {\r\n    textAlign: \"left\",\r\n    maxWidth: \"unset\",\r\n  },\r\n  tasks__tab: {\r\n    marginTop: \"1rem\",\r\n    width: \"80%\",\r\n  },\r\n});\r\n\r\nexport default function ViewCollection() {\r\n  const classes = useStyles();\r\n  let { cId } = useParams();\r\n\r\n  const [collection, setCollection] = useState({});\r\n  const [listTasks, setListTasks] = useState([]);\r\n  const [status, setStatus] = useState(\"All\");\r\n\r\n  const [inProcessTasks, setInProcessTasks] = useState([]);\r\n  const [completeTasks, setCompleteTasks] = useState([]);\r\n\r\n  const handleChangeStatus = (val) => {\r\n    setStatus(val);\r\n  };\r\n\r\n  function getCollection() {\r\n    \r\n  }\r\n  function getTasks() {\r\n    axios\r\n      .get(`/api/tasks?limit=8&page=1`)\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        setListTasks(res.data.items);\r\n      })\r\n      .catch((err) => {\r\n        const errMsg = err.response.data.message;\r\n        console.log(errMsg);\r\n      });\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (cId) {\r\n      axios\r\n      .get(`api/categories/${cId}`)\r\n      .then((res) => {\r\n        setCollection(res.data);\r\n      })\r\n      .catch((err) => {\r\n        const errMsg = err.response.data.message;\r\n        console.log(errMsg);\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  const handleChange = (tasksData) => {\r\n    if (IsEmptyObject(tasksData)) {\r\n      console.log(\"Khum co\");\r\n    } else {\r\n      console.log(\"set data tasks\")\r\n      // setCollection(tasksData);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"ViewCollection\">\r\n      <div className={clsx(classes.content, \"content\")}>\r\n        <CollectionBar\r\n          collection={collection}\r\n          handleChange={handleChange}\r\n          handleChangeStatus={handleChangeStatus}\r\n        />\r\n\r\n        <div className={clsx(classes.tasks__tab)}>\r\n          <ViewTask listTasks={listTasks} status={status} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}