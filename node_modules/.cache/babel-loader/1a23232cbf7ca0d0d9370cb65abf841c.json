{"ast":null,"code":"var _jsxFileName = \"D:\\\\4.Document\\\\Work\\\\MonstarLab\\\\Intern\\\\ReactJS\\\\todo\\\\src\\\\components\\\\home\\\\task\\\\view\\\\ViewTask.js\",\n    _s = $RefreshSig$();\n\nimport { useParams } from \"react-router-dom\";\nimport { useState, useEffect, memo } from \"react\";\nimport { createUseStyles } from \"react-jss\";\nimport clsx from \"clsx\";\nimport axios from \"axios\";\nimport TaskBar from \"./TaskBar\";\nimport Task from \"./Task\";\nimport IsEmptyObject from \"../../../../service/IsEmptyObject\";\nimport Paging from \"./Paging\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = createUseStyles({\n  tasks__tab: {\n    marginTop: \"3rem\",\n    width: \"80%\",\n    maxWidth: \"100rem\"\n  },\n  tasks: {\n    display: \"grid\",\n    gap: \"1.7rem\",\n    gridTemplateColumns: \"repeat(auto-fit, minmax(20rem, 1fr))\"\n  }\n});\n\nfunction ViewTask({\n  data,\n  handleChangeData,\n  listColl\n}) {\n  _s();\n\n  const classes = useStyles();\n  const [status, setStatus] = useState(\"all\");\n\n  const handleChangeStatus = val => {\n    setStatus(val);\n  };\n\n  const [selectedTasks, setSelectedTasks] = useState([]);\n\n  const handleSelectTasks = id => event => {\n    setSelectedTasks([...selectedTasks, id]);\n    console.log(selectedTasks);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: clsx(classes.tasks__tab),\n    children: [/*#__PURE__*/_jsxDEV(TaskBar, {\n      status: status,\n      count: data && data.meta ? data.meta.totalItems : 0,\n      handleChangeData: handleChangeData,\n      handleChangeStatus: handleChangeStatus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: clsx(classes.tasks),\n      children: data && data.items && data.items.map(task => {\n        return /*#__PURE__*/_jsxDEV(Task, {\n          listColl: listColl,\n          task: task,\n          handleChangeData: handleChangeData,\n          handleSelectTasks: handleSelectTasks\n        }, task.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Paging, {\n      data: data,\n      handleChangeData: handleChangeData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ViewTask, \"FNEBG0RwFasY1nYt2N21xXg9Qgw=\", false, function () {\n  return [useStyles];\n});\n\n_c = ViewTask;\nexport default _c2 = /*#__PURE__*/memo(ViewTask);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ViewTask\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["D:/4.Document/Work/MonstarLab/Intern/ReactJS/todo/src/components/home/task/view/ViewTask.js"],"names":["useParams","useState","useEffect","memo","createUseStyles","clsx","axios","TaskBar","Task","IsEmptyObject","Paging","useStyles","tasks__tab","marginTop","width","maxWidth","tasks","display","gap","gridTemplateColumns","ViewTask","data","handleChangeData","listColl","classes","status","setStatus","handleChangeStatus","val","selectedTasks","setSelectedTasks","handleSelectTasks","id","event","console","log","meta","totalItems","items","map","task"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,kBAA1B;AACA,SAASC,QAAT,EAAmBC,SAAnB,EAA8BC,IAA9B,QAA0C,OAA1C;AACA,SAASC,eAAT,QAAgC,WAAhC;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AAEA,OAAOC,aAAP,MAA0B,mCAA1B;AACA,OAAOC,MAAP,MAAmB,UAAnB;;AAEA,MAAMC,SAAS,GAAGP,eAAe,CAAC;AAChCQ,EAAAA,UAAU,EAAE;AACVC,IAAAA,SAAS,EAAE,MADD;AAEVC,IAAAA,KAAK,EAAE,KAFG;AAGVC,IAAAA,QAAQ,EAAE;AAHA,GADoB;AAMhCC,EAAAA,KAAK,EAAE;AACLC,IAAAA,OAAO,EAAE,MADJ;AAELC,IAAAA,GAAG,EAAE,QAFA;AAGLC,IAAAA,mBAAmB,EAAE;AAHhB;AANyB,CAAD,CAAjC;;AAaA,SAASC,QAAT,CAAkB;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,gBAAR;AAA0BC,EAAAA;AAA1B,CAAlB,EAAwD;AAAA;;AACtD,QAAMC,OAAO,GAAGb,SAAS,EAAzB;AACA,QAAM,CAACc,MAAD,EAASC,SAAT,IAAsBzB,QAAQ,CAAC,KAAD,CAApC;;AAEA,QAAM0B,kBAAkB,GAAIC,GAAD,IAAS;AAClCF,IAAAA,SAAS,CAACE,GAAD,CAAT;AACD,GAFD;;AAIA,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoC7B,QAAQ,CAAC,EAAD,CAAlD;;AACA,QAAM8B,iBAAiB,GAAIC,EAAD,IAASC,KAAD,IAAW;AAC3CH,IAAAA,gBAAgB,CAAC,CAAC,GAAGD,aAAJ,EAAmBG,EAAnB,CAAD,CAAhB;AAEAE,IAAAA,OAAO,CAACC,GAAR,CAAYN,aAAZ;AACD,GAJD;;AAMA,sBACE;AAAK,IAAA,SAAS,EAAExB,IAAI,CAACmB,OAAO,CAACZ,UAAT,CAApB;AAAA,4BACE,QAAC,OAAD;AACE,MAAA,MAAM,EAAEa,MADV;AAEE,MAAA,KAAK,EAAEJ,IAAI,IAAIA,IAAI,CAACe,IAAb,GAAoBf,IAAI,CAACe,IAAL,CAAUC,UAA9B,GAA2C,CAFpD;AAGE,MAAA,gBAAgB,EAAEf,gBAHpB;AAIE,MAAA,kBAAkB,EAAEK;AAJtB;AAAA;AAAA;AAAA;AAAA,YADF,eAQE;AAAK,MAAA,SAAS,EAAEtB,IAAI,CAACmB,OAAO,CAACR,KAAT,CAApB;AAAA,gBACGK,IAAI,IACHA,IAAI,CAACiB,KADN,IAECjB,IAAI,CAACiB,KAAL,CAAWC,GAAX,CAAgBC,IAAD,IAAU;AACvB,4BACE,QAAC,IAAD;AAEE,UAAA,QAAQ,EAAEjB,QAFZ;AAGE,UAAA,IAAI,EAAEiB,IAHR;AAIE,UAAA,gBAAgB,EAAElB,gBAJpB;AAKE,UAAA,iBAAiB,EAAES;AALrB,WACOS,IAAI,CAACR,EADZ;AAAA;AAAA;AAAA;AAAA,gBADF;AASD,OAVD;AAHJ;AAAA;AAAA;AAAA;AAAA,YARF,eAwBG,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAEX,IAAd;AAAoB,MAAA,gBAAgB,EAAEC;AAAtC;AAAA;AAAA;AAAA;AAAA,YAxBH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA4BD;;GA3CQF,Q;UACST,S;;;KADTS,Q;AA6CT,kCAAejB,IAAI,CAACiB,QAAD,CAAnB","sourcesContent":["import { useParams } from \"react-router-dom\";\r\nimport { useState, useEffect, memo } from \"react\";\r\nimport { createUseStyles } from \"react-jss\";\r\nimport clsx from \"clsx\";\r\nimport axios from \"axios\";\r\n\r\nimport TaskBar from \"./TaskBar\";\r\nimport Task from \"./Task\";\r\n\r\nimport IsEmptyObject from \"../../../../service/IsEmptyObject\";\r\nimport Paging from \"./Paging\";\r\n\r\nconst useStyles = createUseStyles({\r\n  tasks__tab: {\r\n    marginTop: \"3rem\",\r\n    width: \"80%\",\r\n    maxWidth: \"100rem\",\r\n  },\r\n  tasks: {\r\n    display: \"grid\",\r\n    gap: \"1.7rem\",\r\n    gridTemplateColumns: \"repeat(auto-fit, minmax(20rem, 1fr))\",\r\n  },\r\n});\r\n\r\nfunction ViewTask({ data, handleChangeData, listColl }) {\r\n  const classes = useStyles();\r\n  const [status, setStatus] = useState(\"all\");\r\n\r\n  const handleChangeStatus = (val) => {\r\n    setStatus(val);\r\n  };\r\n\r\n  const [selectedTasks, setSelectedTasks] = useState([]);\r\n  const handleSelectTasks = (id) => (event) => {\r\n    setSelectedTasks([...selectedTasks, id]);\r\n\r\n    console.log(selectedTasks);\r\n  };\r\n\r\n  return (\r\n    <div className={clsx(classes.tasks__tab)}>\r\n      <TaskBar\r\n        status={status}\r\n        count={data && data.meta ? data.meta.totalItems : 0}\r\n        handleChangeData={handleChangeData}\r\n        handleChangeStatus={handleChangeStatus}\r\n      />\r\n\r\n      <div className={clsx(classes.tasks)}>\r\n        {data &&\r\n          data.items &&\r\n          data.items.map((task) => {\r\n            return (\r\n              <Task\r\n                key={task.id}\r\n                listColl={listColl}\r\n                task={task}\r\n                handleChangeData={handleChangeData}\r\n                handleSelectTasks={handleSelectTasks}\r\n              />\r\n            );\r\n          })}\r\n      </div>\r\n\r\n      {<Paging data={data} handleChangeData={handleChangeData} />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default memo(ViewTask);\r\n"]},"metadata":{},"sourceType":"module"}