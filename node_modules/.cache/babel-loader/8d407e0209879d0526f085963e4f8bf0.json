{"ast":null,"code":"var _jsxFileName = \"D:\\\\4.Document\\\\Work\\\\MonstarLab\\\\Intern\\\\ReactJS\\\\todo\\\\src\\\\components\\\\home\\\\task\\\\view\\\\ListTasks.js\",\n    _s = $RefreshSig$();\n\n// lib\nimport { useState, useEffect } from \"react\";\nimport { createUseStyles } from \"react-jss\";\nimport clsx from \"clsx\"; // Component\n\nimport TaskBar from \"./TaskBar\";\nimport Task from \"./Task\";\nimport Paging from \"./Paging\"; // services\n\nimport GetTasksFunc from \"../../task/actions/GetTasksFunc\";\nimport GetCollectionFunc from \"../../collection/actions/GetCollectionFunc\"; // Service\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = createUseStyles({\n  content: {\n    textAlign: \"left\",\n    maxWidth: \"unset\"\n  }\n});\nexport default function ListTasks() {\n  _s();\n\n  const classes = useStyles();\n  const [data, setData] = useState({});\n  const [listCollections, setListCollections] = useState([]); //   get Tasks\n\n  useEffect(async () => {\n    const tasksData = await GetTasksFunc(8);\n    handleChangeData(tasksData.data);\n  }, []); //   get Collections\n\n  useEffect(async () => {\n    const res = await GetCollectionFunc(10);\n    setListCollections(res.data.items);\n  }, []);\n  const [selectedTasks, setSelectedTasks] = useState([]);\n\n  const handleSelectTasks = id => event => {\n    setSelectedTasks([...selectedTasks, id]);\n    console.log(selectedTasks);\n  };\n\n  const handleChangeData = data => {\n    console.log(data);\n    setData(data);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ViewCollection\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: clsx(classes.content, \"content\"),\n      children: [/*#__PURE__*/_jsxDEV(TaskBar, {\n        listCollections: listCollections,\n        count: data && data.meta ? data.meta.totalItems : 0,\n        handleChangeData: handleChangeData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: clsx(classes.tasks),\n        children: data && data.items && data.items.map(task => {\n          return /*#__PURE__*/_jsxDEV(Task, {\n            listCollections: listCollections,\n            task: task,\n            handleChangeData: handleChangeData,\n            handleSelectTasks: handleSelectTasks\n          }, task.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), data && data.meta && data.meta.totalItems > 0 && /*#__PURE__*/_jsxDEV(Paging, {\n        data: data,\n        handleChangeData: handleChangeData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ListTasks, \"tOmD0+N0PXyFg2gAMLluDMA4kB8=\", false, function () {\n  return [useStyles];\n});\n\n_c = ListTasks;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListTasks\");","map":{"version":3,"sources":["D:/4.Document/Work/MonstarLab/Intern/ReactJS/todo/src/components/home/task/view/ListTasks.js"],"names":["useState","useEffect","createUseStyles","clsx","TaskBar","Task","Paging","GetTasksFunc","GetCollectionFunc","useStyles","content","textAlign","maxWidth","ListTasks","classes","data","setData","listCollections","setListCollections","tasksData","handleChangeData","res","items","selectedTasks","setSelectedTasks","handleSelectTasks","id","event","console","log","meta","totalItems","tasks","map","task"],"mappings":"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","sourcesContent":["// lib\r\nimport { useState, useEffect } from \"react\";\r\nimport { createUseStyles } from \"react-jss\";\r\nimport clsx from \"clsx\";\r\n\r\n// Component\r\nimport TaskBar from \"./TaskBar\"\r\nimport Task from \"./Task\"\r\nimport Paging from \"./Paging\"\r\n\r\n// services\r\nimport GetTasksFunc from \"../../task/actions/GetTasksFunc\";\r\nimport GetCollectionFunc from \"../../collection/actions/GetCollectionFunc\";\r\n\r\n// Service\r\nconst useStyles = createUseStyles({\r\n  content: {\r\n    textAlign: \"left\",\r\n    maxWidth: \"unset\",\r\n  },\r\n});\r\n\r\nexport default function ListTasks() {\r\n  const classes = useStyles();\r\n\r\n  const [data, setData] = useState({});\r\n  const [listCollections, setListCollections] = useState([]);\r\n\r\n  //   get Tasks\r\n  useEffect(async () => {\r\n    const tasksData = await GetTasksFunc(8);\r\n    handleChangeData(tasksData.data);\r\n  }, []);\r\n  //   get Collections\r\n  useEffect(async () => {\r\n    const res = await GetCollectionFunc(10);\r\n    setListCollections(res.data.items);\r\n  }, []);\r\n\r\n  const [selectedTasks, setSelectedTasks] = useState([]);\r\n  const handleSelectTasks = (id) => (event) => {\r\n    setSelectedTasks([...selectedTasks, id]);\r\n\r\n    console.log(selectedTasks);\r\n  };\r\n  const handleChangeData = (data) => {\r\n    console.log(data);\r\n    setData(data);\r\n  };\r\n\r\n  return (\r\n    <div className=\"ViewCollection\">\r\n      <div className={clsx(classes.content, \"content\")}>\r\n        <TaskBar\r\n          listCollections={listCollections}\r\n          count={data && data.meta ? data.meta.totalItems : 0}\r\n          handleChangeData={handleChangeData}\r\n        />\r\n\r\n        <div className={clsx(classes.tasks)}>\r\n          {data &&\r\n            data.items &&\r\n            data.items.map((task) => {\r\n              return (\r\n                <Task\r\n                  key={task.id}\r\n                  listCollections={listCollections}\r\n                  task={task}\r\n                  handleChangeData={handleChangeData}\r\n                  handleSelectTasks={handleSelectTasks}\r\n                />\r\n              );\r\n            })}\r\n        </div>\r\n\r\n        {data && data.meta && data.meta.totalItems > 0 && (\r\n          <Paging data={data} handleChangeData={handleChangeData} />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}