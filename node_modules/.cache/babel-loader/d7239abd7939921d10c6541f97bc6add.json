{"ast":null,"code":"var _jsxFileName = \"D:\\\\4.Document\\\\Work\\\\MonstarLab\\\\Intern\\\\ReactJS\\\\todo\\\\src\\\\components\\\\home\\\\task\\\\view\\\\TaskBar.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { createUseStyles } from \"react-jss\";\nimport clsx from \"clsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = createUseStyles({\n  taskBar__actions: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    gap: \"1rem\"\n  }\n});\nexport default function TaskBar(_ref) {\n  _s();\n\n  let {\n    status,\n    count,\n    handleChangeData,\n    handleChangeStatus\n  } = _ref;\n  const classes = useStyles();\n  const [listStatus, setListStatus] = useState([{\n    name: \"All Task\",\n    value: \"all\"\n  }, {\n    name: \"In Process Task\",\n    value: \"inProcess\"\n  }, {\n    name: \"Complete Task\",\n    value: \"complete\"\n  }]);\n  const [selectedOption, setSelectedOption] = useState(status);\n  const [selectedTasks, setSelectedTasks] = useState([]);\n\n  const handleChangeOption = event => {\n    const optionVal = event.target.value;\n    setSelectedOption(optionVal);\n    console.log(optionVal);\n  };\n\n  const handleSelectTasks = id => event => {\n    setSelectedTasks;\n  };\n\n  const handleRemoveTasks = event => {};\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"task__title\",\n    style: {\n      fontSize: \"2rem\",\n      textTransform: \"capitalize\",\n      padding: \"2rem\",\n      display: \"flex\",\n      justifyContent: \"space-between\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"taskBar__details\",\n      children: [\"Total : \", count]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: clsx(classes.taskBar__actions),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"taskBar__action\",\n        onClick: handleRemoveTasks,\n        children: /*#__PURE__*/_jsxDEV(\"ion-icon\", {\n          name: \"trash\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"taskBar__action\",\n        children: /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"form-control-lg\",\n          \"aria-label\": \"Default select example\",\n          onChange: handleChangeOption,\n          value: selectedOption,\n          children: listStatus.map(item => {\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              value: item.value,\n              className: \"taskBar__option\",\n              children: item.name\n            }, item.value, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TaskBar, \"qtYmBtIQhyO3qbdZS1PntO115sI=\", false, function () {\n  return [useStyles];\n});\n\n_c = TaskBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskBar\");","map":{"version":3,"sources":["D:/4.Document/Work/MonstarLab/Intern/ReactJS/todo/src/components/home/task/view/TaskBar.js"],"names":["React","useState","useEffect","createUseStyles","clsx","useStyles","taskBar__actions","display","alignItems","justifyContent","gap","TaskBar","status","count","handleChangeData","handleChangeStatus","classes","listStatus","setListStatus","name","value","selectedOption","setSelectedOption","selectedTasks","setSelectedTasks","handleChangeOption","event","optionVal","target","console","log","handleSelectTasks","id","handleRemoveTasks","fontSize","textTransform","padding","map","item"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { createUseStyles } from \"react-jss\";\r\nimport clsx from \"clsx\";\r\n\r\nconst useStyles = createUseStyles({\r\n  taskBar__actions: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    gap: \"1rem\",\r\n  },\r\n});\r\n\r\nexport default function TaskBar({\r\n  status,\r\n  count,\r\n  handleChangeData,\r\n  handleChangeStatus,\r\n}) {\r\n  const classes = useStyles();\r\n\r\n  const [listStatus, setListStatus] = useState([\r\n    { name: \"All Task\", value: \"all\" },\r\n    { name: \"In Process Task\", value: \"inProcess\" },\r\n    { name: \"Complete Task\", value: \"complete\" },\r\n  ]);\r\n  const [selectedOption, setSelectedOption] = useState(status);\r\n  const [selectedTasks, setSelectedTasks] = useState([]);\r\n\r\n  const handleChangeOption = (event) => {\r\n    const optionVal = event.target.value;\r\n    setSelectedOption(optionVal);\r\n    console.log(optionVal);\r\n  };\r\n\r\n  const handleSelectTasks = (id) => (event) => {\r\n    setSelectedTasks\r\n  };\r\n\r\n  const handleRemoveTasks = (event) => {};\r\n\r\n  return (\r\n    <div\r\n      className=\"task__title\"\r\n      style={{\r\n        fontSize: \"2rem\",\r\n        textTransform: \"capitalize\",\r\n        padding: \"2rem\",\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\",\r\n      }}\r\n    >\r\n      <div className=\"taskBar__details\">Total : {count}</div>\r\n\r\n      <div className={clsx(classes.taskBar__actions)}>\r\n        <div className=\"taskBar__action\" onClick={handleRemoveTasks}>\r\n          <ion-icon name=\"trash\"></ion-icon>\r\n        </div>\r\n        <div className=\"taskBar__action\">\r\n          <select\r\n            className=\"form-control-lg\"\r\n            aria-label=\"Default select example\"\r\n            onChange={handleChangeOption}\r\n            value={selectedOption}\r\n          >\r\n            {listStatus.map((item) => {\r\n              return (\r\n                <option\r\n                  key={item.value}\r\n                  value={item.value}\r\n                  className=\"taskBar__option\"\r\n                >\r\n                  {item.name}\r\n                </option>\r\n              );\r\n            })}\r\n          </select>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}