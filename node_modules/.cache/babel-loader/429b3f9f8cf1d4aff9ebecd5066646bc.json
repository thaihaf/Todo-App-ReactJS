{"ast":null,"code":"import axios from \"axios\";\nimport { toast } from \"react-toastify\";\nexport default function fetchClient() {\n  axios.interceptors.request.use(function (config) {\n    // Do something before request is sent\n    let user = JSON.parse(localStorage.getItem(\"user\"));\n    console.log(user.token);\n    axios.defaults.headers.common[\"Authorization\"] = user && user.token ? `Bearer ${user.token}` : \"\";\n    return config;\n  }, function (error) {\n    console.log(error); // Do something with request error\n\n    return Promise.reject(error);\n  }); // // Add a response interceptor\n\n  axios.interceptors.response.use(function (response) {\n    // Any status code that lie within the range of 2xx cause this function to trigger\n    // Do something with response data\n    return response;\n  }, function (error) {\n    if (error.response.status == 401) {\n      toast.warn(\"This token is invalidated\");\n      localStorage.removeItem(\"user\");\n    } // Any status codes that falls outside the range of 2xx cause this function to trigger\n    // Do something with response error\n\n\n    return Promise.reject(error);\n  });\n}","map":{"version":3,"sources":["D:/4.Document/Work/MonstarLab/Intern/ReactJS/todo/src/service/defaultAPI/fetchClient.js"],"names":["axios","toast","fetchClient","interceptors","request","use","config","user","JSON","parse","localStorage","getItem","console","log","token","defaults","headers","common","error","Promise","reject","response","status","warn","removeItem"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,gBAAtB;AAEA,eAAe,SAASC,WAAT,GAAuB;AACpCF,EAAAA,KAAK,CAACG,YAAN,CAAmBC,OAAnB,CAA2BC,GAA3B,CACE,UAAUC,MAAV,EAAkB;AAChB;AACA,QAAIC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAAX;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYN,IAAI,CAACO,KAAjB;AACAd,IAAAA,KAAK,CAACe,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,CAA8B,eAA9B,IACEV,IAAI,IAAIA,IAAI,CAACO,KAAb,GAAsB,UAASP,IAAI,CAACO,KAAM,EAA1C,GAA8C,EADhD;AAGA,WAAOR,MAAP;AACD,GATH,EAUE,UAAUY,KAAV,EAAiB;AACfN,IAAAA,OAAO,CAACC,GAAR,CAAYK,KAAZ,EADe,CAEf;;AACA,WAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACD,GAdH,EADoC,CAkBpC;;AACAlB,EAAAA,KAAK,CAACG,YAAN,CAAmBkB,QAAnB,CAA4BhB,GAA5B,CACE,UAAUgB,QAAV,EAAoB;AAClB;AACA;AACA,WAAOA,QAAP;AACD,GALH,EAME,UAAUH,KAAV,EAAiB;AACf,QAAIA,KAAK,CAACG,QAAN,CAAeC,MAAf,IAAyB,GAA7B,EAAkC;AAChCrB,MAAAA,KAAK,CAACsB,IAAN,CAAW,2BAAX;AACAb,MAAAA,YAAY,CAACc,UAAb,CAAwB,MAAxB;AACD,KAJc,CAMf;AACA;;;AACA,WAAOL,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACD,GAfH;AAiBD","sourcesContent":["import axios from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nexport default function fetchClient() {\r\n  axios.interceptors.request.use(\r\n    function (config) {\r\n      // Do something before request is sent\r\n      let user = JSON.parse(localStorage.getItem(\"user\"));\r\n      console.log(user.token);\r\n      axios.defaults.headers.common[\"Authorization\"] =\r\n        user && user.token ? `Bearer ${user.token}` : \"\";\r\n\r\n      return config;\r\n    },\r\n    function (error) {\r\n      console.log(error);\r\n      // Do something with request error\r\n      return Promise.reject(error);\r\n    }\r\n  );\r\n\r\n  // // Add a response interceptor\r\n  axios.interceptors.response.use(\r\n    function (response) {\r\n      // Any status code that lie within the range of 2xx cause this function to trigger\r\n      // Do something with response data\r\n      return response;\r\n    },\r\n    function (error) {\r\n      if (error.response.status == 401) {\r\n        toast.warn(\"This token is invalidated\");\r\n        localStorage.removeItem(\"user\");\r\n      }\r\n\r\n      // Any status codes that falls outside the range of 2xx cause this function to trigger\r\n      // Do something with response error\r\n      return Promise.reject(error);\r\n    }\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}