{"ast":null,"code":"var _jsxFileName = \"D:\\\\4.Document\\\\Work\\\\MonstarLab\\\\Intern\\\\ReactJS\\\\todo\\\\src\\\\components\\\\home\\\\task\\\\actions\\\\editTask\\\\EditTask.js\",\n    _s = $RefreshSig$();\n\n// lib\nimport { createUseStyles } from \"react-jss\";\nimport clsx from \"clsx\";\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Select from \"react-select\";\nimport useTaskForm from \"../services/useTaskForm\";\nimport GetCollectionFunc from \"../GetTasksFunc\";\nimport IsEmptyObject from \"../../../../../service/IsEmptyObject\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = createUseStyles({\n  EditTask: {\n    top: \"0\",\n    left: \"0\",\n    width: \"100vw\",\n    height: \"100vh\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    zIndex: \"11\",\n    color: \"#FFFFFF\"\n  },\n  editTask__bg: {\n    backgroundColor: \"#000\",\n    opacity: \"70%\"\n  },\n  editTask__container: {\n    width: \"42rem\",\n    minWidth: \"48rem\",\n    marginTop: \"6rem\",\n    padding: \"2rem\",\n    backgroundColor: \"#1D1D27\",\n    textAlign: \"left\",\n    borderRadius: \"1.6rem\"\n  },\n  editTask__caption: {\n    fontSize: \"2rem\",\n    textTransform: \"capitalize\",\n    fontWeight: \"bold\",\n    marginBottom: \"2rem\"\n  },\n  editTask__title: {\n    fontSize: \"1.6rem\",\n    textTransform: \"capitalize\",\n    marginBottom: \"1rem\"\n  },\n  editTask__colors: {\n    display: \"grid\",\n    gap: \"1.5rem\",\n    gridTemplateColumns: \"repeat(auto-fit, 6rem)\"\n  },\n  editTask__color: {\n    width: \"6rem\",\n    height: \"5rem\",\n    backgroundColor: \"transparent\",\n    cursor: \"pointer\",\n    borderRadius: \"1.2rem\",\n    transition: \"all 0.1s ease-in-out\",\n    position: \"relative\"\n  },\n  editTask__buttons: {\n    gap: \"1rem\",\n    marginTop: \"5rem\"\n  },\n  editTask__group: {\n    marginBottom: \"2rem\",\n    width: \"100%\"\n  },\n  editTask__err: {\n    color: \"red\",\n    padding: \"1rem\",\n    fontSize: \"1.4rem\"\n  },\n  editTask__cbbox: {\n    color: \"var(--bg-btn-pink)\",\n    backgroundColor: \"transparent\",\n    fontSize: \"1.4rem\"\n  }\n});\n\nconst EditTask = ({\n  listColl,\n  task,\n  toggleFunc,\n  displayVal\n}) => {\n  _s();\n\n  const classes = useStyles();\n  const [currentCollsConvert, setCurrentCollsConvert] = useState([]);\n  const [allCollsConvert, setAllCollsConvert] = useState([]);\n  const [selectedOption, setSelectedOption] = useState([]);\n  useEffect(() => {\n    if (!IsEmptyObject(listColl)) {\n      let allCollsConvertTemp = listColl.map(item => {\n        return {\n          value: item.id,\n          label: item.name\n        };\n      });\n      console.log(allCollsConvertTemp);\n      setAllCollsConvert(allCollsConvertTemp);\n    }\n  }, []);\n  useEffect(() => {\n    if (!IsEmptyObject(task.categories)) {\n      let currentCollsConvertTemp = task.categories.map(item => {\n        return {\n          value: item.id,\n          label: item.name\n        };\n      });\n      console.log(currentCollsConvertTemp);\n      setCurrentCollsConvert(currentCollsConvertTemp);\n    }\n  }, []);\n\n  const HandleEditTask = values => {\n    const title = values.title;\n    let listSelection = selectedOption.map(item => {\n      return {\n        id: item.value,\n        name: item.label\n      };\n    });\n    let categories = [...task.categories, ...listSelection];\n    console.log(categories); // axios({\n    //   method: \"post\",\n    //   url: \"api/categories/${collection.id}\",\n    //   data: { title },\n    // })\n    //   .then((res) => {\n    //     console.log(res);\n    //   })\n    //   .catch((err) => {\n    //     const errMsg = err.response.data.message;\n    //     console.log(errMsg);\n    //   });\n  };\n\n  const {\n    handleChange,\n    handleSubmit,\n    values,\n    errors\n  } = useTaskForm(HandleEditTask);\n\n  const closeTabFunc = () => event => {\n    toggleFunc(false)();\n  };\n\n  const handleChangeOption = options => {\n    console.log(options);\n    setSelectedOption(options);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: clsx(classes.EditTask, \"m-auto position-fixed\", !displayVal && \"d-none\"),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: clsx(classes.editTask__bg, \"w-100 h-100 position-absolute\"),\n      onClick: closeTabFunc(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: clsx(classes.editTask__container, \"position-absolute\"),\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        method: \"post\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"editTask__top d-flex w-100\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: clsx(classes.editTask__caption, \"mr-auto\"),\n            children: \"Edit Task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"editTask__close-btn\",\n            onClick: closeTabFunc(false),\n            children: /*#__PURE__*/_jsxDEV(\"ion-icon\", {\n              name: \"close\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: clsx(classes.editTask__group, \"bar-title\"),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: clsx(classes.editTask__title),\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"My Task\",\n            className: \"btn--outline w-100 py-3\",\n            style: {\n              fontSize: \"1.6rem\"\n            },\n            name: \"title\",\n            value: values.title,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 13\n          }, this), errors.title && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: clsx(classes.editTask__err),\n            children: [\"*\", errors.title]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: clsx(classes.editTask__group, \"bar-listColl\"),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: clsx(classes.editTask__title),\n            children: \"List Collection\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            defaultValue: () => {\n              let a = allCollsConvert.filter(item => {\n                return;\n              });\n              return;\n            },\n            isMulti: true,\n            name: \"collection\",\n            options: [...allCollsConvert, ...currentCollsConvert],\n            className: clsx(\"basic-multi-select\", classes.editTask__cbbox),\n            classNamePrefix: \"select\",\n            onChange: handleChangeOption\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: clsx(classes.editTask__buttons, \"w-100 d-flex\"),\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"editTask__button button btn--none-border btn--hover-bg-gray-light ml-auto mb-0\",\n            style: {\n              backgroundColor: \"#3D3C50\"\n            },\n            type: \"submit\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"reset\",\n            className: \"editTask__button button btn--none-border btn--hover-bg-gray mb-0\",\n            onClick: closeTabFunc(),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 148,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EditTask, \"IlumiTMZul4tMSDA4XEdOdHzyZc=\", false, function () {\n  return [useStyles, useTaskForm];\n});\n\n_c = EditTask;\nexport default EditTask;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditTask\");","map":{"version":3,"sources":["D:/4.Document/Work/MonstarLab/Intern/ReactJS/todo/src/components/home/task/actions/editTask/EditTask.js"],"names":["createUseStyles","clsx","useState","useEffect","axios","Select","useTaskForm","GetCollectionFunc","IsEmptyObject","useStyles","EditTask","top","left","width","height","display","justifyContent","zIndex","color","editTask__bg","backgroundColor","opacity","editTask__container","minWidth","marginTop","padding","textAlign","borderRadius","editTask__caption","fontSize","textTransform","fontWeight","marginBottom","editTask__title","editTask__colors","gap","gridTemplateColumns","editTask__color","cursor","transition","position","editTask__buttons","editTask__group","editTask__err","editTask__cbbox","listColl","task","toggleFunc","displayVal","classes","currentCollsConvert","setCurrentCollsConvert","allCollsConvert","setAllCollsConvert","selectedOption","setSelectedOption","allCollsConvertTemp","map","item","value","id","label","name","console","log","categories","currentCollsConvertTemp","HandleEditTask","values","title","listSelection","handleChange","handleSubmit","errors","closeTabFunc","event","handleChangeOption","options","a","filter"],"mappings":";;;AAAA;AACA,SAASA,eAAT,QAAgC,WAAhC;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AAEA,OAAOC,WAAP,MAAwB,yBAAxB;AACA,OAAOC,iBAAP,MAA8B,iBAA9B;AAEA,OAAOC,aAAP,MAA0B,sCAA1B;;AAEA,MAAMC,SAAS,GAAGT,eAAe,CAAC;AAChCU,EAAAA,QAAQ,EAAE;AACRC,IAAAA,GAAG,EAAE,GADG;AAERC,IAAAA,IAAI,EAAE,GAFE;AAGRC,IAAAA,KAAK,EAAE,OAHC;AAIRC,IAAAA,MAAM,EAAE,OAJA;AAKRC,IAAAA,OAAO,EAAE,MALD;AAMRC,IAAAA,cAAc,EAAE,QANR;AAORC,IAAAA,MAAM,EAAE,IAPA;AAQRC,IAAAA,KAAK,EAAE;AARC,GADsB;AAWhCC,EAAAA,YAAY,EAAE;AACZC,IAAAA,eAAe,EAAE,MADL;AAEZC,IAAAA,OAAO,EAAE;AAFG,GAXkB;AAehCC,EAAAA,mBAAmB,EAAE;AACnBT,IAAAA,KAAK,EAAE,OADY;AAEnBU,IAAAA,QAAQ,EAAE,OAFS;AAGnBC,IAAAA,SAAS,EAAE,MAHQ;AAInBC,IAAAA,OAAO,EAAE,MAJU;AAKnBL,IAAAA,eAAe,EAAE,SALE;AAMnBM,IAAAA,SAAS,EAAE,MANQ;AAOnBC,IAAAA,YAAY,EAAE;AAPK,GAfW;AAwBhCC,EAAAA,iBAAiB,EAAE;AACjBC,IAAAA,QAAQ,EAAE,MADO;AAEjBC,IAAAA,aAAa,EAAE,YAFE;AAGjBC,IAAAA,UAAU,EAAE,MAHK;AAIjBC,IAAAA,YAAY,EAAE;AAJG,GAxBa;AA8BhCC,EAAAA,eAAe,EAAE;AACfJ,IAAAA,QAAQ,EAAE,QADK;AAEfC,IAAAA,aAAa,EAAE,YAFA;AAGfE,IAAAA,YAAY,EAAE;AAHC,GA9Be;AAmChCE,EAAAA,gBAAgB,EAAE;AAChBnB,IAAAA,OAAO,EAAE,MADO;AAEhBoB,IAAAA,GAAG,EAAE,QAFW;AAGhBC,IAAAA,mBAAmB,EAAE;AAHL,GAnCc;AAwChCC,EAAAA,eAAe,EAAE;AACfxB,IAAAA,KAAK,EAAE,MADQ;AAEfC,IAAAA,MAAM,EAAE,MAFO;AAGfM,IAAAA,eAAe,EAAE,aAHF;AAIfkB,IAAAA,MAAM,EAAE,SAJO;AAKfX,IAAAA,YAAY,EAAE,QALC;AAMfY,IAAAA,UAAU,EAAE,sBANG;AAOfC,IAAAA,QAAQ,EAAE;AAPK,GAxCe;AAiDhCC,EAAAA,iBAAiB,EAAE;AACjBN,IAAAA,GAAG,EAAE,MADY;AAEjBX,IAAAA,SAAS,EAAE;AAFM,GAjDa;AAqDhCkB,EAAAA,eAAe,EAAE;AACfV,IAAAA,YAAY,EAAE,MADC;AAEfnB,IAAAA,KAAK,EAAE;AAFQ,GArDe;AAyDhC8B,EAAAA,aAAa,EAAE;AACbzB,IAAAA,KAAK,EAAE,KADM;AAEbO,IAAAA,OAAO,EAAE,MAFI;AAGbI,IAAAA,QAAQ,EAAE;AAHG,GAzDiB;AA8DhCe,EAAAA,eAAe,EAAE;AACf1B,IAAAA,KAAK,EAAE,oBADQ;AAEfE,IAAAA,eAAe,EAAE,aAFF;AAGfS,IAAAA,QAAQ,EAAE;AAHK;AA9De,CAAD,CAAjC;;AAqEA,MAAMnB,QAAQ,GAAG,CAAC;AAAEmC,EAAAA,QAAF;AAAYC,EAAAA,IAAZ;AAAkBC,EAAAA,UAAlB;AAA8BC,EAAAA;AAA9B,CAAD,KAAgD;AAAA;;AAC/D,QAAMC,OAAO,GAAGxC,SAAS,EAAzB;AAEA,QAAM,CAACyC,mBAAD,EAAsBC,sBAAtB,IAAgDjD,QAAQ,CAAC,EAAD,CAA9D;AACA,QAAM,CAACkD,eAAD,EAAkBC,kBAAlB,IAAwCnD,QAAQ,CAAC,EAAD,CAAtD;AAEA,QAAM,CAACoD,cAAD,EAAiBC,iBAAjB,IAAsCrD,QAAQ,CAAC,EAAD,CAApD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACK,aAAa,CAACqC,QAAD,CAAlB,EAA8B;AAC5B,UAAIW,mBAAmB,GAAGX,QAAQ,CAACY,GAAT,CAAcC,IAAD,IAAU;AAC/C,eAAO;AAAEC,UAAAA,KAAK,EAAED,IAAI,CAACE,EAAd;AAAkBC,UAAAA,KAAK,EAAEH,IAAI,CAACI;AAA9B,SAAP;AACD,OAFyB,CAA1B;AAIAC,MAAAA,OAAO,CAACC,GAAR,CAAYR,mBAAZ;AACAH,MAAAA,kBAAkB,CAACG,mBAAD,CAAlB;AACD;AACF,GATQ,EASN,EATM,CAAT;AAWArD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACK,aAAa,CAACsC,IAAI,CAACmB,UAAN,CAAlB,EAAqC;AACnC,UAAIC,uBAAuB,GAAGpB,IAAI,CAACmB,UAAL,CAAgBR,GAAhB,CAAqBC,IAAD,IAAU;AAC1D,eAAO;AAAEC,UAAAA,KAAK,EAAED,IAAI,CAACE,EAAd;AAAkBC,UAAAA,KAAK,EAAEH,IAAI,CAACI;AAA9B,SAAP;AACD,OAF6B,CAA9B;AAIAC,MAAAA,OAAO,CAACC,GAAR,CAAYE,uBAAZ;AACAf,MAAAA,sBAAsB,CAACe,uBAAD,CAAtB;AACD;AACF,GATQ,EASN,EATM,CAAT;;AAWA,QAAMC,cAAc,GAAIC,MAAD,IAAY;AACjC,UAAMC,KAAK,GAAGD,MAAM,CAACC,KAArB;AAEA,QAAIC,aAAa,GAAGhB,cAAc,CAACG,GAAf,CAAoBC,IAAD,IAAU;AAC/C,aAAO;AAAEE,QAAAA,EAAE,EAAEF,IAAI,CAACC,KAAX;AAAkBG,QAAAA,IAAI,EAAEJ,IAAI,CAACG;AAA7B,OAAP;AACD,KAFmB,CAApB;AAGA,QAAII,UAAU,GAAG,CAAC,GAAGnB,IAAI,CAACmB,UAAT,EAAqB,GAAGK,aAAxB,CAAjB;AAEAP,IAAAA,OAAO,CAACC,GAAR,CAAYC,UAAZ,EARiC,CASjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,GArBD;;AAuBA,QAAM;AAAEM,IAAAA,YAAF;AAAgBC,IAAAA,YAAhB;AAA8BJ,IAAAA,MAA9B;AAAsCK,IAAAA;AAAtC,MACJnE,WAAW,CAAC6D,cAAD,CADb;;AAGA,QAAMO,YAAY,GAAG,MAAOC,KAAD,IAAW;AACpC5B,IAAAA,UAAU,CAAC,KAAD,CAAV;AACD,GAFD;;AAIA,QAAM6B,kBAAkB,GAAIC,OAAD,IAAa;AACtCd,IAAAA,OAAO,CAACC,GAAR,CAAYa,OAAZ;AACAtB,IAAAA,iBAAiB,CAACsB,OAAD,CAAjB;AACD,GAHD;;AAKA,sBACE;AACE,IAAA,SAAS,EAAE5E,IAAI,CACbgD,OAAO,CAACvC,QADK,EAEb,uBAFa,EAGb,CAACsC,UAAD,IAAe,QAHF,CADjB;AAAA,4BAOE;AACE,MAAA,SAAS,EAAE/C,IAAI,CAACgD,OAAO,CAAC9B,YAAT,EAAuB,+BAAvB,CADjB;AAEE,MAAA,OAAO,EAAEuD,YAAY,CAAC,KAAD;AAFvB;AAAA;AAAA;AAAA;AAAA,YAPF,eAYE;AAAK,MAAA,SAAS,EAAEzE,IAAI,CAACgD,OAAO,CAAC3B,mBAAT,EAA8B,mBAA9B,CAApB;AAAA,6BACE;AAAM,QAAA,MAAM,EAAC,MAAb;AAAoB,QAAA,QAAQ,EAAEkD,YAA9B;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,4BAAf;AAAA,kCACE;AAAK,YAAA,SAAS,EAAEvE,IAAI,CAACgD,OAAO,CAACrB,iBAAT,EAA4B,SAA5B,CAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE;AAAK,YAAA,SAAS,EAAC,qBAAf;AAAqC,YAAA,OAAO,EAAE8C,YAAY,CAAC,KAAD,CAA1D;AAAA,mCACE;AAAU,cAAA,IAAI,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAUE;AAAK,UAAA,SAAS,EAAEzE,IAAI,CAACgD,OAAO,CAACP,eAAT,EAA0B,WAA1B,CAApB;AAAA,kCACE;AAAK,YAAA,SAAS,EAAEzC,IAAI,CAACgD,OAAO,CAAChB,eAAT,CAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AACE,YAAA,IAAI,EAAC,MADP;AAEE,YAAA,WAAW,EAAC,SAFd;AAGE,YAAA,SAAS,EAAC,yBAHZ;AAIE,YAAA,KAAK,EAAE;AAAEJ,cAAAA,QAAQ,EAAE;AAAZ,aAJT;AAKE,YAAA,IAAI,EAAC,OALP;AAME,YAAA,KAAK,EAAEuC,MAAM,CAACC,KANhB;AAOE,YAAA,QAAQ,EAAEE;AAPZ;AAAA;AAAA;AAAA;AAAA,kBAFF,EAWGE,MAAM,CAACJ,KAAP,iBACC;AAAK,YAAA,SAAS,EAAEpE,IAAI,CAACgD,OAAO,CAACN,aAAT,CAApB;AAAA,4BAA+C8B,MAAM,CAACJ,KAAtD;AAAA;AAAA;AAAA;AAAA;AAAA,kBAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVF,eAyBE;AAAK,UAAA,SAAS,EAAEpE,IAAI,CAACgD,OAAO,CAACP,eAAT,EAA0B,cAA1B,CAApB;AAAA,kCACE;AAAK,YAAA,SAAS,EAAEzC,IAAI,CAACgD,OAAO,CAAChB,eAAT,CAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAGE,QAAC,MAAD;AACE,YAAA,YAAY,EAAE,MAAM;AAClB,kBAAI6C,CAAC,GAAG1B,eAAe,CAAC2B,MAAhB,CAAwBrB,IAAD,IAAU;AACvC;AACD,eAFO,CAAR;AAGA;AAED,aAPH;AAQE,YAAA,OAAO,MART;AASE,YAAA,IAAI,EAAC,YATP;AAUE,YAAA,OAAO,EAAE,CAAC,GAAGN,eAAJ,EAAqB,GAAGF,mBAAxB,CAVX;AAWE,YAAA,SAAS,EAAEjD,IAAI,CAAC,oBAAD,EAAuBgD,OAAO,CAACL,eAA/B,CAXjB;AAYE,YAAA,eAAe,EAAC,QAZlB;AAaE,YAAA,QAAQ,EAAEgC;AAbZ;AAAA;AAAA;AAAA;AAAA,kBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAzBF,eA6CE;AAAK,UAAA,SAAS,EAAE3E,IAAI,CAACgD,OAAO,CAACR,iBAAT,EAA4B,cAA5B,CAApB;AAAA,kCACE;AACE,YAAA,SAAS,EAAC,gFADZ;AAEE,YAAA,KAAK,EAAE;AAAErB,cAAAA,eAAe,EAAE;AAAnB,aAFT;AAGE,YAAA,IAAI,EAAC,QAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAQE;AACE,YAAA,IAAI,EAAC,OADP;AAEE,YAAA,SAAS,EAAC,kEAFZ;AAGE,YAAA,OAAO,EAAEsD,YAAY,EAHvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBARF;AAAA;AAAA;AAAA;AAAA;AAAA,gBA7CF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAZF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA+ED,CAhJD;;GAAMhE,Q;UACYD,S,EAqDdH,W;;;KAtDEI,Q;AAkJN,eAAeA,QAAf","sourcesContent":["// lib\r\nimport { createUseStyles } from \"react-jss\";\r\nimport clsx from \"clsx\";\r\nimport { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport Select from \"react-select\";\r\n\r\nimport useTaskForm from \"../services/useTaskForm\";\r\nimport GetCollectionFunc from \"../GetTasksFunc\";\r\n\r\nimport IsEmptyObject from \"../../../../../service/IsEmptyObject\";\r\n\r\nconst useStyles = createUseStyles({\r\n  EditTask: {\r\n    top: \"0\",\r\n    left: \"0\",\r\n    width: \"100vw\",\r\n    height: \"100vh\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    zIndex: \"11\",\r\n    color: \"#FFFFFF\",\r\n  },\r\n  editTask__bg: {\r\n    backgroundColor: \"#000\",\r\n    opacity: \"70%\",\r\n  },\r\n  editTask__container: {\r\n    width: \"42rem\",\r\n    minWidth: \"48rem\",\r\n    marginTop: \"6rem\",\r\n    padding: \"2rem\",\r\n    backgroundColor: \"#1D1D27\",\r\n    textAlign: \"left\",\r\n    borderRadius: \"1.6rem\",\r\n  },\r\n  editTask__caption: {\r\n    fontSize: \"2rem\",\r\n    textTransform: \"capitalize\",\r\n    fontWeight: \"bold\",\r\n    marginBottom: \"2rem\",\r\n  },\r\n  editTask__title: {\r\n    fontSize: \"1.6rem\",\r\n    textTransform: \"capitalize\",\r\n    marginBottom: \"1rem\",\r\n  },\r\n  editTask__colors: {\r\n    display: \"grid\",\r\n    gap: \"1.5rem\",\r\n    gridTemplateColumns: \"repeat(auto-fit, 6rem)\",\r\n  },\r\n  editTask__color: {\r\n    width: \"6rem\",\r\n    height: \"5rem\",\r\n    backgroundColor: \"transparent\",\r\n    cursor: \"pointer\",\r\n    borderRadius: \"1.2rem\",\r\n    transition: \"all 0.1s ease-in-out\",\r\n    position: \"relative\",\r\n  },\r\n  editTask__buttons: {\r\n    gap: \"1rem\",\r\n    marginTop: \"5rem\",\r\n  },\r\n  editTask__group: {\r\n    marginBottom: \"2rem\",\r\n    width: \"100%\",\r\n  },\r\n  editTask__err: {\r\n    color: \"red\",\r\n    padding: \"1rem\",\r\n    fontSize: \"1.4rem\",\r\n  },\r\n  editTask__cbbox: {\r\n    color: \"var(--bg-btn-pink)\",\r\n    backgroundColor: \"transparent\",\r\n    fontSize: \"1.4rem\",\r\n  },\r\n});\r\n\r\nconst EditTask = ({ listColl, task, toggleFunc, displayVal }) => {\r\n  const classes = useStyles();\r\n\r\n  const [currentCollsConvert, setCurrentCollsConvert] = useState([]);\r\n  const [allCollsConvert, setAllCollsConvert] = useState([]);\r\n\r\n  const [selectedOption, setSelectedOption] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (!IsEmptyObject(listColl)) {\r\n      let allCollsConvertTemp = listColl.map((item) => {\r\n        return { value: item.id, label: item.name };\r\n      });\r\n\r\n      console.log(allCollsConvertTemp)\r\n      setAllCollsConvert(allCollsConvertTemp);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!IsEmptyObject(task.categories)) {\r\n      let currentCollsConvertTemp = task.categories.map((item) => {\r\n        return { value: item.id, label: item.name };\r\n      });\r\n\r\n      console.log(currentCollsConvertTemp)\r\n      setCurrentCollsConvert(currentCollsConvertTemp);\r\n    }\r\n  }, []);\r\n\r\n  const HandleEditTask = (values) => {\r\n    const title = values.title;\r\n\r\n    let listSelection = selectedOption.map((item) => {\r\n      return { id: item.value, name: item.label };\r\n    });\r\n    let categories = [...task.categories, ...listSelection];\r\n\r\n    console.log(categories);\r\n    // axios({\r\n    //   method: \"post\",\r\n    //   url: \"api/categories/${collection.id}\",\r\n    //   data: { title },\r\n    // })\r\n    //   .then((res) => {\r\n    //     console.log(res);\r\n    //   })\r\n    //   .catch((err) => {\r\n    //     const errMsg = err.response.data.message;\r\n    //     console.log(errMsg);\r\n    //   });\r\n  };\r\n\r\n  const { handleChange, handleSubmit, values, errors } =\r\n    useTaskForm(HandleEditTask);\r\n\r\n  const closeTabFunc = () => (event) => {\r\n    toggleFunc(false)();\r\n  };\r\n\r\n  const handleChangeOption = (options) => {\r\n    console.log(options);\r\n    setSelectedOption(options);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={clsx(\r\n        classes.EditTask,\r\n        \"m-auto position-fixed\",\r\n        !displayVal && \"d-none\"\r\n      )}\r\n    >\r\n      <div\r\n        className={clsx(classes.editTask__bg, \"w-100 h-100 position-absolute\")}\r\n        onClick={closeTabFunc(false)}\r\n      ></div>\r\n\r\n      <div className={clsx(classes.editTask__container, \"position-absolute\")}>\r\n        <form method=\"post\" onSubmit={handleSubmit}>\r\n          <div className=\"editTask__top d-flex w-100\">\r\n            <div className={clsx(classes.editTask__caption, \"mr-auto\")}>\r\n              Edit Task\r\n            </div>\r\n            <div className=\"editTask__close-btn\" onClick={closeTabFunc(false)}>\r\n              <ion-icon name=\"close\"></ion-icon>\r\n            </div>\r\n          </div>\r\n\r\n          <div className={clsx(classes.editTask__group, \"bar-title\")}>\r\n            <div className={clsx(classes.editTask__title)}>Title</div>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"My Task\"\r\n              className=\"btn--outline w-100 py-3\"\r\n              style={{ fontSize: \"1.6rem\" }}\r\n              name=\"title\"\r\n              value={values.title}\r\n              onChange={handleChange}\r\n            />\r\n            {errors.title && (\r\n              <div className={clsx(classes.editTask__err)}>*{errors.title}</div>\r\n            )}\r\n          </div>\r\n          <div className={clsx(classes.editTask__group, \"bar-listColl\")}>\r\n            <div className={clsx(classes.editTask__title)}>List Collection</div>\r\n\r\n            <Select\r\n              defaultValue={() => { \r\n                let a = allCollsConvert.filter((item) => {\r\n                  return \r\n                })\r\n                return \r\n              \r\n              }}\r\n              isMulti\r\n              name=\"collection\"\r\n              options={[...allCollsConvert, ...currentCollsConvert]}\r\n              className={clsx(\"basic-multi-select\", classes.editTask__cbbox)}\r\n              classNamePrefix=\"select\"\r\n              onChange={handleChangeOption}\r\n            />\r\n          </div>\r\n\r\n          <div className={clsx(classes.editTask__buttons, \"w-100 d-flex\")}>\r\n            <button\r\n              className=\"editTask__button button btn--none-border btn--hover-bg-gray-light ml-auto mb-0\"\r\n              style={{ backgroundColor: \"#3D3C50\" }}\r\n              type=\"submit\"\r\n            >\r\n              Submit\r\n            </button>\r\n            <button\r\n              type=\"reset\"\r\n              className=\"editTask__button button btn--none-border btn--hover-bg-gray mb-0\"\r\n              onClick={closeTabFunc()}\r\n            >\r\n              Cancel\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditTask;\r\n"]},"metadata":{},"sourceType":"module"}