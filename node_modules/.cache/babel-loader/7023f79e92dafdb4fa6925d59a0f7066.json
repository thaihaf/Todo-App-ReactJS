{"ast":null,"code":"import React from \"react\";\nimport axios from \"axios\";\nexport default async function SearchTaskFunc(_ref) {\n  let {\n    limitVal = 10,\n    pageVal = 1,\n    searchVal = \"\"\n  } = _ref;\n  const linkApi = searchVal === \"\" ? `api/tasks?limit=${limitVal}&page=${pageVal}` : `api/tasks?limit=${limitVal}&page=${pageVal}&search=${searchVal}`;\n  axios.get(linkApi).then(result => {\n    console.log(result.data);\n    return result.data;\n  }).catch(error => {\n    const errorMsg = error.response.data.message;\n    console.log(errorMsg);\n  });\n  return {};\n}\n_c = SearchTaskFunc;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchTaskFunc\");","map":{"version":3,"sources":["D:/4.Document/Work/MonstarLab/Intern/ReactJS/todo/src/components/home/task/searchTask/SearchTaskFunc.js"],"names":["React","axios","SearchTaskFunc","limitVal","pageVal","searchVal","linkApi","get","then","result","console","log","data","catch","error","errorMsg","response","message"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,eAAe,eAAeC,cAAf,OAIZ;AAAA,MAJ0C;AAC3CC,IAAAA,QAAQ,GAAG,EADgC;AAE3CC,IAAAA,OAAO,GAAG,CAFiC;AAG3CC,IAAAA,SAAS,GAAG;AAH+B,GAI1C;AACD,QAAMC,OAAO,GACXD,SAAS,KAAK,EAAd,GACK,mBAAkBF,QAAS,SAAQC,OAAQ,EADhD,GAEK,mBAAkBD,QAAS,SAAQC,OAAQ,WAAUC,SAAU,EAHtE;AAIAJ,EAAAA,KAAK,CACFM,GADH,CACOD,OADP,EAEGE,IAFH,CAESC,MAAD,IAAY;AAChBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,MAAM,CAACG,IAAnB;AACA,WAAOH,MAAM,CAACG,IAAd;AACD,GALH,EAMGC,KANH,CAMUC,KAAD,IAAW;AAChB,UAAMC,QAAQ,GAAGD,KAAK,CAACE,QAAN,CAAeJ,IAAf,CAAoBK,OAArC;AACAP,IAAAA,OAAO,CAACC,GAAR,CAAYI,QAAZ;AACD,GATH;AAWA,SAAO,EAAP;AACD;KArB6Bb,c","sourcesContent":["import React from \"react\";\r\nimport axios from \"axios\";\r\n\r\nexport default async function SearchTaskFunc({\r\n  limitVal = 10,\r\n  pageVal = 1,\r\n  searchVal = \"\",\r\n}) {\r\n  const linkApi =\r\n    searchVal === \"\"\r\n      ? `api/tasks?limit=${limitVal}&page=${pageVal}`\r\n      : `api/tasks?limit=${limitVal}&page=${pageVal}&search=${searchVal}`;\r\n  axios\r\n    .get(linkApi)\r\n    .then((result) => {\r\n      console.log(result.data);\r\n      return result.data;\r\n    })\r\n    .catch((error) => {\r\n      const errorMsg = error.response.data.message;\r\n      console.log(errorMsg);\r\n    });\r\n\r\n  return {};\r\n}\r\n"]},"metadata":{},"sourceType":"module"}