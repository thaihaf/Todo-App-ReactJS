{"ast":null,"code":"import _toConsumableArray from\"D:/4.Document/Work/MonstarLab/Intern/ReactJS/todo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _regeneratorRuntime from\"D:/4.Document/Work/MonstarLab/Intern/ReactJS/todo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"D:/4.Document/Work/MonstarLab/Intern/ReactJS/todo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"D:/4.Document/Work/MonstarLab/Intern/ReactJS/todo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";// lib\nimport{useState,useEffect}from\"react\";import{createUseStyles}from\"react-jss\";import clsx from\"clsx\";import{toast}from\"react-toastify\";// Component\nimport Task from\"./Task\";import Paging from\"../../../Paging/Paging\";import CreateTask from\"../actions/createTask/CreateTask\";import SearchTasks from\"../actions/searchTasks/SearchTasks\";import DeleteTask from\"../actions/deleteTask/DeleteTask\";// services\nimport taskAPI from\"../../../../service/fetchAPI/taskAPI\";import collectionAPI from\"../../../../service/fetchAPI/collectionsAPI\";// Service\nimport{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";var useStyles=createUseStyles({content:{textAlign:\"left\",maxWidth:\"unset\"},tasks:{width:\"80%\",maxWidth:\"100rem\",marginBottom:\"3rem\",display:\"grid\",gap:\"1.7rem\",gridTemplateColumns:\"repeat(auto-fit, minmax(25rem, 1fr))\",transition:\"all 0.3s linear\"},taskBar__container:{textTransform:\"capitalize\",display:\"flex\",alignItems:\"center\",justifyContent:\"space-between\",marginBottom:\"2rem\",width:\"80%\",maxWidth:\"100rem\"},taskBar__actions:{display:\"flex\",alignItems:\"center\",justifyContent:\"center\",gap:\"1rem\"},taskBar__action:{height:\"100%\",padding:\"0.8rem 2rem !important\",marginBottom:\"0\",borderRadius:\"1.5rem\",position:\"relative\"},taskBar__input:{minWidth:\"5rem\",padding:\"1rem\",width:\"3rem !important\",fontSize:\"1.5rem\"},taskBar__detail:{fontSize:\"2rem\",fontWeight:\"700\"},taskBar__lable:{fontSize:\"1.5rem\"}});var useActions=function useActions(){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),displayAddBarVal=_useState2[0],setDisplayAddBarVal=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),displaySearchBarVal=_useState4[0],setDisplaySearchBarVal=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),displayDeleteBarVal=_useState6[0],setDisplayDeleteBarVal=_useState6[1];// const inputSearchRef = useRef();\nvar toggleAddBar=function toggleAddBar(value){return function(event){setDisplayAddBarVal(value);};};var toggleSearchBar=function toggleSearchBar(value){return function(event){// if (inputSearchRef.current) {\n//   inputSearchRef.current.focus();\n// }\nsetDisplaySearchBarVal(value);};};var toggleDeleteBar=function toggleDeleteBar(value){return function(event){setDisplayDeleteBarVal(value);};};return{toggleAddBar:toggleAddBar,toggleSearchBar:toggleSearchBar,toggleDeleteBar:toggleDeleteBar,displayAddBarVal:displayAddBarVal,displaySearchBarVal:displaySearchBarVal,displayDeleteBarVal:displayDeleteBarVal// inputSearchRef,\n};};export default function ListTasks(){var classes=useStyles();var _useActions=useActions(),toggleAddBar=_useActions.toggleAddBar,toggleSearchBar=_useActions.toggleSearchBar,toggleDeleteBar=_useActions.toggleDeleteBar,displayAddBarVal=_useActions.displayAddBarVal,displaySearchBarVal=_useActions.displaySearchBarVal,displayDeleteBarVal=_useActions.displayDeleteBarVal;var _useState7=useState({}),_useState8=_slicedToArray(_useState7,2),data=_useState8[0],setData=_useState8[1];var _useState9=useState([]),_useState10=_slicedToArray(_useState9,2),listCollections=_useState10[0],setListCollections=_useState10[1];var _useState11=useState(\"\"),_useState12=_slicedToArray(_useState11,2),typeData=_useState12[0],setTypeData=_useState12[1];useEffect(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var errForm;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.t0=handleChangeData;_context.next=4;return taskAPI().getTasks(\"api/tasks?limit=6\");case 4:_context.t1=_context.sent;(0,_context.t0)(_context.t1);_context.next=12;break;case 8:_context.prev=8;_context.t2=_context[\"catch\"](0);errForm=_context.t2.message;toast.error(errForm);case 12:case\"end\":return _context.stop();}}},_callee,null,[[0,8]]);})),[]);useEffect(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var res,errForm;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;_context2.next=3;return collectionAPI().getCollections(\"api/categories\");case 3:res=_context2.sent;setListCollections(res.items);_context2.next=11;break;case 7:_context2.prev=7;_context2.t0=_context2[\"catch\"](0);errForm=_context2.t0.message;toast.error(errForm);case 11:case\"end\":return _context2.stop();}}},_callee2,null,[[0,7]]);})),[]);var _useState13=useState([]),_useState14=_slicedToArray(_useState13,2),selectedTasks=_useState14[0],setSelectedTasks=_useState14[1];var handleSelectTasks=function handleSelectTasks(id,checked){var existing=selectedTasks.includes(id);if(existing&&!checked){var newArr=selectedTasks.filter(function(select){return select!==id;});setSelectedTasks(newArr);}else if(!existing&&checked){setSelectedTasks([].concat(_toConsumableArray(selectedTasks),[id]));}};var handleRemoveTasks=function handleRemoveTasks(event){toggleDeleteBar(!displayDeleteBarVal)();};var handleChangeData=function handleChangeData(data,type){if(type===\"search\"){setTypeData(type);}setData(data);};return/*#__PURE__*/_jsx(\"div\",{className:\"ViewCollection\",children:/*#__PURE__*/_jsxs(\"div\",{className:clsx(classes.content,\"content\"),children:[/*#__PURE__*/_jsxs(\"div\",{className:clsx(classes.taskBar__container),children:[/*#__PURE__*/_jsx(\"div\",{className:clsx(classes.taskBar__details),children:/*#__PURE__*/_jsxs(\"div\",{className:clsx(classes.taskBar__detail),children:[\"Total : \",data&&data.meta?data.meta.totalItems:0]})}),/*#__PURE__*/_jsxs(\"div\",{className:clsx(classes.taskBar__actions,\"d-flex align-items-center\"),children:[/*#__PURE__*/_jsx(SearchTasks,{displayVal:displaySearchBarVal// inputSearchRef={inputSearchRef}\n,listTasks:data.items,handleChangeData:handleChangeData}),/*#__PURE__*/_jsx(\"button\",{className:clsx(classes.taskBar__action,classes.taskBar__action_search,\"button btn--flex btn--bg-gray btn--border btn--hover-bg-gray\"),onClick:toggleSearchBar(!displaySearchBarVal),children:/*#__PURE__*/_jsx(\"div\",{className:\"taskAction__icon\",children:/*#__PURE__*/_jsx(\"ion-icon\",{name:\"search\"})})}),/*#__PURE__*/_jsx(\"button\",{className:clsx(classes.taskBar__action,\"button btn--flex btn--bg-gray btn--border btn--hover-bg-gray\"),onClick:toggleAddBar(true),children:/*#__PURE__*/_jsx(\"div\",{className:\"taskAction__icon\",children:/*#__PURE__*/_jsx(\"ion-icon\",{name:\"add\"})})}),/*#__PURE__*/_jsx(\"button\",{className:clsx(classes.taskBar__action,\"button btn--flex btn--bg-gray btn--border btn--hover-bg-gray\"),onClick:handleRemoveTasks,children:/*#__PURE__*/_jsx(\"ion-icon\",{name:\"trash\"})})]})]}),data&&data.meta&&data.meta.totalItems==0&&(typeData==\"search\"?/*#__PURE__*/_jsx(\"div\",{style:{fontSize:\"1.5rem\",marginTop:\"3rem\"},children:\"No has any Task match with Search Value\"}):/*#__PURE__*/_jsxs(\"button\",{className:clsx(classes.taskBar__action,\"button btn--flex btn--bg-gray btn--border btn--hover-bg-gray\"),onClick:toggleAddBar(true),children:[/*#__PURE__*/_jsx(\"div\",{className:\"taskAction__icon\",children:/*#__PURE__*/_jsx(\"ion-icon\",{name:\"add\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"taskAction__text\",children:\"Add First Task\"})]})),/*#__PURE__*/_jsx(\"div\",{className:clsx(classes.tasks),children:data&&data.meta&&data.meta.totalItems>0&&data.items.map(function(task){return/*#__PURE__*/_jsx(Task,{task:task,listCollections:listCollections,handleChangeData:handleChangeData,handleSelectTasks:handleSelectTasks},task.id);})}),data&&data.meta&&data.meta.totalItems>0&&/*#__PURE__*/_jsx(Paging,{data:data,handleChangeData:handleChangeData}),/*#__PURE__*/_jsx(CreateTask,{displayVal:displayAddBarVal,toggleFunc:toggleAddBar,listCollections:listCollections,handleChangeData:handleChangeData}),/*#__PURE__*/_jsx(DeleteTask,{taskIDs:selectedTasks,displayVal:displayDeleteBarVal,toggleFunc:toggleDeleteBar,handleChangeData:handleChangeData})]})});}","map":{"version":3,"sources":["D:/4.Document/Work/MonstarLab/Intern/ReactJS/todo/src/components/home/task/view/ListTasks.js"],"names":["useState","useEffect","createUseStyles","clsx","toast","Task","Paging","CreateTask","SearchTasks","DeleteTask","taskAPI","collectionAPI","useStyles","content","textAlign","maxWidth","tasks","width","marginBottom","display","gap","gridTemplateColumns","transition","taskBar__container","textTransform","alignItems","justifyContent","taskBar__actions","taskBar__action","height","padding","borderRadius","position","taskBar__input","minWidth","fontSize","taskBar__detail","fontWeight","taskBar__lable","useActions","displayAddBarVal","setDisplayAddBarVal","displaySearchBarVal","setDisplaySearchBarVal","displayDeleteBarVal","setDisplayDeleteBarVal","toggleAddBar","value","event","toggleSearchBar","toggleDeleteBar","ListTasks","classes","data","setData","listCollections","setListCollections","typeData","setTypeData","handleChangeData","getTasks","errForm","message","error","getCollections","res","items","selectedTasks","setSelectedTasks","handleSelectTasks","id","checked","existing","includes","newArr","filter","select","handleRemoveTasks","type","taskBar__details","meta","totalItems","taskBar__action_search","marginTop","map","task"],"mappings":"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","sourcesContent":["// lib\r\nimport { useState, useEffect } from \"react\";\r\nimport { createUseStyles } from \"react-jss\";\r\nimport clsx from \"clsx\";\r\nimport { toast } from \"react-toastify\";\r\n\r\n// Component\r\nimport Task from \"./Task\";\r\nimport Paging from \"../../../Paging/Paging\";\r\nimport CreateTask from \"../actions/createTask/CreateTask\";\r\nimport SearchTasks from \"../actions/searchTasks/SearchTasks\";\r\nimport DeleteTask from \"../actions/deleteTask/DeleteTask\";\r\n\r\n// services\r\nimport taskAPI from \"../../../../service/fetchAPI/taskAPI\";\r\nimport collectionAPI from \"../../../../service/fetchAPI/collectionsAPI\";\r\n\r\n// Service\r\nconst useStyles = createUseStyles({\r\n  content: {\r\n    textAlign: \"left\",\r\n    maxWidth: \"unset\",\r\n  },\r\n  tasks: {\r\n    width: \"80%\",\r\n    maxWidth: \"100rem\",\r\n    marginBottom: \"3rem\",\r\n    display: \"grid\",\r\n    gap: \"1.7rem\",\r\n    gridTemplateColumns: \"repeat(auto-fit, minmax(25rem, 1fr))\",\r\n    transition: \"all 0.3s linear\",\r\n  },\r\n  taskBar__container: {\r\n    textTransform: \"capitalize\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-between\",\r\n    marginBottom: \"2rem\",\r\n    width: \"80%\",\r\n    maxWidth: \"100rem\",\r\n  },\r\n  taskBar__actions: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    gap: \"1rem\",\r\n  },\r\n  taskBar__action: {\r\n    height: \"100%\",\r\n    padding: \"0.8rem 2rem !important\",\r\n    marginBottom: \"0\",\r\n    borderRadius: \"1.5rem\",\r\n    position: \"relative\",\r\n  },\r\n\r\n  taskBar__input: {\r\n    minWidth: \"5rem\",\r\n    padding: \"1rem\",\r\n    width: \"3rem !important\",\r\n    fontSize: \"1.5rem\",\r\n  },\r\n  taskBar__detail: {\r\n    fontSize: \"2rem\",\r\n    fontWeight: \"700\",\r\n  },\r\n  taskBar__lable: {\r\n    fontSize: \"1.5rem\",\r\n  },\r\n});\r\n\r\nconst useActions = () => {\r\n  const [displayAddBarVal, setDisplayAddBarVal] = useState(false);\r\n  const [displaySearchBarVal, setDisplaySearchBarVal] = useState(false);\r\n  const [displayDeleteBarVal, setDisplayDeleteBarVal] = useState(false);\r\n\r\n  // const inputSearchRef = useRef();\r\n\r\n  const toggleAddBar = (value) => (event) => {\r\n    setDisplayAddBarVal(value);\r\n  };\r\n  const toggleSearchBar = (value) => (event) => {\r\n    // if (inputSearchRef.current) {\r\n    //   inputSearchRef.current.focus();\r\n    // }\r\n    setDisplaySearchBarVal(value);\r\n  };\r\n  const toggleDeleteBar = (value) => (event) => {\r\n    setDisplayDeleteBarVal(value);\r\n  };\r\n  return {\r\n    toggleAddBar,\r\n    toggleSearchBar,\r\n    toggleDeleteBar,\r\n    displayAddBarVal,\r\n    displaySearchBarVal,\r\n    displayDeleteBarVal,\r\n    // inputSearchRef,\r\n  };\r\n};\r\n\r\nexport default function ListTasks() {\r\n  const classes = useStyles();\r\n  const {\r\n    toggleAddBar,\r\n    toggleSearchBar,\r\n    toggleDeleteBar,\r\n    displayAddBarVal,\r\n    displaySearchBarVal,\r\n    displayDeleteBarVal,\r\n    // inputSearchRef,\r\n  } = useActions();\r\n\r\n  const [data, setData] = useState({});\r\n  const [listCollections, setListCollections] = useState([]);\r\n  const [typeData, setTypeData] = useState(\"\");\r\n\r\n  useEffect(async () => {\r\n    //   get Tasks\r\n    try {\r\n      handleChangeData(await taskAPI().getTasks(`api/tasks?limit=6`));\r\n    } catch (error) {\r\n      let errForm = error.message;\r\n      toast.error(errForm);\r\n    }\r\n  }, []);\r\n  useEffect(async () => {\r\n    //   get Collections\r\n    try {\r\n      const res = await collectionAPI().getCollections(`api/categories`);\r\n      setListCollections(res.items);\r\n    } catch (error) {\r\n      let errForm = error.message;\r\n      toast.error(errForm);\r\n    }\r\n  }, []);\r\n\r\n  const [selectedTasks, setSelectedTasks] = useState([]);\r\n  const handleSelectTasks = (id, checked) => {\r\n    let existing = selectedTasks.includes(id);\r\n\r\n    if (existing && !checked) {\r\n      const newArr = selectedTasks.filter((select) => select !== id);\r\n      setSelectedTasks(newArr);\r\n    } else if (!existing && checked) {\r\n      setSelectedTasks([...selectedTasks, id]);\r\n    }\r\n  };\r\n\r\n  const handleRemoveTasks = (event) => {\r\n    toggleDeleteBar(!displayDeleteBarVal)();\r\n  };\r\n  const handleChangeData = (data, type) => {\r\n    if (type === \"search\") {\r\n      setTypeData(type);\r\n    }\r\n    setData(data);\r\n  };\r\n\r\n  return (\r\n    <div className=\"ViewCollection\">\r\n      <div className={clsx(classes.content, \"content\")}>\r\n        <div className={clsx(classes.taskBar__container)}>\r\n          <div className={clsx(classes.taskBar__details)}>\r\n            <div className={clsx(classes.taskBar__detail)}>\r\n              Total : {data && data.meta ? data.meta.totalItems : 0}\r\n            </div>\r\n          </div>\r\n\r\n          <div\r\n            className={clsx(\r\n              classes.taskBar__actions,\r\n              \"d-flex align-items-center\"\r\n            )}\r\n          >\r\n            <SearchTasks\r\n              displayVal={displaySearchBarVal}\r\n              // inputSearchRef={inputSearchRef}\r\n              listTasks={data.items}\r\n              handleChangeData={handleChangeData}\r\n            />\r\n            <button\r\n              className={clsx(\r\n                classes.taskBar__action,\r\n                classes.taskBar__action_search,\r\n                \"button btn--flex btn--bg-gray btn--border btn--hover-bg-gray\"\r\n              )}\r\n              onClick={toggleSearchBar(!displaySearchBarVal)}\r\n            >\r\n              <div className=\"taskAction__icon\">\r\n                <ion-icon name=\"search\"></ion-icon>\r\n              </div>\r\n            </button>\r\n\r\n            <button\r\n              className={clsx(\r\n                classes.taskBar__action,\r\n                \"button btn--flex btn--bg-gray btn--border btn--hover-bg-gray\"\r\n              )}\r\n              onClick={toggleAddBar(true)}\r\n            >\r\n              <div className=\"taskAction__icon\">\r\n                <ion-icon name=\"add\"></ion-icon>\r\n              </div>\r\n            </button>\r\n\r\n            <button\r\n              className={clsx(\r\n                classes.taskBar__action,\r\n                \"button btn--flex btn--bg-gray btn--border btn--hover-bg-gray\"\r\n              )}\r\n              onClick={handleRemoveTasks}\r\n            >\r\n              <ion-icon name=\"trash\"></ion-icon>\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        {data &&\r\n          data.meta &&\r\n          data.meta.totalItems == 0 &&\r\n          (typeData == \"search\" ? (\r\n            <div\r\n              style={{\r\n                fontSize: \"1.5rem\",\r\n                marginTop: \"3rem\",\r\n              }}\r\n            >\r\n              No has any Task match with Search Value\r\n            </div>\r\n          ) : (\r\n            <button\r\n              className={clsx(\r\n                classes.taskBar__action,\r\n                \"button btn--flex btn--bg-gray btn--border btn--hover-bg-gray\"\r\n              )}\r\n              onClick={toggleAddBar(true)}\r\n            >\r\n              <div className=\"taskAction__icon\">\r\n                <ion-icon name=\"add\"></ion-icon>\r\n              </div>\r\n              <div className=\"taskAction__text\">Add First Task</div>\r\n            </button>\r\n          ))}\r\n\r\n        <div className={clsx(classes.tasks)}>\r\n          {data &&\r\n            data.meta &&\r\n            data.meta.totalItems > 0 &&\r\n            data.items.map((task) => {\r\n              return (\r\n                <Task\r\n                  key={task.id}\r\n                  task={task}\r\n                  listCollections={listCollections}\r\n                  handleChangeData={handleChangeData}\r\n                  handleSelectTasks={handleSelectTasks}\r\n                />\r\n              );\r\n            })}\r\n        </div>\r\n\r\n        {data && data.meta && data.meta.totalItems > 0 && (\r\n          <Paging data={data} handleChangeData={handleChangeData} />\r\n        )}\r\n\r\n        <CreateTask\r\n          displayVal={displayAddBarVal}\r\n          toggleFunc={toggleAddBar}\r\n          listCollections={listCollections}\r\n          handleChangeData={handleChangeData}\r\n        />\r\n\r\n        <DeleteTask\r\n          taskIDs={selectedTasks}\r\n          displayVal={displayDeleteBarVal}\r\n          toggleFunc={toggleDeleteBar}\r\n          handleChangeData={handleChangeData}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}