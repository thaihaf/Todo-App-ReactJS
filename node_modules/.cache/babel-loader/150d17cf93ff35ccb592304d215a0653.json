{"ast":null,"code":"import _defineProperty from\"D:/4.Document/Work/MonstarLab/Intern/ReactJS/todo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"D:/4.Document/Work/MonstarLab/Intern/ReactJS/todo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"D:/4.Document/Work/MonstarLab/Intern/ReactJS/todo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState}from\"react\";import IsEmptyObject from\"../../../../service/js/IsEmptyObject\";var useTaskForm=function useTaskForm(HandleEditTask){var _useState=useState({title:\"\"}),_useState2=_slicedToArray(_useState,2),values=_useState2[0],setValues=_useState2[1];var _useState3=useState({}),_useState4=_slicedToArray(_useState3,2),errors=_useState4[0],setErrors=_useState4[1];var validateInfo=function validateInfo(values){var errors={};var titleTemp=values.title.trim();if(!titleTemp){errors.title=\"Title must be required\";}else if(titleTemp.length<2){errors.title=\"Name to be 6 charactor or more\";}return errors;};var handleChange=function handleChange(e){var _e$target=e.target,name=_e$target.name,value=_e$target.value;setValues(_objectSpread(_objectSpread({},values),{},_defineProperty({},name,value)));};var handleSubmit=function handleSubmit(e){e.preventDefault();var errorsTemp=validateInfo(values);setErrors(errorsTemp);if(IsEmptyObject(errorsTemp)){HandleEditTask(values);setValues({title:\"\"});}};return{handleChange:handleChange,handleSubmit:handleSubmit,values:values,errors:errors};};export default useTaskForm;","map":{"version":3,"sources":["D:/4.Document/Work/MonstarLab/Intern/ReactJS/todo/src/components/home/task/services/useTaskForm.js"],"names":["useState","IsEmptyObject","useTaskForm","HandleEditTask","title","values","setValues","errors","setErrors","validateInfo","titleTemp","trim","length","handleChange","e","target","name","value","handleSubmit","preventDefault","errorsTemp"],"mappings":"yfAAA,OAASA,QAAT,KAAyB,OAAzB,CACA,MAAOC,CAAAA,aAAP,KAA0B,sCAA1B,CAEA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,cAAD,CAAoB,eACVH,QAAQ,CAAC,CAAEI,KAAK,CAAE,EAAT,CAAD,CADE,wCAC/BC,MAD+B,eACvBC,SADuB,8BAEVN,QAAQ,CAAC,EAAD,CAFE,yCAE/BO,MAF+B,eAEvBC,SAFuB,eAItC,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACJ,MAAD,CAAY,CAC/B,GAAIE,CAAAA,MAAM,CAAG,EAAb,CAEA,GAAMG,CAAAA,SAAS,CAAGL,MAAM,CAACD,KAAP,CAAaO,IAAb,EAAlB,CAEA,GAAI,CAACD,SAAL,CAAgB,CACdH,MAAM,CAACH,KAAP,CAAe,wBAAf,CACD,CAFD,IAEO,IAAIM,SAAS,CAACE,MAAV,CAAmB,CAAvB,CAA0B,CAC/BL,MAAM,CAACH,KAAP,CAAe,gCAAf,CACD,CAED,MAAOG,CAAAA,MAAP,CACD,CAZD,CAaA,GAAMM,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,CAAD,CAAO,eACFA,CAAC,CAACC,MADA,CAClBC,IADkB,WAClBA,IADkB,CACZC,KADY,WACZA,KADY,CAE1BX,SAAS,gCAAMD,MAAN,wBAAeW,IAAf,CAAsBC,KAAtB,GAAT,CACD,CAHD,CAIA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACJ,CAAD,CAAO,CAC1BA,CAAC,CAACK,cAAF,GAEA,GAAIC,CAAAA,UAAU,CAAGX,YAAY,CAACJ,MAAD,CAA7B,CACAG,SAAS,CAACY,UAAD,CAAT,CAEA,GAAInB,aAAa,CAACmB,UAAD,CAAjB,CAA+B,CAC7BjB,cAAc,CAACE,MAAD,CAAd,CACAC,SAAS,CAAC,CAAEF,KAAK,CAAE,EAAT,CAAD,CAAT,CACD,CACF,CAVD,CAYA,MAAO,CAAES,YAAY,CAAZA,YAAF,CAAgBK,YAAY,CAAZA,YAAhB,CAA8Bb,MAAM,CAANA,MAA9B,CAAsCE,MAAM,CAANA,MAAtC,CAAP,CACD,CAlCD,CAoCA,cAAeL,CAAAA,WAAf","sourcesContent":["import { useState } from \"react\";\r\nimport IsEmptyObject from \"../../../../service/js/IsEmptyObject\";\r\n\r\nconst useTaskForm = (HandleEditTask) => {\r\n  const [values, setValues] = useState({ title: \"\"});\r\n  const [errors, setErrors] = useState({});\r\n\r\n  const validateInfo = (values) => {\r\n    let errors = {};\r\n\r\n    const titleTemp = values.title.trim();\r\n\r\n    if (!titleTemp) {\r\n      errors.title = \"Title must be required\";\r\n    } else if (titleTemp.length < 2) {\r\n      errors.title = \"Name to be 6 charactor or more\";\r\n    }\r\n\r\n    return errors;\r\n  };\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setValues({ ...values, [name]: value });\r\n  };\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    let errorsTemp = validateInfo(values);\r\n    setErrors(errorsTemp);\r\n\r\n    if (IsEmptyObject(errorsTemp)) {\r\n      HandleEditTask(values);\r\n      setValues({ title: \"\" });\r\n    }\r\n  };\r\n\r\n  return { handleChange, handleSubmit, values, errors };\r\n};\r\n\r\nexport default useTaskForm;\r\n"]},"metadata":{},"sourceType":"module"}