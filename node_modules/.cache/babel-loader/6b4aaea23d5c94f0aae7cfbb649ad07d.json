{"ast":null,"code":"var _jsxFileName = \"D:\\\\4.Document\\\\Work\\\\MonstarLab\\\\Intern\\\\ReactJS\\\\todo\\\\src\\\\components\\\\home\\\\task\\\\view\\\\ListTasks.js\",\n    _s = $RefreshSig$();\n\n// lib\nimport { useState, useEffect } from \"react\";\nimport { createUseStyles } from \"react-jss\";\nimport clsx from \"clsx\"; // Component\n\nimport ViewTask from \"../../task/view/ViewTask\";\nimport GetTasksFunc from \"../../task/actions/GetTasksFunc\";\nimport GetCollectionFunc from \"../../collection/actions/GetCollectionFunc\"; // Service\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = createUseStyles({\n  content: {\n    textAlign: \"left\",\n    maxWidth: \"unset\"\n  }\n});\nexport default function ListTasks() {\n  _s();\n\n  const classes = useStyles();\n  const [data, setData] = useState({});\n  const [listCollections, setListCollections] = useState([]); //   get Tasks\n\n  useEffect(async () => {\n    const tasksData = await GetTasksFunc(8);\n    handleChangeData(tasksData.data);\n  }, []); //   get Collections\n\n  useEffect(async () => {\n    const res = await GetCollectionFunc(10);\n    setListCollections(res.data.items);\n  }, []);\n\n  const handleChangeData = data => {\n    console.log(data);\n    setData(data);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ViewCollection\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: clsx(classes.content, \"content\"),\n      children: [/*#__PURE__*/_jsxDEV(TaskBar, {\n        listCollections: listCollections,\n        count: data && data.meta ? data.meta.totalItems : 0,\n        handleChangeData: handleChangeData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: clsx(classes.tasks),\n        children: data && data.items && data.items.map(task => {\n          return /*#__PURE__*/_jsxDEV(Task, {\n            listCollections: listCollections,\n            task: task,\n            handleChangeData: handleChangeData,\n            handleSelectTasks: handleSelectTasks\n          }, task.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 5\n      }, this), data && data.meta && data.meta.totalItems > 0 && /*#__PURE__*/_jsxDEV(Paging, {\n        data: data,\n        handleChangeData: handleChangeData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ListTasks, \"MjwBlZtMobYovM8EkTOXsP/AkHs=\", false, function () {\n  return [useStyles];\n});\n\n_c = ListTasks;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListTasks\");","map":{"version":3,"sources":["D:/4.Document/Work/MonstarLab/Intern/ReactJS/todo/src/components/home/task/view/ListTasks.js"],"names":["useState","useEffect","createUseStyles","clsx","ViewTask","GetTasksFunc","GetCollectionFunc","useStyles","content","textAlign","maxWidth","ListTasks","classes","data","setData","listCollections","setListCollections","tasksData","handleChangeData","res","items","console","log","meta","totalItems","tasks","map","task","handleSelectTasks","id"],"mappings":";;;AAAA;AACA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,eAAT,QAAgC,WAAhC;AACA,OAAOC,IAAP,MAAiB,MAAjB,C,CAEA;;AACA,OAAOC,QAAP,MAAqB,0BAArB;AAEA,OAAOC,YAAP,MAAyB,iCAAzB;AACA,OAAOC,iBAAP,MAA8B,4CAA9B,C,CAEA;;;AACA,MAAMC,SAAS,GAAGL,eAAe,CAAC;AAChCM,EAAAA,OAAO,EAAE;AACPC,IAAAA,SAAS,EAAE,MADJ;AAEPC,IAAAA,QAAQ,EAAE;AAFH;AADuB,CAAD,CAAjC;AAOA,eAAe,SAASC,SAAT,GAAqB;AAAA;;AAClC,QAAMC,OAAO,GAAGL,SAAS,EAAzB;AAEA,QAAM,CAACM,IAAD,EAAOC,OAAP,IAAkBd,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACe,eAAD,EAAkBC,kBAAlB,IAAwChB,QAAQ,CAAC,EAAD,CAAtD,CAJkC,CAMlC;;AACAC,EAAAA,SAAS,CAAC,YAAY;AACpB,UAAMgB,SAAS,GAAG,MAAMZ,YAAY,CAAC,CAAD,CAApC;AACAa,IAAAA,gBAAgB,CAACD,SAAS,CAACJ,IAAX,CAAhB;AACD,GAHQ,EAGN,EAHM,CAAT,CAPkC,CAYlC;;AACAZ,EAAAA,SAAS,CAAC,YAAY;AACpB,UAAMkB,GAAG,GAAG,MAAMb,iBAAiB,CAAC,EAAD,CAAnC;AACAU,IAAAA,kBAAkB,CAACG,GAAG,CAACN,IAAJ,CAASO,KAAV,CAAlB;AACD,GAHQ,EAGN,EAHM,CAAT;;AAKA,QAAMF,gBAAgB,GAAIL,IAAD,IAAU;AACjCQ,IAAAA,OAAO,CAACC,GAAR,CAAYT,IAAZ;AACAC,IAAAA,OAAO,CAACD,IAAD,CAAP;AACD,GAHD;;AAKA,sBACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAEV,IAAI,CAACS,OAAO,CAACJ,OAAT,EAAkB,SAAlB,CAApB;AAAA,8BACA,QAAC,OAAD;AACA,QAAA,eAAe,EAAEO,eADjB;AAEA,QAAA,KAAK,EAAEF,IAAI,IAAIA,IAAI,CAACU,IAAb,GAAoBV,IAAI,CAACU,IAAL,CAAUC,UAA9B,GAA2C,CAFlD;AAGA,QAAA,gBAAgB,EAAEN;AAHlB;AAAA;AAAA;AAAA;AAAA,cADA,eAOF;AAAK,QAAA,SAAS,EAAEf,IAAI,CAACS,OAAO,CAACa,KAAT,CAApB;AAAA,kBACGZ,IAAI,IACHA,IAAI,CAACO,KADN,IAECP,IAAI,CAACO,KAAL,CAAWM,GAAX,CAAgBC,IAAD,IAAU;AACvB,8BACE,QAAC,IAAD;AAEE,YAAA,eAAe,EAAEZ,eAFnB;AAGE,YAAA,IAAI,EAAEY,IAHR;AAIE,YAAA,gBAAgB,EAAET,gBAJpB;AAKE,YAAA,iBAAiB,EAAEU;AALrB,aACOD,IAAI,CAACE,EADZ;AAAA;AAAA;AAAA;AAAA,kBADF;AASD,SAVD;AAHJ;AAAA;AAAA;AAAA;AAAA,cAPE,EAuBDhB,IAAI,IAAIA,IAAI,CAACU,IAAb,IAAqBV,IAAI,CAACU,IAAL,CAAUC,UAAV,GAAuB,CAA5C,iBACC,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAEX,IAAd;AAAoB,QAAA,gBAAgB,EAAEK;AAAtC;AAAA;AAAA;AAAA;AAAA,cAxBA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA+BD;;GAtDuBP,S;UACNJ,S;;;KADMI,S","sourcesContent":["// lib\r\nimport { useState, useEffect } from \"react\";\r\nimport { createUseStyles } from \"react-jss\";\r\nimport clsx from \"clsx\";\r\n\r\n// Component\r\nimport ViewTask from \"../../task/view/ViewTask\";\r\n\r\nimport GetTasksFunc from \"../../task/actions/GetTasksFunc\";\r\nimport GetCollectionFunc from \"../../collection/actions/GetCollectionFunc\"\r\n\r\n// Service\r\nconst useStyles = createUseStyles({\r\n  content: {\r\n    textAlign: \"left\",\r\n    maxWidth: \"unset\",\r\n  },\r\n});\r\n\r\nexport default function ListTasks() {\r\n  const classes = useStyles();\r\n\r\n  const [data, setData] = useState({});\r\n  const [listCollections, setListCollections] = useState([]);\r\n\r\n  //   get Tasks\r\n  useEffect(async () => {\r\n    const tasksData = await GetTasksFunc(8);\r\n    handleChangeData(tasksData.data);\r\n  }, []);\r\n\r\n  //   get Collections\r\n  useEffect(async () => {\r\n    const res = await GetCollectionFunc(10);\r\n    setListCollections(res.data.items)\r\n  }, []);\r\n\r\n  const handleChangeData = (data) => {\r\n    console.log(data);\r\n    setData(data);\r\n  };\r\n\r\n  return (\r\n    <div className=\"ViewCollection\">\r\n      <div className={clsx(classes.content, \"content\")}>\r\n      <TaskBar\r\n      listCollections={listCollections}\r\n      count={data && data.meta ? data.meta.totalItems : 0}\r\n      handleChangeData={handleChangeData}\r\n    />\r\n\r\n    <div className={clsx(classes.tasks)}>\r\n      {data &&\r\n        data.items &&\r\n        data.items.map((task) => {\r\n          return (\r\n            <Task\r\n              key={task.id}\r\n              listCollections={listCollections}\r\n              task={task}\r\n              handleChangeData={handleChangeData}\r\n              handleSelectTasks={handleSelectTasks}\r\n            />\r\n          );\r\n        })}\r\n    </div>\r\n\r\n    {data && data.meta && data.meta.totalItems > 0 && (\r\n      <Paging data={data} handleChangeData={handleChangeData} />\r\n    )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}