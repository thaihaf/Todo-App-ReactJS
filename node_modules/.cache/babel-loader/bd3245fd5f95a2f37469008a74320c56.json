{"ast":null,"code":"var _jsxFileName = \"D:\\\\4.Document\\\\Work\\\\MonstarLab\\\\Intern\\\\ReactJS\\\\todo\\\\src\\\\components\\\\home\\\\task\\\\view\\\\ViewTask.js\",\n    _s = $RefreshSig$();\n\nimport { useParams } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport { createUseStyles } from \"react-jss\";\nimport clsx from \"clsx\";\nimport axios from \"axios\";\nimport TaskBar from \"./TaskBar\";\nimport Task from \"./Task\";\nimport IsEmptyObject from \"../../../../service/IsEmptyObject\";\nimport Paging from \"./Paging\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = createUseStyles({\n  tasks__tab: {\n    marginTop: \"3rem\",\n    width: \"80%\",\n    maxWidth: \"100rem\"\n  },\n  tasks: {\n    display: \"grid\",\n    gap: \"1.7rem\",\n    gridTemplateColumns: \"repeat(auto-fit, minmax(20rem, 1fr))\"\n  }\n});\nexport default function ViewTask(_ref) {\n  _s();\n\n  let {\n    data\n  } = _ref;\n  const classes = useStyles();\n  const [status, setStatus] = useState(\"all\");\n  const [listTasks, setListTasks] = useState([]);\n  useEffect(() => {\n    axios.get(`api/tasks?limit=4&page=1`).then(res => {\n      console.log(res.data);\n      setData(res.data);\n    }).catch(err => {\n      const errMsg = err.response.data.message;\n      console.log(errMsg);\n    });\n  }, []);\n\n  const handleChangeStatus = val => {\n    setStatus(val);\n  };\n\n  const handleChangeData = tasksData => {\n    if (IsEmptyObject(tasksData)) {\n      console.log(\"Khum co\");\n    } else {\n      console.log(\"set data tasks\"); // setCollection(tasksData);\n    }\n  };\n\n  const [selectedTasks, setSelectedTasks] = useState([]);\n\n  const handleSelectTasks = id => event => {\n    setSelectedTasks([...selectedTasks, id]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: clsx(classes.tasks__tab),\n    children: [/*#__PURE__*/_jsxDEV(TaskBar, {\n      status: status,\n      count: 0,\n      handleChangeData: handleChangeData,\n      handleChangeStatus: handleChangeStatus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: clsx(classes.tasks),\n      children: data && data.items && data.items.map(task => {\n        return /*#__PURE__*/_jsxDEV(Task, {\n          task: task,\n          handleChangeData: handleChangeData,\n          handleSelectTasks: handleSelectTasks\n        }, task.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Paging, {\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ViewTask, \"z7ENwGRI+LIGK8wDO0GN4UCrs5I=\", false, function () {\n  return [useStyles];\n});\n\n_c = ViewTask;\n\nvar _c;\n\n$RefreshReg$(_c, \"ViewTask\");","map":{"version":3,"sources":["D:/4.Document/Work/MonstarLab/Intern/ReactJS/todo/src/components/home/task/view/ViewTask.js"],"names":["useParams","useState","useEffect","createUseStyles","clsx","axios","TaskBar","Task","IsEmptyObject","Paging","useStyles","tasks__tab","marginTop","width","maxWidth","tasks","display","gap","gridTemplateColumns","ViewTask","data","classes","status","setStatus","listTasks","setListTasks","get","then","res","console","log","setData","catch","err","errMsg","response","message","handleChangeStatus","val","handleChangeData","tasksData","selectedTasks","setSelectedTasks","handleSelectTasks","id","event","items","map","task"],"mappings":"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","sourcesContent":["import { useParams } from \"react-router-dom\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { createUseStyles } from \"react-jss\";\r\nimport clsx from \"clsx\";\r\nimport axios from \"axios\";\r\n\r\nimport TaskBar from \"./TaskBar\";\r\nimport Task from \"./Task\";\r\n\r\nimport IsEmptyObject from \"../../../../service/IsEmptyObject\";\r\nimport Paging from \"./Paging\";\r\n\r\nconst useStyles = createUseStyles({\r\n  tasks__tab: {\r\n    marginTop: \"3rem\",\r\n    width: \"80%\",\r\n    maxWidth: \"100rem\",\r\n  },\r\n  tasks: {\r\n    display: \"grid\",\r\n    gap: \"1.7rem\",\r\n    gridTemplateColumns: \"repeat(auto-fit, minmax(20rem, 1fr))\",\r\n  },\r\n});\r\n\r\nexport default function ViewTask({data}) {\r\n  const classes = useStyles();\r\n  const [status, setStatus] = useState(\"all\");\r\n\r\n  const [listTasks, setListTasks] = useState([]);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(`api/tasks?limit=4&page=1`)\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        setData(res.data);\r\n      })\r\n      .catch((err) => {\r\n        const errMsg = err.response.data.message;\r\n        console.log(errMsg);\r\n      });\r\n  }, []);\r\n\r\n  const handleChangeStatus = (val) => {\r\n    setStatus(val);\r\n  };\r\n  const handleChangeData = (tasksData) => {\r\n    if (IsEmptyObject(tasksData)) {\r\n      console.log(\"Khum co\");\r\n    } else {\r\n      console.log(\"set data tasks\");\r\n      // setCollection(tasksData);\r\n    }\r\n  };\r\n\r\n  const [selectedTasks, setSelectedTasks] = useState([]);\r\n  const handleSelectTasks = (id) => (event) => {\r\n    setSelectedTasks([...selectedTasks, id])\r\n  };\r\n\r\n  return (\r\n    <div className={clsx(classes.tasks__tab)}>\r\n      <TaskBar\r\n        status={status}\r\n        count={0}\r\n        handleChangeData={handleChangeData}\r\n        handleChangeStatus={handleChangeStatus}\r\n        \r\n      />\r\n\r\n      <div className={clsx(classes.tasks)}>\r\n        {data && data.items &&\r\n          data.items.map((task) => {\r\n            return (\r\n              <Task\r\n                key={task.id}\r\n                task={task}\r\n                handleChangeData={handleChangeData}\r\n                handleSelectTasks={handleSelectTasks}\r\n              />\r\n            );\r\n          })}\r\n      </div>\r\n\r\n      <Paging data={data} />\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}