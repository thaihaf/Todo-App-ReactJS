{"ast":null,"code":"var _jsxFileName = \"D:\\\\4.Document\\\\Work\\\\MonstarLab\\\\Intern\\\\ReactJS\\\\todo\\\\src\\\\components\\\\home\\\\task\\\\view\\\\ListTasks.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\n// lib\nimport { useState, useEffect } from \"react\";\nimport { createUseStyles } from \"react-jss\";\nimport clsx from \"clsx\";\nimport { toast } from \"react-toastify\"; // Component\n\nimport TaskBar from \"./TaskBar\";\nimport Task from \"./Task\";\nimport Paging from \"./Paging\"; // services\n\nimport GetTasksFunc from \"../../task/actions/GetTasksFunc\";\nimport GetCollectionFunc from \"../../collection/actions/GetCollectionFunc\";\nimport taskAPI from \"../../../../service/fetchAPI/taskAPI\";\nimport collectionAPI from \"../../../../service/fetchAPI/collectionsAPI\"; // Service\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = createUseStyles({\n  content: {\n    textAlign: \"left\",\n    maxWidth: \"unset\"\n  },\n  tasks: {\n    width: \"80%\",\n    maxWidth: \"100rem\",\n    display: \"grid\",\n    gap: \"1.7rem\",\n    gridTemplateColumns: \"repeat(auto-fit, minmax(20rem, 1fr))\",\n    transition: \"all 2s linear\"\n  }\n});\n\nconst useActions = () => {\n  _s();\n\n  const [displayAddBarVal, setDisplayAddBarVal] = useState(false);\n  const [displaySearchBarVal, setDisplaySearchBarVal] = useState(false);\n\n  const toggleAddBar = value => event => {\n    setDisplayAddBarVal(value);\n  };\n\n  const toggleSearchBar = value => event => {\n    setDisplaySearchBarVal(value);\n  };\n\n  return {\n    toggleAddBar,\n    toggleSearchBar,\n    displayAddBarVal,\n    displaySearchBarVal\n  };\n};\n\n_s(useActions, \"hj6Kf+yWd3uA+dEcA6boj+/aPeo=\");\n\nexport default function ListTasks() {\n  _s2();\n\n  const classes = useStyles();\n  const {\n    toggleAddBar,\n    toggleSearchBar,\n    displayAddBarVal,\n    displaySearchBarVal\n  } = useActions();\n  const [data, setData] = useState({});\n  const [listCollections, setListCollections] = useState([]);\n  useEffect(async () => {\n    //   get Tasks\n    try {\n      handleChangeData(await taskAPI().getTasks(8));\n    } catch (error) {\n      let errForm = error.message;\n      toast.error(errForm);\n    }\n  }, []);\n  useEffect(async () => {\n    //   get Collections\n    try {\n      const res = await collectionAPI().getCollections(8);\n      setListCollections(res.items);\n    } catch (error) {\n      let errForm = error.message;\n      toast.error(errForm);\n    }\n  }, []);\n  const [selectedTasks, setSelectedTasks] = useState([]);\n\n  const handleSelectTasks = id => event => {\n    setSelectedTasks([...selectedTasks, id]);\n    console.log(selectedTasks);\n  };\n\n  const handleChangeData = data => {\n    console.log(data);\n    setData(data);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ViewCollection\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: clsx(classes.content, \"content\"),\n      children: [data && data.meta && data.meta.totalItems == 0 ? /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: clsx(classes.taskBar__container),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: clsx(classes.taskBar__details),\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: clsx(classes.taskBar__detail),\n            children: [\"Total : \", countTasks]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: clsx(classes.taskBar__actions, \"d-flex align-items-center\"),\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: clsx(classes.taskBar__action, \"button btn--flex btn--bg-gray btn--border btn--hover-bg-gray\"),\n            onClick: toggleAddBar(true),\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"taskAction__icon\",\n              children: /*#__PURE__*/_jsxDEV(\"ion-icon\", {\n                name: \"add\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: clsx(classes.taskBar__action, \"button btn--flex btn--bg-gray btn--border btn--hover-bg-gray\"),\n            onClick: toggleSearchBar(true),\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"taskAction__icon\",\n              children: /*#__PURE__*/_jsxDEV(\"ion-icon\", {\n                name: \"search\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: clsx(classes.taskBar__action, \"button btn--flex btn--bg-gray btn--border btn--hover-bg-gray\"),\n            onClick: handleRemoveTasks,\n            children: /*#__PURE__*/_jsxDEV(\"ion-icon\", {\n              name: \"trash\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: clsx(classes.tasks),\n        children: data && data.items > 0 && data.items.map(task => {\n          return /*#__PURE__*/_jsxDEV(Task, {\n            listCollections: listCollections,\n            task: task,\n            handleChangeData: handleChangeData,\n            handleSelectTasks: handleSelectTasks\n          }, task.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this), data && data.meta && data.meta.totalItems > 0 && /*#__PURE__*/_jsxDEV(Paging, {\n        data: data,\n        handleChangeData: handleChangeData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(ListTasks, \"NYrJKmo+0fzt3HOt5/Ks/U7LDMM=\", false, function () {\n  return [useStyles, useActions];\n});\n\n_c = ListTasks;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListTasks\");","map":{"version":3,"sources":["D:/4.Document/Work/MonstarLab/Intern/ReactJS/todo/src/components/home/task/view/ListTasks.js"],"names":["useState","useEffect","createUseStyles","clsx","toast","TaskBar","Task","Paging","GetTasksFunc","GetCollectionFunc","taskAPI","collectionAPI","useStyles","content","textAlign","maxWidth","tasks","width","display","gap","gridTemplateColumns","transition","useActions","displayAddBarVal","setDisplayAddBarVal","displaySearchBarVal","setDisplaySearchBarVal","toggleAddBar","value","event","toggleSearchBar","ListTasks","classes","data","setData","listCollections","setListCollections","handleChangeData","getTasks","error","errForm","message","res","getCollections","items","selectedTasks","setSelectedTasks","handleSelectTasks","id","console","log","meta","totalItems","taskBar__container","taskBar__details","taskBar__detail","countTasks","taskBar__actions","taskBar__action","handleRemoveTasks","map","task"],"mappings":"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","sourcesContent":["// lib\r\nimport { useState, useEffect } from \"react\";\r\nimport { createUseStyles } from \"react-jss\";\r\nimport clsx from \"clsx\";\r\nimport { toast } from \"react-toastify\";\r\n\r\n// Component\r\nimport TaskBar from \"./TaskBar\";\r\nimport Task from \"./Task\";\r\nimport Paging from \"./Paging\";\r\n\r\n// services\r\nimport GetTasksFunc from \"../../task/actions/GetTasksFunc\";\r\nimport GetCollectionFunc from \"../../collection/actions/GetCollectionFunc\";\r\nimport taskAPI from \"../../../../service/fetchAPI/taskAPI\";\r\nimport collectionAPI from \"../../../../service/fetchAPI/collectionsAPI\";\r\n\r\n// Service\r\nconst useStyles = createUseStyles({\r\n  content: {\r\n    textAlign: \"left\",\r\n    maxWidth: \"unset\",\r\n  },\r\n  tasks: {\r\n    width: \"80%\",\r\n    maxWidth: \"100rem\",\r\n    display: \"grid\",\r\n    gap: \"1.7rem\",\r\n    gridTemplateColumns: \"repeat(auto-fit, minmax(20rem, 1fr))\",\r\n    transition: \"all 2s linear\",\r\n  },\r\n});\r\n\r\nconst useActions = () => {\r\n  const [displayAddBarVal, setDisplayAddBarVal] = useState(false);\r\n  const [displaySearchBarVal, setDisplaySearchBarVal] = useState(false);\r\n\r\n  const toggleAddBar = (value) => (event) => {\r\n    setDisplayAddBarVal(value);\r\n  };\r\n  const toggleSearchBar = (value) => (event) => {\r\n    setDisplaySearchBarVal(value);\r\n  };\r\n  return {\r\n    toggleAddBar,\r\n    toggleSearchBar,\r\n    displayAddBarVal,\r\n    displaySearchBarVal,\r\n  };\r\n};\r\n\r\nexport default function ListTasks() {\r\n  const classes = useStyles();\r\n  const {\r\n    toggleAddBar,\r\n    toggleSearchBar,\r\n    displayAddBarVal,\r\n    displaySearchBarVal,\r\n  } = useActions();\r\n\r\n  const [data, setData] = useState({});\r\n  const [listCollections, setListCollections] = useState([]);\r\n\r\n  useEffect(async () => {\r\n    //   get Tasks\r\n    try {\r\n      handleChangeData(await taskAPI().getTasks(8));\r\n    } catch (error) {\r\n      let errForm = error.message;\r\n      toast.error(errForm);\r\n    }\r\n  }, []);\r\n  useEffect(async () => {\r\n    //   get Collections\r\n    try {\r\n      const res = await collectionAPI().getCollections(8);\r\n      setListCollections(res.items);\r\n    } catch (error) {\r\n      let errForm = error.message;\r\n      toast.error(errForm);\r\n    }\r\n  }, []);\r\n\r\n  const [selectedTasks, setSelectedTasks] = useState([]);\r\n  const handleSelectTasks = (id) => (event) => {\r\n    setSelectedTasks([...selectedTasks, id]);\r\n    console.log(selectedTasks);\r\n  };\r\n\r\n  const handleChangeData = (data) => {\r\n    console.log(data);\r\n    setData(data);\r\n  };\r\n\r\n  return (\r\n    <div className=\"ViewCollection\">\r\n      <div className={clsx(classes.content, \"content\")}>\r\n        {data && data.meta && data.meta.totalItems == 0 ? (\r\n          <div></div>\r\n        ) : (\r\n          <div className={clsx(classes.taskBar__container)}>\r\n            <div className={clsx(classes.taskBar__details)}>\r\n              <div className={clsx(classes.taskBar__detail)}>\r\n                Total : {countTasks}\r\n              </div>\r\n            </div>\r\n\r\n            <div\r\n              className={clsx(\r\n                classes.taskBar__actions,\r\n                \"d-flex align-items-center\"\r\n              )}\r\n            >\r\n              <button\r\n                className={clsx(\r\n                  classes.taskBar__action,\r\n                  \"button btn--flex btn--bg-gray btn--border btn--hover-bg-gray\"\r\n                )}\r\n                onClick={toggleAddBar(true)}\r\n              >\r\n                <div className=\"taskAction__icon\">\r\n                  <ion-icon name=\"add\"></ion-icon>\r\n                </div>\r\n              </button>\r\n\r\n              <button\r\n                className={clsx(\r\n                  classes.taskBar__action,\r\n                  \"button btn--flex btn--bg-gray btn--border btn--hover-bg-gray\"\r\n                )}\r\n                onClick={toggleSearchBar(true)}\r\n              >\r\n                <div className=\"taskAction__icon\">\r\n                  <ion-icon name=\"search\"></ion-icon>\r\n                </div>\r\n              </button>\r\n\r\n              <button\r\n                className={clsx(\r\n                  classes.taskBar__action,\r\n                  \"button btn--flex btn--bg-gray btn--border btn--hover-bg-gray\"\r\n                )}\r\n                onClick={handleRemoveTasks}\r\n              >\r\n                <ion-icon name=\"trash\"></ion-icon>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        <div className={clsx(classes.tasks)}>\r\n          {data &&\r\n            data.items > 0 &&\r\n            data.items.map((task) => {\r\n              return (\r\n                <Task\r\n                  key={task.id}\r\n                  listCollections={listCollections}\r\n                  task={task}\r\n                  handleChangeData={handleChangeData}\r\n                  handleSelectTasks={handleSelectTasks}\r\n                />\r\n              );\r\n            })}\r\n        </div>\r\n\r\n        {data && data.meta && data.meta.totalItems > 0 && (\r\n          <Paging data={data} handleChangeData={handleChangeData} />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}