{"ast":null,"code":"var _jsxFileName = \"D:\\\\4.Document\\\\Work\\\\MonstarLab\\\\Intern\\\\ReactJS\\\\todo\\\\src\\\\components\\\\home\\\\task\\\\view\\\\ViewTask.js\",\n    _s = $RefreshSig$();\n\nimport { useParams } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport { createUseStyles } from \"react-jss\";\nimport axios from \"axios\";\nimport clsx from \"clsx\";\nimport TaskBar from \"./TaskBar\";\nimport Task from \"./Task\";\nimport IsEmptyObject from \"../../../../service/IsEmptyObject\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = createUseStyles({\n  tasks__tab: {\n    border: \"1px solid red\",\n    marginTop: \"3rem\",\n    width: \"80%\"\n  },\n  tasks: {}\n});\nexport default function ViewTask() {\n  _s();\n\n  const classes = useStyles();\n  const [listTasks, setListTasks] = useState([]);\n  const [status, setStatus] = useState(\"all\");\n  useEffect(() => {\n    axios.get(`/api/tasks?limit=8&page=1`).then(res => {\n      console.log(res.data);\n      setListTasks(res.data.items);\n    }).catch(err => {\n      const errMsg = err.response.data.message;\n      console.log(errMsg);\n    });\n  }, []);\n\n  const handleChangeStatus = val => {\n    setStatus(val);\n  };\n\n  const handleChangeData = tasksData => {\n    if (IsEmptyObject(tasksData)) {\n      console.log(\"Khum co\");\n    } else {\n      console.log(\"set data tasks\"); // setCollection(tasksData);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: clsx(classes.tasks__tab),\n    children: [/*#__PURE__*/_jsxDEV(TaskBar, {\n      status: status,\n      count: listTasks.length,\n      handleChangeData: handleChangeData,\n      handleChangeStatus: handleChangeStatus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tasks\",\n      children: listTasks.map(task => {\n        return /*#__PURE__*/_jsxDEV(Task, {\n          task: task,\n          handleChangeData: handleChangeData\n        }, task.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ViewTask, \"5S0LDbmaiuizqpjKJhzkNRG9LHs=\", false, function () {\n  return [useStyles];\n});\n\n_c = ViewTask;\n\nvar _c;\n\n$RefreshReg$(_c, \"ViewTask\");","map":{"version":3,"sources":["D:/4.Document/Work/MonstarLab/Intern/ReactJS/todo/src/components/home/task/view/ViewTask.js"],"names":["useParams","useState","useEffect","createUseStyles","axios","clsx","TaskBar","Task","IsEmptyObject","useStyles","tasks__tab","border","marginTop","width","tasks","ViewTask","classes","listTasks","setListTasks","status","setStatus","get","then","res","console","log","data","items","catch","err","errMsg","response","message","handleChangeStatus","val","handleChangeData","tasksData","length","map","task","id"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,kBAA1B;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,eAAT,QAAgC,WAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AAEA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AAEA,OAAOC,aAAP,MAA0B,mCAA1B;;AAEA,MAAMC,SAAS,GAAGN,eAAe,CAAC;AAChCO,EAAAA,UAAU,EAAE;AACVC,IAAAA,MAAM,EAAE,eADE;AAEVC,IAAAA,SAAS,EAAE,MAFD;AAGVC,IAAAA,KAAK,EAAE;AAHG,GADoB;AAMhCC,EAAAA,KAAK,EAAC;AAN0B,CAAD,CAAjC;AAYA,eAAe,SAASC,QAAT,GAAoB;AAAA;;AACjC,QAAMC,OAAO,GAAGP,SAAS,EAAzB;AACA,QAAM,CAACQ,SAAD,EAAYC,YAAZ,IAA4BjB,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACkB,MAAD,EAASC,SAAT,IAAsBnB,QAAQ,CAAC,KAAD,CAApC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,KAAK,CACFiB,GADH,CACQ,2BADR,EAEGC,IAFH,CAESC,GAAD,IAAS;AACbC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAhB;AACAR,MAAAA,YAAY,CAACK,GAAG,CAACG,IAAJ,CAASC,KAAV,CAAZ;AACD,KALH,EAMGC,KANH,CAMUC,GAAD,IAAS;AACd,YAAMC,MAAM,GAAGD,GAAG,CAACE,QAAJ,CAAaL,IAAb,CAAkBM,OAAjC;AACAR,MAAAA,OAAO,CAACC,GAAR,CAAYK,MAAZ;AACD,KATH;AAUD,GAXQ,EAWN,EAXM,CAAT;;AAaA,QAAMG,kBAAkB,GAAIC,GAAD,IAAS;AAClCd,IAAAA,SAAS,CAACc,GAAD,CAAT;AACD,GAFD;;AAGA,QAAMC,gBAAgB,GAAIC,SAAD,IAAe;AACtC,QAAI5B,aAAa,CAAC4B,SAAD,CAAjB,EAA8B;AAC5BZ,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACD,KAFD,MAEO;AACLD,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EADK,CAEL;AACD;AACF,GAPD;;AASA,sBACE;AAAK,IAAA,SAAS,EAAEpB,IAAI,CAACW,OAAO,CAACN,UAAT,CAApB;AAAA,4BACE,QAAC,OAAD;AACE,MAAA,MAAM,EAAES,MADV;AAEE,MAAA,KAAK,EAAEF,SAAS,CAACoB,MAFnB;AAGE,MAAA,gBAAgB,EAAEF,gBAHpB;AAIE,MAAA,kBAAkB,EAAEF;AAJtB;AAAA;AAAA;AAAA;AAAA,YADF,eAQE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,gBACGhB,SAAS,CAACqB,GAAV,CAAeC,IAAD,IAAU;AACvB,4BACE,QAAC,IAAD;AAEE,UAAA,IAAI,EAAEA,IAFR;AAGE,UAAA,gBAAgB,EAAEJ;AAHpB,WACOI,IAAI,CAACC,EADZ;AAAA;AAAA;AAAA;AAAA,gBADF;AAOD,OARA;AADH;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD;;GApDuBzB,Q;UACNN,S;;;KADMM,Q","sourcesContent":["import { useParams } from \"react-router-dom\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { createUseStyles } from \"react-jss\";\r\nimport axios from \"axios\";\r\nimport clsx from \"clsx\";\r\n\r\nimport TaskBar from \"./TaskBar\";\r\nimport Task from \"./Task\";\r\n\r\nimport IsEmptyObject from \"../../../../service/IsEmptyObject\";\r\n\r\nconst useStyles = createUseStyles({\r\n  tasks__tab: {\r\n    border: \"1px solid red\",\r\n    marginTop: \"3rem\",\r\n    width: \"80%\"\r\n  },\r\n  tasks:{\r\n   \r\n\r\n  }\r\n});\r\n\r\nexport default function ViewTask() {\r\n  const classes = useStyles();\r\n  const [listTasks, setListTasks] = useState([]);\r\n  const [status, setStatus] = useState(\"all\");\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(`/api/tasks?limit=8&page=1`)\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        setListTasks(res.data.items);\r\n      })\r\n      .catch((err) => {\r\n        const errMsg = err.response.data.message;\r\n        console.log(errMsg);\r\n      });\r\n  }, []);\r\n\r\n  const handleChangeStatus = (val) => {\r\n    setStatus(val);\r\n  };\r\n  const handleChangeData = (tasksData) => {\r\n    if (IsEmptyObject(tasksData)) {\r\n      console.log(\"Khum co\");\r\n    } else {\r\n      console.log(\"set data tasks\");\r\n      // setCollection(tasksData);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={clsx(classes.tasks__tab)}>\r\n      <TaskBar\r\n        status={status}\r\n        count={listTasks.length}\r\n        handleChangeData={handleChangeData}\r\n        handleChangeStatus={handleChangeStatus}\r\n      />\r\n\r\n      <div className=\"tasks\">\r\n        {listTasks.map((task) => {\r\n          return (\r\n            <Task\r\n              key={task.id}\r\n              task={task}\r\n              handleChangeData={handleChangeData}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}