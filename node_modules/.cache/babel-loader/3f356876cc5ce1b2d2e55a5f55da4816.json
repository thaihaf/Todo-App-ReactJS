{"ast":null,"code":"var _jsxFileName = \"D:\\\\4.Document\\\\Work\\\\MonstarLab\\\\Intern\\\\ReactJS\\\\todo\\\\src\\\\components\\\\home\\\\task\\\\view\\\\TaskBar.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction getStatus(status) {\n  switch (status) {\n    case \"all\":\n      status = \"All Task\";\n      break;\n\n    case \"inProcess\":\n      status = \"InProcess Task\";\n      break;\n\n    case \"complete\":\n      status = \"Complete Task\";\n      break;\n\n    default:\n      status = \"All Task\";\n      break;\n  }\n\n  return status;\n}\n\nexport default function TaskBar(_ref) {\n  _s();\n\n  let {\n    count,\n    status\n  } = _ref;\n  const [listStatus, setListStatus] = useState([\"all\", \"inProcess\", \"complete\"]);\n\n  function getComboA(selectObject) {\n    var value = selectObject.value;\n    console.log(value);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"task__title\",\n    style: {\n      fontSize: \"2rem\",\n      textTransform: \"capitalize\",\n      padding: \"2rem\",\n      display: \"flex\",\n      justifyContent: \"space-between\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"taskBar__details\",\n      children: [getStatus(status), \" - \", count]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"taskBar__actions\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"taskBar__action\",\n        children: /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"taskBar__select\",\n          onCh: true,\n          children: listStatus.map(status => {\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              value: status,\n              className: \"taskBar__option\",\n              children: status\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TaskBar, \"a1bWGnhNRyPEKNFzRcZoSGrYEdM=\");\n\n_c = TaskBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskBar\");","map":{"version":3,"sources":["D:/4.Document/Work/MonstarLab/Intern/ReactJS/todo/src/components/home/task/view/TaskBar.js"],"names":["React","useState","useEffect","getStatus","status","TaskBar","count","listStatus","setListStatus","getComboA","selectObject","value","console","log","fontSize","textTransform","padding","display","justifyContent","map"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;;AAEA,SAASC,SAAT,CAAmBC,MAAnB,EAA2B;AACzB,UAAQA,MAAR;AACE,SAAK,KAAL;AACEA,MAAAA,MAAM,GAAG,UAAT;AACA;;AACF,SAAK,WAAL;AACEA,MAAAA,MAAM,GAAG,gBAAT;AACA;;AACF,SAAK,UAAL;AACEA,MAAAA,MAAM,GAAG,eAAT;AACA;;AACF;AACEA,MAAAA,MAAM,GAAG,UAAT;AACA;AAZJ;;AAeA,SAAOA,MAAP;AACD;;AAED,eAAe,SAASC,OAAT,OAAoC;AAAA;;AAAA,MAAnB;AAAEC,IAAAA,KAAF;AAASF,IAAAA;AAAT,GAAmB;AACjD,QAAM,CAACG,UAAD,EAAaC,aAAb,IAA8BP,QAAQ,CAAC,CAC3C,KAD2C,EAE3C,WAF2C,EAG3C,UAH2C,CAAD,CAA5C;;AAMA,WAASQ,SAAT,CAAmBC,YAAnB,EAAiC;AAC/B,QAAIC,KAAK,GAAGD,YAAY,CAACC,KAAzB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;;AAED,sBACE;AACE,IAAA,SAAS,EAAC,aADZ;AAEE,IAAA,KAAK,EAAE;AACLG,MAAAA,QAAQ,EAAE,MADL;AAELC,MAAAA,aAAa,EAAE,YAFV;AAGLC,MAAAA,OAAO,EAAE,MAHJ;AAILC,MAAAA,OAAO,EAAE,MAJJ;AAKLC,MAAAA,cAAc,EAAG;AALZ,KAFT;AAAA,4BAUE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,iBACGf,SAAS,CAACC,MAAD,CADZ,SACyBE,KADzB;AAAA;AAAA;AAAA;AAAA;AAAA,YAVF,eAcE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA,+BACE;AAAQ,UAAA,SAAS,EAAC,iBAAlB;AAAoC,UAAA,IAAI,MAAxC;AAAA,oBACGC,UAAU,CAACY,GAAX,CAAgBf,MAAD,IAAY;AAC1B,gCACE;AAAQ,cAAA,KAAK,EAAEA,MAAf;AAAuB,cAAA,SAAS,EAAC,iBAAjC;AAAA,wBACGA;AADH;AAAA;AAAA;AAAA;AAAA,oBADF;AAKD,WANA;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAdF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA8BD;;GA1CuBC,O;;KAAAA,O","sourcesContent":["import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nfunction getStatus(status) {\r\n  switch (status) {\r\n    case \"all\":\r\n      status = \"All Task\";\r\n      break;\r\n    case \"inProcess\":\r\n      status = \"InProcess Task\";\r\n      break;\r\n    case \"complete\":\r\n      status = \"Complete Task\";\r\n      break;\r\n    default:\r\n      status = \"All Task\";\r\n      break;\r\n  }\r\n\r\n  return status;\r\n}\r\n\r\nexport default function TaskBar({ count, status }) {\r\n  const [listStatus, setListStatus] = useState([\r\n    \"all\",\r\n    \"inProcess\",\r\n    \"complete\",\r\n  ]);\r\n\r\n  function getComboA(selectObject) {\r\n    var value = selectObject.value;  \r\n    console.log(value);\r\n  }\r\n  \r\n  return (\r\n    <div\r\n      className=\"task__title\"\r\n      style={{\r\n        fontSize: \"2rem\",\r\n        textTransform: \"capitalize\",\r\n        padding: \"2rem\",\r\n        display: \"flex\",\r\n        justifyContent : \"space-between\",\r\n      }}\r\n    >\r\n      <div className=\"taskBar__details\">\r\n        {getStatus(status)} - {count}\r\n      </div>\r\n\r\n      <div className=\"taskBar__actions\">\r\n        <div className=\"taskBar__action\">\r\n          <select className=\"taskBar__select\" onCh>\r\n            {listStatus.map((status) => {\r\n              return (\r\n                <option value={status} className=\"taskBar__option\">\r\n                  {status}\r\n                </option>\r\n              );\r\n            })}\r\n          </select>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}