{"ast":null,"code":"var _jsxFileName = \"D:\\\\4.Document\\\\Work\\\\MonstarLab\\\\Intern\\\\ReactJS\\\\todo\\\\src\\\\components\\\\home\\\\task\\\\view\\\\TaskBar.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { createUseStyles } from \"react-jss\";\nimport clsx from \"clsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = createUseStyles({\n  taskBar__container: {\n    textTransform: \"capitalize\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    border: \"1px solid red\"\n  },\n  taskBar__actions: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    gap: \"1rem\",\n    border: \"1px solid red\"\n  },\n  taskBar__action: {\n    height: \"100%\"\n  },\n  taskBar__input: {\n    minWidth: \"5rem\",\n    padding: \"1rem 0\",\n    width: \"3rem !important\",\n    fontSize: \"1rem\"\n  },\n  taskBar__detail: {\n    fontSize: \"2rem\"\n  },\n  taskBar__lable: {\n    fontSize: \"1.5rem\"\n  }\n});\nexport default function TaskBar({\n  status,\n  count,\n  handleChangeData,\n  handleChangeStatus\n}) {\n  _s();\n\n  const classes = useStyles();\n\n  const handleRemoveTasks = event => {};\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: clsx(classes.taskBar__container),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: clsx(classes.taskBar__details),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: clsx(classes.taskBar__detail),\n        children: [\"Total : \", count]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: clsx(classes.taskBar__actions),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: clsx(classes.taskBar__action),\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: clsx(classes.taskBar__lable),\n          children: \"Limit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          className: clsx(classes.taskBar__input)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: clsx(classes.taskBar__action),\n        onClick: handleRemoveTasks,\n        children: /*#__PURE__*/_jsxDEV(\"ion-icon\", {\n          name: \"trash\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TaskBar, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = TaskBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskBar\");","map":{"version":3,"sources":["D:/4.Document/Work/MonstarLab/Intern/ReactJS/todo/src/components/home/task/view/TaskBar.js"],"names":["React","useState","useEffect","createUseStyles","clsx","useStyles","taskBar__container","textTransform","display","alignItems","justifyContent","border","taskBar__actions","gap","taskBar__action","height","taskBar__input","minWidth","padding","width","fontSize","taskBar__detail","taskBar__lable","TaskBar","status","count","handleChangeData","handleChangeStatus","classes","handleRemoveTasks","event","taskBar__details"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,eAAT,QAAgC,WAAhC;AACA,OAAOC,IAAP,MAAiB,MAAjB;;AAEA,MAAMC,SAAS,GAAGF,eAAe,CAAC;AAChCG,EAAAA,kBAAkB,EAAE;AAClBC,IAAAA,aAAa,EAAE,YADG;AAElBC,IAAAA,OAAO,EAAE,MAFS;AAGlBC,IAAAA,UAAU,EAAE,QAHM;AAIlBC,IAAAA,cAAc,EAAE,eAJE;AAKlBC,IAAAA,MAAM,EAAE;AALU,GADY;AAQhCC,EAAAA,gBAAgB,EAAE;AAChBJ,IAAAA,OAAO,EAAE,MADO;AAEhBC,IAAAA,UAAU,EAAE,QAFI;AAGhBC,IAAAA,cAAc,EAAE,QAHA;AAIhBG,IAAAA,GAAG,EAAE,MAJW;AAKhBF,IAAAA,MAAM,EAAE;AALQ,GARc;AAehCG,EAAAA,eAAe,EAAE;AACfC,IAAAA,MAAM,EAAE;AADO,GAfe;AAkBhCC,EAAAA,cAAc,EAAE;AACdC,IAAAA,QAAQ,EAAE,MADI;AAEdC,IAAAA,OAAO,EAAE,QAFK;AAGdC,IAAAA,KAAK,EAAE,iBAHO;AAIdC,IAAAA,QAAQ,EAAE;AAJI,GAlBgB;AAwBhCC,EAAAA,eAAe,EAAE;AACfD,IAAAA,QAAQ,EAAE;AADK,GAxBe;AA2BhCE,EAAAA,cAAc,EAAE;AACdF,IAAAA,QAAQ,EAAE;AADI;AA3BgB,CAAD,CAAjC;AAgCA,eAAe,SAASG,OAAT,CAAiB;AAC9BC,EAAAA,MAD8B;AAE9BC,EAAAA,KAF8B;AAG9BC,EAAAA,gBAH8B;AAI9BC,EAAAA;AAJ8B,CAAjB,EAKZ;AAAA;;AACD,QAAMC,OAAO,GAAGvB,SAAS,EAAzB;;AAEA,QAAMwB,iBAAiB,GAAIC,KAAD,IAAW,CAAE,CAAvC;;AAEA,sBACE;AAAK,IAAA,SAAS,EAAE1B,IAAI,CAACwB,OAAO,CAACtB,kBAAT,CAApB;AAAA,4BACE;AAAK,MAAA,SAAS,EAAEF,IAAI,CAACwB,OAAO,CAACG,gBAAT,CAApB;AAAA,6BACE;AAAK,QAAA,SAAS,EAAE3B,IAAI,CAACwB,OAAO,CAACP,eAAT,CAApB;AAAA,+BAAwDI,KAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAKE;AAAK,MAAA,SAAS,EAAErB,IAAI,CAACwB,OAAO,CAAChB,gBAAT,CAApB;AAAA,8BACE;AAAK,QAAA,SAAS,EAAER,IAAI,CAACwB,OAAO,CAACd,eAAT,CAApB;AAAA,gCACE;AAAM,UAAA,SAAS,EAAEV,IAAI,CAACwB,OAAO,CAACN,cAAT,CAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAO,UAAA,IAAI,EAAC,QAAZ;AAAqB,UAAA,SAAS,EAAElB,IAAI,CAACwB,OAAO,CAACZ,cAAT;AAApC;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAME;AACE,QAAA,SAAS,EAAEZ,IAAI,CAACwB,OAAO,CAACd,eAAT,CADjB;AAEE,QAAA,OAAO,EAAEe,iBAFX;AAAA,+BAIE;AAAU,UAAA,IAAI,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD;;GA/BuBN,O;UAMNlB,S;;;KANMkB,O","sourcesContent":["import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { createUseStyles } from \"react-jss\";\r\nimport clsx from \"clsx\";\r\n\r\nconst useStyles = createUseStyles({\r\n  taskBar__container: {\r\n    textTransform: \"capitalize\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-between\",\r\n    border: \"1px solid red\",\r\n  },\r\n  taskBar__actions: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    gap: \"1rem\",\r\n    border: \"1px solid red\",\r\n  },\r\n  taskBar__action: {\r\n    height: \"100%\",\r\n  },\r\n  taskBar__input: {\r\n    minWidth: \"5rem\",\r\n    padding: \"1rem 0\",\r\n    width: \"3rem !important\",\r\n    fontSize: \"1rem\",\r\n  },\r\n  taskBar__detail: {\r\n    fontSize: \"2rem\",\r\n  },\r\n  taskBar__lable: {\r\n    fontSize: \"1.5rem\",\r\n  },\r\n});\r\n\r\nexport default function TaskBar({\r\n  status,\r\n  count,\r\n  handleChangeData,\r\n  handleChangeStatus,\r\n}) {\r\n  const classes = useStyles();\r\n\r\n  const handleRemoveTasks = (event) => {};\r\n\r\n  return (\r\n    <div className={clsx(classes.taskBar__container)}>\r\n      <div className={clsx(classes.taskBar__details)}>\r\n        <div className={clsx(classes.taskBar__detail)}>Total : {count}</div>\r\n      </div>\r\n\r\n      <div className={clsx(classes.taskBar__actions)}>\r\n        <div className={clsx(classes.taskBar__action)}>\r\n          <span className={clsx(classes.taskBar__lable)}>Limit</span>\r\n          <input type=\"number\" className={clsx(classes.taskBar__input)} />\r\n        </div>\r\n\r\n        <div\r\n          className={clsx(classes.taskBar__action)}\r\n          onClick={handleRemoveTasks}\r\n        >\r\n          <ion-icon name=\"trash\"></ion-icon>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}