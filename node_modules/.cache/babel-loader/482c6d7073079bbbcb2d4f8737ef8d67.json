{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { toast } from \"react-toastify\";\nimport { useNavigate } from \"react-router-dom\";\nexport default function FetchClient() {\n  _s();\n\n  const navigate = useNavigate();\n  axios.interceptors.request.use(function (config) {\n    // Do something before request is sent\n    let user = JSON.parse(localStorage.getItem(\"user\"));\n    console.log(user.token);\n    return config;\n  }, function (error) {\n    console.log(error); // Do something with request error\n\n    return Promise.reject(error);\n  }); // // Add a response interceptor\n\n  axios.interceptors.response.use(function (response) {\n    // Any status code that lie within the range of 2xx cause this function to trigger\n    // Do something with response data\n    return response;\n  }, function (error) {\n    if (error.response.status == 401) {\n      toast.warn(\"This token is invalidated\");\n      localStorage.removeItem(\"user\");\n      navigate(\"/\");\n    } // Any status codes that falls outside the range of 2xx cause this function to trigger\n    // Do something with response error\n\n\n    return Promise.reject(error);\n  });\n}\n\n_s(FetchClient, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n\n_c = FetchClient;\n\nvar _c;\n\n$RefreshReg$(_c, \"FetchClient\");","map":{"version":3,"sources":["D:/4.Document/Work/MonstarLab/Intern/ReactJS/todo/src/service/defaultAPI/FetchClient.js"],"names":["axios","toast","useNavigate","FetchClient","navigate","interceptors","request","use","config","user","JSON","parse","localStorage","getItem","console","log","token","error","Promise","reject","response","status","warn","removeItem"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,SAASC,WAAT,QAA4B,kBAA5B;AAEA,eAAe,SAASC,WAAT,GAAuB;AAAA;;AACpC,QAAMC,QAAQ,GAAGF,WAAW,EAA5B;AAEAF,EAAAA,KAAK,CAACK,YAAN,CAAmBC,OAAnB,CAA2BC,GAA3B,CACE,UAAUC,MAAV,EAAkB;AAChB;AACA,QAAIC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAAX;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYN,IAAI,CAACO,KAAjB;AAGA,WAAOR,MAAP;AACD,GARH,EASE,UAAUS,KAAV,EAAiB;AACfH,IAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ,EADe,CAEf;;AACA,WAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACD,GAbH,EAHoC,CAmBpC;;AACAjB,EAAAA,KAAK,CAACK,YAAN,CAAmBe,QAAnB,CAA4Bb,GAA5B,CACE,UAAUa,QAAV,EAAoB;AAClB;AACA;AACA,WAAOA,QAAP;AACD,GALH,EAME,UAAUH,KAAV,EAAiB;AACf,QAAIA,KAAK,CAACG,QAAN,CAAeC,MAAf,IAAyB,GAA7B,EAAkC;AAChCpB,MAAAA,KAAK,CAACqB,IAAN,CAAW,2BAAX;AACAV,MAAAA,YAAY,CAACW,UAAb,CAAwB,MAAxB;AACAnB,MAAAA,QAAQ,CAAC,GAAD,CAAR;AACD,KALc,CAOf;AACA;;;AACA,WAAOc,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACD,GAhBH;AAkBD;;GAtCuBd,W;UACLD,W;;;KADKC,W","sourcesContent":["import axios from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nexport default function FetchClient() {\r\n  const navigate = useNavigate();\r\n\r\n  axios.interceptors.request.use(\r\n    function (config) {\r\n      // Do something before request is sent\r\n      let user = JSON.parse(localStorage.getItem(\"user\"));\r\n      console.log(user.token);\r\n      \r\n\r\n      return config;\r\n    },\r\n    function (error) {\r\n      console.log(error);\r\n      // Do something with request error\r\n      return Promise.reject(error);\r\n    }\r\n  );\r\n\r\n  // // Add a response interceptor\r\n  axios.interceptors.response.use(\r\n    function (response) {\r\n      // Any status code that lie within the range of 2xx cause this function to trigger\r\n      // Do something with response data\r\n      return response;\r\n    },\r\n    function (error) {\r\n      if (error.response.status == 401) {\r\n        toast.warn(\"This token is invalidated\");\r\n        localStorage.removeItem(\"user\");\r\n        navigate(\"/\")\r\n      }\r\n\r\n      // Any status codes that falls outside the range of 2xx cause this function to trigger\r\n      // Do something with response error\r\n      return Promise.reject(error);\r\n    }\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}