{"ast":null,"code":"var _jsxFileName = \"D:\\\\4.Document\\\\Work\\\\MonstarLab\\\\Intern\\\\ReactJS\\\\todo\\\\src\\\\components\\\\home\\\\task\\\\actions\\\\createTask\\\\CreateTask.js\",\n    _s = $RefreshSig$();\n\n// lib\nimport { createUseStyles } from \"react-jss\";\nimport clsx from \"clsx\";\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { toast } from \"react-toastify\";\nimport useTaskForm from \"../services/useTaskForm\";\nimport GetCollectionFunc from \"../GetTasksFunc\";\nimport IsEmptyObject from \"../../../../../service/IsEmptyObject\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = createUseStyles({\n  CreateTask: {\n    top: \"0\",\n    left: \"0\",\n    width: \"100vw\",\n    height: \"100vh\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    zIndex: \"11\",\n    color: \"#FFFFFF\"\n  },\n  createTask__bg: {\n    backgroundColor: \"#000\",\n    opacity: \"70%\"\n  },\n  createTask__container: {\n    width: \"42rem\",\n    minWidth: \"48rem\",\n    marginTop: \"6rem\",\n    padding: \"2rem\",\n    backgroundColor: \"#1D1D27\",\n    textAlign: \"left\",\n    borderRadius: \"1.6rem\"\n  },\n  createTask__caption: {\n    fontSize: \"2rem\",\n    textTransform: \"capitalize\",\n    fontWeight: \"bold\",\n    marginBottom: \"2rem\"\n  },\n  createTask__title: {\n    fontSize: \"1.6rem\",\n    textTransform: \"capitalize\",\n    marginBottom: \"1rem\"\n  },\n  createTask__colors: {\n    display: \"grid\",\n    gap: \"1.5rem\",\n    gridTemplateColumns: \"repeat(auto-fit, 6rem)\"\n  },\n  createTask__color: {\n    width: \"6rem\",\n    height: \"5rem\",\n    backgroundColor: \"transparent\",\n    cursor: \"pointer\",\n    borderRadius: \"1.2rem\",\n    transition: \"all 0.1s ease-in-out\",\n    position: \"relative\"\n  },\n  createTask__buttons: {\n    gap: \"1rem\",\n    marginTop: \"5rem\"\n  },\n  createTask__group: {\n    marginBottom: \"2rem\",\n    width: \"100%\"\n  },\n  createTask__err: {\n    color: \"red\",\n    padding: \"1rem\",\n    fontSize: \"1.4rem\"\n  },\n  createTask__itemColl: {\n    display: \"flex\",\n    alignItems: \"center\",\n    paddingLeft: \"1rem\",\n    gap\n  },\n  createTask__cbbox: {\n    color: \"var(--bg-btn-pink)\",\n    backgroundColor: \"transparent\",\n    width: \"1rem\",\n    height: \"1rem\"\n  },\n  createTask__lable: {\n    fontSize: \"1.6rem\"\n  }\n});\n\nconst CreateTask = ({\n  listCollections,\n  task,\n  toggleFunc,\n  displayVal,\n  handleChangeData\n}) => {\n  _s();\n\n  const classes = useStyles();\n  const [selectedOption, setSelectedOption] = useState([]);\n  const [allCollsConvert, setAllCollsConvert] = useState([]);\n\n  const HandleCreateTask = values => {\n    const title = values.title;\n    let listSelection = selectedOption.map(item => {\n      return {\n        id: item.value,\n        name: item.label\n      };\n    });\n    let categories = [...task.categories, ...listSelection];\n    console.log(categories); // axios({\n    //   method: \"patch\",\n    //   url: \"api/categories/${collection.id}\",\n    //   data: { title },\n    // })\n    //   .then((res) => {\n    //     console.log(res);\n    //   })\n    //   .catch((err) => {\n    //     const errMsg = err.response.data.message;\n    //     toast.error(errMsg);\n    //   });\n  };\n\n  const {\n    handleChange,\n    handleSubmit,\n    values,\n    errors\n  } = useTaskForm(HandleCreateTask);\n\n  const closeTabFunc = () => event => {\n    toggleFunc(false)();\n  };\n\n  const handleChangeOption = (optionsID, checked) => {\n    console.log(optionsID);\n    console.log(checked);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: clsx(classes.CreateTask, \"m-auto position-fixed\", !displayVal && \"d-none\"),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: clsx(classes.createTask__bg, \"w-100 h-100 position-absolute\"),\n      onClick: closeTabFunc(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: clsx(classes.createTask__container, \"position-absolute\"),\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        method: \"post\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"createTask__top d-flex w-100\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: clsx(classes.createTask__caption, \"mr-auto\"),\n            children: \"create Task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"createTask__close-btn\",\n            onClick: closeTabFunc(false),\n            children: /*#__PURE__*/_jsxDEV(\"ion-icon\", {\n              name: \"close\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: clsx(classes.createTask__group, \"bar-title\"),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: clsx(classes.createTask__title),\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"My Task\",\n            className: \"btn--outline w-100 py-3\",\n            style: {\n              fontSize: \"1.6rem\"\n            },\n            name: \"title\",\n            value: values.title,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 13\n          }, this), errors.title && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: clsx(classes.createTask__err),\n            children: [\"*\", errors.title]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: clsx(classes.createTask__group, \"bar-listColl\"),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: clsx(classes.createTask__title),\n            children: \"List Collection\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: clsx(classes.createTask__listColls),\n            children: listCollections.map(item => {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: clsx(classes.createTask__itemColl),\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  className: clsx(classes.createTask__checkbox)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 190,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: clsx(classes.createTask__lable),\n                  children: item.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 194,\n                  columnNumber: 21\n                }, this)]\n              }, item.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 19\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: clsx(classes.createTask__buttons, \"w-100 d-flex\"),\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"createTask__button button btn--none-border btn--hover-bg-gray-light ml-auto mb-0\",\n            style: {\n              backgroundColor: \"#3D3C50\"\n            },\n            type: \"submit\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"reset\",\n            className: \"createTask__button button btn--none-border btn--hover-bg-gray mb-0\",\n            onClick: closeTabFunc(),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 140,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CreateTask, \"nlVj/tkV0oIfk4PfPwo12xwm1q4=\", false, function () {\n  return [useStyles, useTaskForm];\n});\n\n_c = CreateTask;\nexport default CreateTask;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateTask\");","map":{"version":3,"sources":["D:/4.Document/Work/MonstarLab/Intern/ReactJS/todo/src/components/home/task/actions/createTask/CreateTask.js"],"names":["createUseStyles","clsx","useState","useEffect","axios","toast","useTaskForm","GetCollectionFunc","IsEmptyObject","useStyles","CreateTask","top","left","width","height","display","justifyContent","zIndex","color","createTask__bg","backgroundColor","opacity","createTask__container","minWidth","marginTop","padding","textAlign","borderRadius","createTask__caption","fontSize","textTransform","fontWeight","marginBottom","createTask__title","createTask__colors","gap","gridTemplateColumns","createTask__color","cursor","transition","position","createTask__buttons","createTask__group","createTask__err","createTask__itemColl","alignItems","paddingLeft","createTask__cbbox","createTask__lable","listCollections","task","toggleFunc","displayVal","handleChangeData","classes","selectedOption","setSelectedOption","allCollsConvert","setAllCollsConvert","HandleCreateTask","values","title","listSelection","map","item","id","value","name","label","categories","console","log","handleChange","handleSubmit","errors","closeTabFunc","event","handleChangeOption","optionsID","checked","createTask__listColls","createTask__checkbox"],"mappings":"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","sourcesContent":["// lib\r\nimport { createUseStyles } from \"react-jss\";\r\nimport clsx from \"clsx\";\r\nimport { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nimport useTaskForm from \"../services/useTaskForm\";\r\nimport GetCollectionFunc from \"../GetTasksFunc\";\r\n\r\nimport IsEmptyObject from \"../../../../../service/IsEmptyObject\";\r\n\r\nconst useStyles = createUseStyles({\r\n  CreateTask: {\r\n    top: \"0\",\r\n    left: \"0\",\r\n    width: \"100vw\",\r\n    height: \"100vh\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    zIndex: \"11\",\r\n    color: \"#FFFFFF\",\r\n  },\r\n  createTask__bg: {\r\n    backgroundColor: \"#000\",\r\n    opacity: \"70%\",\r\n  },\r\n  createTask__container: {\r\n    width: \"42rem\",\r\n    minWidth: \"48rem\",\r\n    marginTop: \"6rem\",\r\n    padding: \"2rem\",\r\n    backgroundColor: \"#1D1D27\",\r\n    textAlign: \"left\",\r\n    borderRadius: \"1.6rem\",\r\n  },\r\n  createTask__caption: {\r\n    fontSize: \"2rem\",\r\n    textTransform: \"capitalize\",\r\n    fontWeight: \"bold\",\r\n    marginBottom: \"2rem\",\r\n  },\r\n  createTask__title: {\r\n    fontSize: \"1.6rem\",\r\n    textTransform: \"capitalize\",\r\n    marginBottom: \"1rem\",\r\n  },\r\n  createTask__colors: {\r\n    display: \"grid\",\r\n    gap: \"1.5rem\",\r\n    gridTemplateColumns: \"repeat(auto-fit, 6rem)\",\r\n  },\r\n  createTask__color: {\r\n    width: \"6rem\",\r\n    height: \"5rem\",\r\n    backgroundColor: \"transparent\",\r\n    cursor: \"pointer\",\r\n    borderRadius: \"1.2rem\",\r\n    transition: \"all 0.1s ease-in-out\",\r\n    position: \"relative\",\r\n  },\r\n  createTask__buttons: {\r\n    gap: \"1rem\",\r\n    marginTop: \"5rem\",\r\n  },\r\n  createTask__group: {\r\n    marginBottom: \"2rem\",\r\n    width: \"100%\",\r\n  },\r\n  createTask__err: {\r\n    color: \"red\",\r\n    padding: \"1rem\",\r\n    fontSize: \"1.4rem\",\r\n  },\r\n  createTask__itemColl:{\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    paddingLeft : \"1rem\",\r\n    gap\r\n  },\r\n  createTask__cbbox: {\r\n    color: \"var(--bg-btn-pink)\",\r\n    backgroundColor: \"transparent\",\r\n    width: \"1rem\",\r\n    height: \"1rem\",\r\n  },\r\n  createTask__lable:{\r\n    fontSize: \"1.6rem\",\r\n  }\r\n});\r\n\r\nconst CreateTask = ({\r\n  listCollections,\r\n  task,\r\n  toggleFunc,\r\n  displayVal,\r\n  handleChangeData,\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  const [selectedOption, setSelectedOption] = useState([]);\r\n  const [allCollsConvert, setAllCollsConvert] = useState([]);\r\n\r\n  const HandleCreateTask = (values) => {\r\n    const title = values.title;\r\n\r\n    let listSelection = selectedOption.map((item) => {\r\n      return { id: item.value, name: item.label };\r\n    });\r\n    let categories = [...task.categories, ...listSelection];\r\n\r\n    console.log(categories);\r\n    // axios({\r\n    //   method: \"patch\",\r\n    //   url: \"api/categories/${collection.id}\",\r\n    //   data: { title },\r\n    // })\r\n    //   .then((res) => {\r\n    //     console.log(res);\r\n    //   })\r\n    //   .catch((err) => {\r\n    //     const errMsg = err.response.data.message;\r\n    //     toast.error(errMsg);\r\n    //   });\r\n  };\r\n\r\n  const { handleChange, handleSubmit, values, errors } =\r\n    useTaskForm(HandleCreateTask);\r\n\r\n  const closeTabFunc = () => (event) => {\r\n    toggleFunc(false)();\r\n  };\r\n\r\n  const handleChangeOption = (optionsID, checked) => {\r\n    console.log(optionsID);\r\n    console.log(checked);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={clsx(\r\n        classes.CreateTask,\r\n        \"m-auto position-fixed\",\r\n        !displayVal && \"d-none\"\r\n      )}\r\n    >\r\n      <div\r\n        className={clsx(classes.createTask__bg, \"w-100 h-100 position-absolute\")}\r\n        onClick={closeTabFunc(false)}\r\n      ></div>\r\n\r\n      <div className={clsx(classes.createTask__container, \"position-absolute\")}>\r\n        <form method=\"post\" onSubmit={handleSubmit}>\r\n          <div className=\"createTask__top d-flex w-100\">\r\n            <div className={clsx(classes.createTask__caption, \"mr-auto\")}>\r\n              create Task\r\n            </div>\r\n            <div className=\"createTask__close-btn\" onClick={closeTabFunc(false)}>\r\n              <ion-icon name=\"close\"></ion-icon>\r\n            </div>\r\n          </div>\r\n\r\n          <div className={clsx(classes.createTask__group, \"bar-title\")}>\r\n            <div className={clsx(classes.createTask__title)}>Title</div>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"My Task\"\r\n              className=\"btn--outline w-100 py-3\"\r\n              style={{ fontSize: \"1.6rem\" }}\r\n              name=\"title\"\r\n              value={values.title}\r\n              onChange={handleChange}\r\n            />\r\n            {errors.title && (\r\n              <div className={clsx(classes.createTask__err)}>*{errors.title}</div>\r\n            )}\r\n          </div>\r\n\r\n          <div className={clsx(classes.createTask__group, \"bar-listColl\")}>\r\n            <div className={clsx(classes.createTask__title)}>\r\n              List Collection\r\n            </div>\r\n            <div className={clsx(classes.createTask__listColls)}>\r\n              {listCollections.map((item) => {\r\n                return (\r\n                  <div\r\n                    key={item.id}\r\n                    className={clsx(classes.createTask__itemColl)}\r\n                  >\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      className={clsx(classes.createTask__checkbox)}\r\n                    />\r\n                    <span className={clsx(classes.createTask__lable)}>\r\n                      {item.name}\r\n                    </span>\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n          </div>\r\n\r\n          <div className={clsx(classes.createTask__buttons, \"w-100 d-flex\")}>\r\n            <button\r\n              className=\"createTask__button button btn--none-border btn--hover-bg-gray-light ml-auto mb-0\"\r\n              style={{ backgroundColor: \"#3D3C50\" }}\r\n              type=\"submit\"\r\n            >\r\n              Submit\r\n            </button>\r\n            <button\r\n              type=\"reset\"\r\n              className=\"createTask__button button btn--none-border btn--hover-bg-gray mb-0\"\r\n              onClick={closeTabFunc()}\r\n            >\r\n              Cancel\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateTask;\r\n"]},"metadata":{},"sourceType":"module"}