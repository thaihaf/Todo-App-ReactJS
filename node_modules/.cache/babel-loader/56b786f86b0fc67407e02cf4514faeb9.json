{"ast":null,"code":"import _defineProperty from\"D:/4.Document/Work/MonstarLab/Intern/ReactJS/todo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"D:/4.Document/Work/MonstarLab/Intern/ReactJS/todo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"D:/4.Document/Work/MonstarLab/Intern/ReactJS/todo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState}from\"react\";import IsEmptyObject from\"../../../service/js/IsEmptyObject\";var useTaskForm=function useTaskForm(HandleChangePassword){var _useState=useState({// oldpass: \"\",\nnewpass:\"\",repass:\"\"}),_useState2=_slicedToArray(_useState,2),values=_useState2[0],setValues=_useState2[1];var _useState3=useState({}),_useState4=_slicedToArray(_useState3,2),errors=_useState4[0],setErrors=_useState4[1];var validateInfo=function validateInfo(values){var errors={};// const oldpassTemp = values.oldpass.trim();\nvar newpassTemp=values.newpass.trim();var repassTemp=values.repass.trim();// if (!oldpassTemp) {\n//   errors.oldpass = \"Oldpass must be required\";\n// } else if (oldpassTemp.length < 6) {\n//   errors.oldpass = \"Oldpass to be 6 charactor or more\";\n// }\n// else if (oldpassTemp !== user.password) {\n//   errors.oldpass = \"Oldpass not correct\";\n// }\nif(!newpassTemp){errors.newpass=\"Newpass must be required\";}else if(newpassTemp.length<6){errors.newpass=\"Newpass to be 6 charactor or more\";}// else if (newpassTemp === oldpassTemp) {\n//   errors.newpass = \"Newpass must be difference from oldpass\";\n// }\nif(!repassTemp){errors.repass=\"Repass must be required\";}else if(repassTemp.length<6){errors.repass=\"Repass to be 6 charactor or more\";}else if(repassTemp!==newpassTemp){errors.repass=\"Repass must be math with newpass\";}return errors;};var handleChange=function handleChange(e){var _e$target=e.target,name=_e$target.name,value=_e$target.value;setValues(_objectSpread(_objectSpread({},values),{},_defineProperty({},name,value)));};var handleSubmit=function handleSubmit(e){e.preventDefault();var userTemp=JSON.parse(localStorage.getItem(\"user\"));var errorsTemp=validateInfo(values);setErrors(errorsTemp);if(IsEmptyObject(errorsTemp)){HandleChangePassword(values,userTemp);setValues({// oldpass: \"\",\nnewpass:\"\",repass:\"\"});}};return{handleChange:handleChange,handleSubmit:handleSubmit,values:values,errors:errors};};export default useTaskForm;","map":{"version":3,"sources":["D:/4.Document/Work/MonstarLab/Intern/ReactJS/todo/src/components/users/services/usePasswordForm.js"],"names":["useState","IsEmptyObject","useTaskForm","HandleChangePassword","newpass","repass","values","setValues","errors","setErrors","validateInfo","newpassTemp","trim","repassTemp","length","handleChange","e","target","name","value","handleSubmit","preventDefault","userTemp","JSON","parse","localStorage","getItem","errorsTemp"],"mappings":"yfAAA,OAASA,QAAT,KAAyB,OAAzB,CAEA,MAAOC,CAAAA,aAAP,KAA0B,mCAA1B,CAEA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,oBAAD,CAA0B,eAChBH,QAAQ,CAAC,CACnC;AACAI,OAAO,CAAE,EAF0B,CAGnCC,MAAM,CAAE,EAH2B,CAAD,CADQ,wCACrCC,MADqC,eAC7BC,SAD6B,8BAMhBP,QAAQ,CAAC,EAAD,CANQ,yCAMrCQ,MANqC,eAM7BC,SAN6B,eAQ5C,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACJ,MAAD,CAAY,CAC/B,GAAIE,CAAAA,MAAM,CAAG,EAAb,CAEA;AACA,GAAMG,CAAAA,WAAW,CAAGL,MAAM,CAACF,OAAP,CAAeQ,IAAf,EAApB,CACA,GAAMC,CAAAA,UAAU,CAAGP,MAAM,CAACD,MAAP,CAAcO,IAAd,EAAnB,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,GAAI,CAACD,WAAL,CAAkB,CAChBH,MAAM,CAACJ,OAAP,CAAiB,0BAAjB,CACD,CAFD,IAEO,IAAIO,WAAW,CAACG,MAAZ,CAAqB,CAAzB,CAA4B,CACjCN,MAAM,CAACJ,OAAP,CAAiB,mCAAjB,CACD,CACD;AACA;AACA;AAEA,GAAI,CAACS,UAAL,CAAiB,CACfL,MAAM,CAACH,MAAP,CAAgB,yBAAhB,CACD,CAFD,IAEO,IAAIQ,UAAU,CAACC,MAAX,CAAoB,CAAxB,CAA2B,CAChCN,MAAM,CAACH,MAAP,CAAgB,kCAAhB,CACD,CAFM,IAEA,IAAIQ,UAAU,GAAKF,WAAnB,CAAgC,CACrCH,MAAM,CAACH,MAAP,CAAgB,kCAAhB,CACD,CAED,MAAOG,CAAAA,MAAP,CACD,CAlCD,CAmCA,GAAMO,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,CAAD,CAAO,eACFA,CAAC,CAACC,MADA,CAClBC,IADkB,WAClBA,IADkB,CACZC,KADY,WACZA,KADY,CAE1BZ,SAAS,gCAAMD,MAAN,wBAAeY,IAAf,CAAsBC,KAAtB,GAAT,CACD,CAHD,CAIA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACJ,CAAD,CAAO,CAC1BA,CAAC,CAACK,cAAF,GAEA,GAAMC,CAAAA,QAAQ,CAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAAjB,CAEA,GAAIC,CAAAA,UAAU,CAAGjB,YAAY,CAACJ,MAAD,CAA7B,CACAG,SAAS,CAACkB,UAAD,CAAT,CAEA,GAAI1B,aAAa,CAAC0B,UAAD,CAAjB,CAA+B,CAC7BxB,oBAAoB,CAACG,MAAD,CAASgB,QAAT,CAApB,CACAf,SAAS,CAAC,CACR;AACAH,OAAO,CAAE,EAFD,CAGRC,MAAM,CAAE,EAHA,CAAD,CAAT,CAKD,CACF,CAhBD,CAkBA,MAAO,CAAEU,YAAY,CAAZA,YAAF,CAAgBK,YAAY,CAAZA,YAAhB,CAA8Bd,MAAM,CAANA,MAA9B,CAAsCE,MAAM,CAANA,MAAtC,CAAP,CACD,CAlED,CAoEA,cAAeN,CAAAA,WAAf","sourcesContent":["import { useState } from \"react\";\r\n\r\nimport IsEmptyObject from \"../../../service/js/IsEmptyObject\";\r\n\r\nconst useTaskForm = (HandleChangePassword) => {\r\n  const [values, setValues] = useState({\r\n    // oldpass: \"\",\r\n    newpass: \"\",\r\n    repass: \"\",\r\n  });\r\n  const [errors, setErrors] = useState({});\r\n\r\n  const validateInfo = (values) => {\r\n    let errors = {};\r\n\r\n    // const oldpassTemp = values.oldpass.trim();\r\n    const newpassTemp = values.newpass.trim();\r\n    const repassTemp = values.repass.trim();\r\n\r\n    // if (!oldpassTemp) {\r\n    //   errors.oldpass = \"Oldpass must be required\";\r\n    // } else if (oldpassTemp.length < 6) {\r\n    //   errors.oldpass = \"Oldpass to be 6 charactor or more\";\r\n    // }\r\n    // else if (oldpassTemp !== user.password) {\r\n    //   errors.oldpass = \"Oldpass not correct\";\r\n    // }\r\n\r\n    if (!newpassTemp) {\r\n      errors.newpass = \"Newpass must be required\";\r\n    } else if (newpassTemp.length < 6) {\r\n      errors.newpass = \"Newpass to be 6 charactor or more\";\r\n    }\r\n    // else if (newpassTemp === oldpassTemp) {\r\n    //   errors.newpass = \"Newpass must be difference from oldpass\";\r\n    // }\r\n\r\n    if (!repassTemp) {\r\n      errors.repass = \"Repass must be required\";\r\n    } else if (repassTemp.length < 6) {\r\n      errors.repass = \"Repass to be 6 charactor or more\";\r\n    } else if (repassTemp !== newpassTemp) {\r\n      errors.repass = \"Repass must be math with newpass\";\r\n    }\r\n\r\n    return errors;\r\n  };\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setValues({ ...values, [name]: value });\r\n  };\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const userTemp = JSON.parse(localStorage.getItem(\"user\"));\r\n\r\n    let errorsTemp = validateInfo(values);\r\n    setErrors(errorsTemp);\r\n\r\n    if (IsEmptyObject(errorsTemp)) {\r\n      HandleChangePassword(values, userTemp);\r\n      setValues({\r\n        // oldpass: \"\",\r\n        newpass: \"\",\r\n        repass: \"\",\r\n      });\r\n    }\r\n  };\r\n\r\n  return { handleChange, handleSubmit, values, errors };\r\n};\r\n\r\nexport default useTaskForm;\r\n"]},"metadata":{},"sourceType":"module"}